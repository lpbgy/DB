################################################################################
# WL#7169 Semisync: make master wait for more than one slave to ack back
#
# The worklog added semisync master variable
# rpl_semi_sync_master_wait_for_slave_count. The variable controls how many acks
# from different slaves the transaction should wait for.
#
# The test verifies rpl_semi_sync_master_wait_for_slave_count works well.
################################################################################
--source include/not_group_replication_plugin.inc

--let rpl_topology=1->2, 1->3
--source include/rpl_init.inc
CREATE TABLE t1(c1 INT);
--source include/rpl_sync.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--source include/install_semisync_master.inc

--echo ####################################################################
--echo # Test Case: check the thread_pool_size of threadpool mode
--echo ####################################################################
--let $assert_variable_name= thread_pool_size
--let $assert_variable_value= 24
--source include/assert_variable.inc

# It is for coverage test to cover the debug code.
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_timeout = 1000;

create database if not exists abczyy1;
create table abczyy1.tb1(a int key, b int);

create procedure abczyy1.sp1() show quicksync status;

create user zyy_test@localhost;
grant select on *.* to zyy_test@localhost;
connect (zyy_test_con_1, localhost, zyy_test,,);
connect (conn1,localhost,root,,);

--echo ###################################################################
--echo # Test Case: add slave 2 3
--echo ###################################################################
--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
while($clients != 2)
{
  sleep 1;
  --let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
}

--echo ###################################################################
--echo # init quicksync
--echo ###################################################################
set global rpl_semi_sync_master_group1 = '1,2,3:2';
set global rpl_semi_sync_master_wait_cond_hwm = '1:0';
SET GLOBAL rpl_semi_sync_master_enabled = 1;


--echo ###################################################################
--echo # Test Case 1: show quicksync status ok
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
show quicksync status;


--echo ###################################################################
--echo # Test Case 2: show quicksync status with quick_sync leader
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
set global rpl_semi_sync_master_wait_cond_hwm = '2:0';
set global rpl_semi_sync_master_timeout = 5000;
--send insert into abczyy1.tb1(a,b) values(101,101);
sleep  2;

--let $rpl_connection_name= default
--source include/rpl_connection.inc
show quicksync status;

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--reap
show quicksync status;


--echo ###################################################################
--echo # Test Case 3: show quicksync status with quick_sync leader with block_stmt
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
set global rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_wait_cond_hwm = '2:0';
set global rpl_semi_sync_master_timeout = 5000;
set global rpl_semi_sync_master_enabled = 1;
send;
delimiter //;
start transaction;
insert into abczyy1.tb1(a,b) values(102,102);
commit;
//
delimiter ;//
sleep  2;

--let $rpl_connection_name= default
--source include/rpl_connection.inc
show quicksync status;

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--reap
show quicksync status;


--echo ###################################################################
--echo # Test Case 4: show quicksync status with quick_sync leader with follower
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
set global rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_wait_cond_hwm = '2:0';
set global rpl_semi_sync_master_timeout = 5000;
set global rpl_semi_sync_master_enabled = 1;
set global binlog_group_commit_sync_no_delay_count = 30;
set global binlog_group_commit_sync_delay = 1000000;
--send insert into abczyy1.tb1(a,b) values(103,103)

connection conn1;
--send insert into abczyy1.tb1(a,b) values(104,104)

--let $rpl_connection_name= default
--source include/rpl_connection.inc
sleep 2;
show quicksync status;

connection conn1;
--reap
show quicksync status;

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--reap
show quicksync status;


--echo ###################################################################
--echo # Test Case 5: show quicksync status without process access
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
set global rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_wait_cond_hwm = '2:0';
set global rpl_semi_sync_master_timeout = 5000;
set global rpl_semi_sync_master_enabled = 1;
--send insert into abczyy1.tb1(a,b) values(105,105)

connection zyy_test_con_1;
sleep 2;
show quicksync status;

connection conn1;
show quicksync status;

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--reap
show quicksync status;


--echo ###################################################################
--echo # Test Case 6: show quicksync status in sp
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
set global rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_wait_cond_hwm = '2:0';
set global rpl_semi_sync_master_timeout = 5000;
set global rpl_semi_sync_master_enabled = 1;
--send insert into abczyy1.tb1(a,b) values(106,106)

connection conn1;
sleep 2;
call abczyy1.sp1();

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--reap
show quicksync status;



--echo ########################################################################
--echo # Coverage Test
--echo ########################################################################
# Nothing is changed if the new value equals to the original value
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 2;
set global binlog_group_commit_sync_no_delay_count = 0;
set global binlog_group_commit_sync_delay = 0;

# Ack array should be cleaned when disabling semisync master
SET GLOBAL rpl_semi_sync_master_enabled= OFF;

--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

# Ack array should be freed when uninstalling semisync master
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--source include/uninstall_semisync_master.inc
# end

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

disconnect zyy_test_con_1;
disconnect conn1;

drop user zyy_test@localhost;
drop procedure abczyy1.sp1;
drop database if exists abczyy1;
DROP TABLE t1;

CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
--source include/rpl_end.inc
