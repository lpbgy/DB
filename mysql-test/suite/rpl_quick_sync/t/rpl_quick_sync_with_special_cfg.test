################################################################################
# WL#7169 Semisync: make master wait for more than one slave to ack back
#
# The worklog added semisync master variable
# rpl_semi_sync_master_wait_for_slave_count. The variable controls how many acks
# from different slaves the transaction should wait for.
#
# The test verifies rpl_semi_sync_master_wait_for_slave_count works well.
################################################################################
--source include/not_group_replication_plugin.inc

--let rpl_topology=1->2, 1->3, 1->4, 1->5
--source include/rpl_init.inc
CREATE TABLE t1(c1 INT);
--source include/rpl_sync.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--source include/install_semisync_master.inc

--echo ####################################################################
--echo # Test Case: check the thread_pool_size of threadpool mode
--echo ####################################################################
--let $assert_variable_name= thread_pool_size
--let $assert_variable_value= 24
--source include/assert_variable.inc

# It is for coverage test to cover the debug code.
SET GLOBAL rpl_semi_sync_master_trace_level= 255;
set global rpl_semi_sync_master_wait_no_slave = 0;
set global rpl_semi_sync_master_wait_cond_hwm = '2:0';
set global rpl_semi_sync_master_wait_cond_lwm = '1:0';
set global rpl_semi_sync_master_group1 = '1,2,3:1';
set global rpl_semi_sync_master_group2 = '4,5:2';

--echo ###################################################################
--echo # Test Case: add slave 2 3 4 5
--echo ###################################################################
--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_4
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_5
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
while($clients != 4)
{
  sleep 10;
  --let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
}
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc

--echo ###################################################################
--echo # Test Case: sync_binlog=0, will call quick_sync_commitTrx func
--echo ###################################################################
--source include/save_semisync_yesno_tx.inc
set global sync_binlog = 0;
create database abczyy;
create table abczyy.tb1(a int key, b int);
insert into abczyy.tb1(a,b) values(1,1),(2,2),(3,3);
insert into abczyy.tb1(a,b) values(4,4);
drop database abczyy;
--let $semi_sync_yes_tx_increment= 5
--source include/assert_semisync_yesno_tx_increment.inc
set global sync_binlog = 1;


--echo ###################################################################
--echo # Test Case: wait_point=AFTER_COMMIT, will call commitTrx func
--echo ###################################################################
--source include/save_semisync_yesno_tx.inc
set global rpl_semi_sync_master_wait_point = AFTER_COMMIT;
create database abczyy;
create table abczyy.tb1(a int key, b int);
insert into abczyy.tb1(a,b) values(1,1),(2,2),(3,3);
insert into abczyy.tb1(a,b) values(4,4);
drop database abczyy;
--let $semi_sync_yes_tx_increment= 5
--source include/assert_semisync_yesno_tx_increment.inc
set global rpl_semi_sync_master_wait_point = AFTER_SYNC;


--echo ###################################################################
--echo # Test Case: binlog_order_commits=0, will call commitTrx func
--echo ###################################################################
--source include/save_semisync_yesno_tx.inc
set global binlog_order_commits = 0;
create database abczyy;
create table abczyy.tb1(a int key, b int);
insert into abczyy.tb1(a,b) values(1,1),(2,2),(3,3);
insert into abczyy.tb1(a,b) values(4,4);
drop database abczyy;
--let $semi_sync_yes_tx_increment= 5
--source include/assert_semisync_yesno_tx_increment.inc
set global binlog_order_commits = 1;


--echo ########################################################################
--echo # Coverage Test
--echo ########################################################################
# Nothing is changed if the new value equals to the original value
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 4;
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 4;

# Ack array should be cleaned when disabling semisync master
SET GLOBAL rpl_semi_sync_master_enabled= OFF;
SET GLOBAL rpl_semi_sync_master_enabled= OFF;
SET GLOBAL rpl_semi_sync_master_enabled= ON;
set global rpl_semi_sync_master_wait_no_slave= 1;

--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

--let $rpl_connection_name= server_4
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

--let $rpl_connection_name= server_5
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

# Ack array should be freed when uninstalling semisync master
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
while($clients != 0)
{
  sleep 10;
  --let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
}
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 0
--source include/assert_status.inc
--source include/uninstall_semisync_master.inc
# end

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
DROP TABLE t1;
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
--source include/rpl_end.inc
