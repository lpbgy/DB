################################################################################
# bug1: mutli-block has quick_sync sql and non qucik_sync sql.
# bug2: thd with qucij_sync sql will cause double remove connection.
#
################################################################################
--source include/not_group_replication_plugin.inc

--let rpl_topology=1->2, 1->3
--source include/rpl_init.inc
CREATE TABLE t1(c1 INT);
--source include/rpl_sync.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--source include/install_semisync_master.inc

CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");

--echo ####################################################################
--echo # Test Case: check the thread_pool_size of threadpool mode
--echo ####################################################################
--let $assert_variable_name= thread_pool_size
--let $assert_variable_value= 24
--source include/assert_variable.inc

# It is for coverage test to cover the debug code.
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_timeout = 1000;

--echo ###################################################################
--echo # Test Case: add slave 2 3
--echo ###################################################################
--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
while($clients != 2)
{
  sleep 1;
  --let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
}


SET GLOBAL rpl_semi_sync_master_enabled = 1;
set global rpl_semi_sync_master_timeout = 1000;

drop database if exists abczyy_temptable;
create database abczyy_temptable;
create table abczyy_temptable.tb1(a int key, b int);
create table abczyy_temptable.tb2(a int key, b int);
create table abczyy_temptable.tb3(a int key, b int);
insert into abczyy_temptable.tb1(a,b) values(1,1),(2,1),(3,1),(11,11),(12,11),(13,11),(111,111),(112,111),(113,111);
insert into abczyy_temptable.tb3(a,b) values(4,1),(5,1),(6,1),(14,11),(15,11),(16,11),(114,111),(115,111),(116,111);

set session sql_mode = STRICT_TRANS_TABLES;
select @@session.sql_mode;

--disable_warnings

--echo ###################################################################
--echo # Test Case 1: quick_sync with tmp_table in group by
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 group by(b);
select * from abczyy_temptable.tb2 order by a;
update abczyy_temptable.tb2 set b=1024 where a=(select a from abczyy_temptable.tb1 group by(b) limit 1);
select * from abczyy_temptable.tb2 order by a;
delete from abczyy_temptable.tb2 where a=(select a from abczyy_temptable.tb1 group by(b) limit 1);
select * from abczyy_temptable.tb2 order by a;
truncate table abczyy_temptable.tb2;

insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1;
select * from abczyy_temptable.tb2 order by a;
truncate table abczyy_temptable.tb2;


--echo ###################################################################
--echo # Test Case 2: quick_sync with tmp_table in union
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 union select * from abczyy_temptable.tb3;
select * from abczyy_temptable.tb2 order by a;
update abczyy_temptable.tb2 set b=1024 where a=(select a from abczyy_temptable.tb1 union select a from abczyy_temptable.tb3 limit 1);
select * from abczyy_temptable.tb2 order by a;
delete from abczyy_temptable.tb2 where a=(select a from abczyy_temptable.tb1 union select a from abczyy_temptable.tb3 limit 1);
select * from abczyy_temptable.tb2 order by a;
truncate table abczyy_temptable.tb2;

insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 order by a;
select * from abczyy_temptable.tb2 order by a;
truncate table abczyy_temptable.tb2;


--echo ###################################################################
--echo # Test Case 3: quick_sync with tmp_table in multi-block
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

--delimiter //
insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 group by(b);
delete from abczyy_temptable.tb2;
insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 union select * from abczyy_temptable.tb3;
delete from abczyy_temptable.tb2;
//
--delimiter ;


--echo ###################################################################
--echo # Test Case 4: quick_sync with tmp_table in prepare (prepare not support quick_sync)
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

prepare zyy_insert_stmt from 'insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 union select * from abczyy_temptable.tb3 limit ?';
set @var1 = 1;
execute zyy_insert_stmt using @var1;
select * from abczyy_temptable.tb2 order by a;
truncate table abczyy_temptable.tb2;

insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 union select * from abczyy_temptable.tb3;
prepare zyy_update_stmt from 'update abczyy_temptable.tb2 set b=1024 where a=(select a from abczyy_temptable.tb1 union select a from abczyy_temptable.tb3 limit ?)';
set @var1 = 1;
execute zyy_update_stmt using @var1;
select * from abczyy_temptable.tb2 order by a;

prepare zyy_delete_stmt from 'delete from abczyy_temptable.tb2 where a=(select a from abczyy_temptable.tb1 union select a from abczyy_temptable.tb3 limit ?)';
set @var1 = 1;
execute zyy_delete_stmt using @var1;
select * from abczyy_temptable.tb2 order by a;

truncate table abczyy_temptable.tb2;


--echo ###################################################################
--echo # Test Case 5: quick_sync with tmp_table in commit
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

start transaction;
insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 union select * from abczyy_temptable.tb3;
commit;
select * from abczyy_temptable.tb2 order by a;
truncate table abczyy_temptable.tb2;


start transaction;
insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 union select * from abczyy_temptable.tb3;
select * from abczyy_temptable.tb2 order by a;
delete from abczyy_temptable.tb2;
commit;


--echo ###################################################################
--echo # Test Case 6: quick_sync with tmp_table in implict commit
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

start transaction;
insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 union select * from abczyy_temptable.tb3;
select * from abczyy_temptable.tb2 order by a;
truncate table abczyy_temptable.tb2;
commit;

start transaction;
insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 group by(b);
truncate table abczyy_temptable.tb2;
select * from abczyy_temptable.tb2 order by a;
commit;


--echo ###################################################################
--echo # Test Case 7: quick_sync with tmp_table in procedure
--echo ###################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

--delimiter //
create procedure abczyy_temptable.load()
begin
insert into abczyy_temptable.tb2 select * from abczyy_temptable.tb1 group by(b);
select * from abczyy_temptable.tb2 order by a;
update abczyy_temptable.tb2 set b=1024 where a=(select a from abczyy_temptable.tb1 group by(b) limit 1);
select * from abczyy_temptable.tb2 order by a;
delete from abczyy_temptable.tb2 where a=(select a from abczyy_temptable.tb1 group by(b) limit 1);
select * from abczyy_temptable.tb2 order by a;
truncate table abczyy_temptable.tb2;
end;
//
--delimiter ;
call abczyy_temptable.load();
drop procedure if exists abczyy_temptable.load;



--echo ########################################################################
--echo # Test End
--echo ########################################################################
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
set global rpl_semi_sync_master_enabled = OFF;

--enable_warnings

--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
while($clients != 0)
{
  sleep 1;
  --let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
}

# Ack array should be freed when uninstalling semisync master
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--source include/uninstall_semisync_master.inc
# end

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
drop database if exists abczyy_temptable;
DROP TABLE t1;
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
CALL mtr.add_suppression('Unsafe statement written to the binary log');
--source include/rpl_end.inc
