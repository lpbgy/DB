################################################################################
# WL#7169 Semisync: make master wait for more than one slave to ack back
#
# The worklog added semisync master variable
# rpl_semi_sync_master_wait_for_slave_count. The variable controls how many acks
# from different slaves the transaction should wait for.
#
# The test verifies rpl_semi_sync_master_wait_for_slave_count works well.
################################################################################
--source include/not_group_replication_plugin.inc

--let rpl_topology=1->2, 1->3, 1->4, 1->5
--source include/rpl_init.inc
CREATE TABLE t1(c1 INT);
--source include/rpl_sync.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--source include/install_semisync_master.inc

--echo ####################################################################
--echo # Test Case: check the thread_pool_size of threadpool mode
--echo ####################################################################
--let $assert_variable_name= thread_pool_size
--let $assert_variable_value= 24
--source include/assert_variable.inc

# It is for coverage test to cover the debug code.
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_timeout = 1000;

--echo ###################################################################
--echo # Test Case: add slave 2 3
--echo ###################################################################
--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
--source include/install_semisync_slave.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
while($clients != 2)
{
  sleep 10;
  --let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
}

--echo ###################################################################
--echo # the base config and status for quick sync
--echo ###################################################################
set global rpl_semi_sync_master_wait_cond_hwm = '2:1';
set global rpl_semi_sync_master_wait_cond_lwm = '1:0';
set global rpl_semi_sync_master_group1 = '2,3:1';
set global rpl_semi_sync_master_group2 = '1,4:1';
set global rpl_semi_sync_master_enabled = ON;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_ACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE
--source include/assert.inc

create database if not exists abczyy1;
create table if not exists abczyy1.tb1(a int key, b int);
create user zyy_test@localhost;
grant CREATE,DROP,INSERT on *.* to zyy_test@localhost;


--echo ###################################################################
--echo # Test Case 1: execute DLL &&wait_no_slave=ON && err_flag=0
--echo ###################################################################
truncate table abczyy1.tb1;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_ACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE
--source include/assert.inc


--echo ###################################################################
--echo # Test Case 2: execute DML &&wait_no_slave=ON && err_flag=0
--echo ###################################################################
insert into abczyy1.tb1(a,b) values(1,1);

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_ACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE
--source include/assert.inc


--echo ######################################################################################
--echo # Test Case 3: execute DLL &&wait_no_slave=ON && err_flag from 0 to 2
--echo ######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

truncate table abczyy1.tb1;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_hwm='2:1';


--echo ######################################################################################
--echo # Test Case 4: execute DML &&wait_no_slave=ON && err_flag from 0 to 2
--echo ######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

insert into abczyy1.tb1(a,b) values(1,1);

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_hwm='2:1';


--echo ######################################################################################
--echo # Test Case 5: execute DLL &&wait_no_slave=ON && err_flag from 0 to 1
--echo ######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

truncate table abczyy1.tb1;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';


--echo ######################################################################################
--echo # Test Case 6: execute DML &&wait_no_slave=ON && err_flag from 0 to 1
--echo ######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

insert into abczyy1.tb1(a,b) values(1,1);

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';


--echo ######################################################################################
--echo # Test Case 7: execute DLL && err_flag=1
--echo ######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

truncate table abczyy1.tb1;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;


--echo ######################################################################################
--echo # Test Case 8: execute DML && err_flag=1
--echo ######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

insert into abczyy1.tb1(a,b) values(1,1);

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;


--echo ######################################################################################
--echo # Test Case 9: execute DLL && err_flag=1 && user without root privalige
--echo ######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

connect (zyy_test_con_1, localhost, zyy_test,,);
-- error ER_QUICK_SYNC_BELOW_LWM_ALARM
truncate table abczyy1.tb1;
disconnect zyy_test_con_1;
connection default;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;


--echo ######################################################################################
--echo # Test Case 10: execute DML && err_flag=1 && user without root privalige
--echo ######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

connect (zyy_test_con_1, localhost, zyy_test,,);
-- error ER_QUICK_SYNC_BELOW_LWM_ALARM
insert into abczyy1.tb1(a,b) values(1,1);
disconnect zyy_test_con_1;
connection default;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 2
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 1
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;



--echo ######################################################################################
--echo # Test Case 11: execute DLL && err_flag=2
--echo ######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='1:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

truncate table abczyy1.tb1;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;


--echo ######################################################################################
--echo # Test Case 12: execute DML && err_flag=2
--echo ######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='1:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

insert into abczyy1.tb1(a,b) values(1,1);

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;


--echo ######################################################################################
--echo # Test Case 13: execute DLL && err_flag=2 && user without root privalige
--echo ######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='1:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

connect (zyy_test_con_1, localhost, zyy_test,,);
truncate table abczyy1.tb1;
disconnect zyy_test_con_1;
connection default;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;


--echo ######################################################################################
--echo # Test Case 14: execute DML && err_flag=2 && user without root privalige
--echo ######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='1:0';

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

connect (zyy_test_con_1, localhost, zyy_test,,);
insert into abczyy1.tb1(a,b) values(1,1);
disconnect zyy_test_con_1;
connection default;

--let $assert_status_name= Rpl_semi_sync_master_active_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_stat_master_flag
--let $assert_status_value= 0
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_current_wait_groups
--let $assert_status_value= 1
--source include/assert_status.inc
--let $assert_status_name= Rpl_semi_sync_master_err_flag
--let $assert_status_value= 2
--source include/assert_status.inc
--let $group1_status_expect= 2:GROUP_ACTIVE
--let $group1_status= [show status like "Rpl_semi_sync_master_group1_status", Value, 1]
--let assert_cond= "$group1_status" like "$group1_status_expect"
--let assert_text= Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE
--source include/assert.inc
--let $group2_status_expect= 0:GROUP_UNACTIVE
--let $group2_status= [show status like "Rpl_semi_sync_master_group2_status", Value, 1]
--let assert_cond= "$group2_status" like "$group2_status_expect"
--let assert_text= Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE
--source include/assert.inc

set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;




--echo ########################################################################
--echo # Coverage Test
--echo ########################################################################
# Nothing is changed if the new value equals to the original value
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 4;
drop user zyy_test@localhost;

# Ack array should be cleaned when disabling semisync master
SET GLOBAL rpl_semi_sync_master_enabled= OFF;

--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
--source include/uninstall_semisync_slave.inc

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
while($clients != 0)
{
  sleep 10;
  --let $clients= query_get_value(show status like "Rpl_semi_sync_master_clients", Value, 1)
}

# Ack array should be freed when uninstalling semisync master
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
--source include/uninstall_semisync_master.inc
# end

--let $rpl_connection_name= server_1
--source include/rpl_connection.inc
DROP TABLE t1;
drop database if exists abczyy1;
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
--source include/rpl_end.inc
