include/rpl_init.inc [topology=1->2, 1->3, 1->4, 1->5]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
CREATE TABLE t1(c1 INT);
include/rpl_sync.inc
[connection server_1]
include/install_semisync_master.inc
####################################################################
# Test Case: check the thread_pool_size of threadpool mode
####################################################################
include/assert.inc [ should be 24]
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_timeout = 1000;
###################################################################
# Test Case: add slave 2 3
###################################################################
[connection server_2]
include/install_semisync_slave.inc
[connection server_3]
include/install_semisync_slave.inc
[connection server_1]
SET GLOBAL rpl_semi_sync_master_enabled = 1;
create database if not exists abczyy1;
create table if not exists abczyy1.tb1(a int key, b int);
###################################################################
# Test Case 1: set quick_sync_enabled invalid
###################################################################
include/assert.inc [ should be 1]
include/assert.inc [ should be 1]
set global rpl_semi_sync_master_quick_sync_enabled = 0;
ERROR 42000: Variable 'rpl_semi_sync_master_quick_sync_enabled' can't be set to the value of '0'
include/assert.inc [ should be 1]
set global rpl_semi_sync_master_quick_sync_enabled = 1;
ERROR 42000: Variable 'rpl_semi_sync_master_quick_sync_enabled' can't be set to the value of '1'
include/assert.inc [ should be 1]
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
ERROR 42000: Variable 'rpl_semi_sync_master_quick_sync_enabled' can't be set to the value of 'OFF'
include/assert.inc [ should be 1]
set global rpl_semi_sync_master_quick_sync_enabled = ON;
ERROR 42000: Variable 'rpl_semi_sync_master_quick_sync_enabled' can't be set to the value of 'ON'
include/assert.inc [ should be 1]
###################################################################
# Test Case 2: set quick_sync_enabled valid
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
include/assert.inc [ should be 0]
include/assert.inc [ should be 1]
set global rpl_semi_sync_master_quick_sync_enabled = 0;
include/assert.inc [ should be 0]
set global rpl_semi_sync_master_quick_sync_enabled = 1;
include/assert.inc [ should be 1]
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
include/assert.inc [ should be 0]
set global rpl_semi_sync_master_quick_sync_enabled = ON;
include/assert.inc [ should be 1]
###################################################################
# Test Case 3: wait_for_slave_count=1
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_enabled = ON;
include/assert.inc [ should be 1]
insert into abczyy1.tb1(a,b) values(1,1);
include/assert.inc [Rpl_semi_sync_master_status should be ON]
###################################################################
# Test Case 4: wait_for_slave_count=2
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_wait_for_slave_count = 2;
set global rpl_semi_sync_master_enabled = ON;
include/assert.inc [ should be 2]
truncate table abczyy1.tb1;
include/assert.inc [Rpl_semi_sync_master_status should be ON]
###################################################################
# Test Case 5: wait_for_slave_count=3
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_enabled = ON;
set global rpl_semi_sync_master_wait_for_slave_count = 3;
include/assert.inc [ should be 3]
insert into abczyy1.tb1(a,b) values(1,1);
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
###################################################################
# Test Case 6: wwait_no_slave = OFF && clients!=0
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_enabled = ON;
set global rpl_semi_sync_master_wait_for_slave_count = 3;
include/assert.inc [ should be 3]
set global rpl_semi_sync_master_wait_no_slave = OFF;
include/assert.inc [Rpl_semi_sync_master_status should be ON]
###################################################################
# Test Case 7: wwait_no_slave = ON
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_wait_no_slave = OFF;
set global rpl_semi_sync_master_enabled = ON;
set global rpl_semi_sync_master_wait_for_slave_count = 3;
truncate table abczyy1.tb1;
set global rpl_semi_sync_master_wait_no_slave = OFF;
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
set global rpl_semi_sync_master_wait_no_slave = ON;
include/assert.inc [Rpl_semi_sync_master_status should be ON]
###################################################################
# Test Case 8: rpl_semi_sync_master_enabled = ON && wait_for_slave_count=3
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_wait_no_slave = OFF;
set global rpl_semi_sync_master_wait_for_slave_count = 3;
set global rpl_semi_sync_master_enabled = ON;
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
###################################################################
# Test Case 9: rpl_semi_sync_master_enabled = ON && wait_for_slave_count=2
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_wait_no_slave = OFF;
set global rpl_semi_sync_master_wait_for_slave_count = 2;
set global rpl_semi_sync_master_enabled = ON;
include/assert.inc [Rpl_semi_sync_master_status should be ON]
###################################################################
# Test Case 10: rpl_semi_sync_master_enabled = OFF
###################################################################
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_wait_no_slave = OFF;
set global rpl_semi_sync_master_wait_for_slave_count = 2;
set global rpl_semi_sync_master_enabled = ON;
set global rpl_semi_sync_master_enabled = OFF;
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
########################################################################
# Test Case 11: wait_no_slave = OFF && clients==0
########################################################################
[connection server_2]
include/uninstall_semisync_slave.inc
[connection server_3]
include/uninstall_semisync_slave.inc
[connection server_1]
set global rpl_semi_sync_master_enabled = OFF;
set global rpl_semi_sync_master_wait_no_slave = ON;
set global rpl_semi_sync_master_quick_sync_enabled = OFF;
set global rpl_semi_sync_master_enabled = ON;
include/assert.inc [Rpl_semi_sync_master_status should be ON]
set global rpl_semi_sync_master_wait_no_slave = OFF;
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
########################################################################
# Coverage Test
########################################################################
set global rpl_semi_sync_master_enabled = OFF;
[connection server_1]
include/uninstall_semisync_master.inc
[connection server_1]
drop database if exists abczyy1;
DROP TABLE t1;
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
include/rpl_end.inc
