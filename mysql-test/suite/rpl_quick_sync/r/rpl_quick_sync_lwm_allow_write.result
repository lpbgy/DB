include/rpl_init.inc [topology=1->2, 1->3, 1->4, 1->5]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
CREATE TABLE t1(c1 INT);
include/rpl_sync.inc
[connection server_1]
include/install_semisync_master.inc
####################################################################
# Test Case: check the thread_pool_size of threadpool mode
####################################################################
include/assert.inc [ should be 24]
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_timeout = 1000;
###################################################################
# Test Case: add slave 2 3
###################################################################
[connection server_2]
include/install_semisync_slave.inc
[connection server_3]
include/install_semisync_slave.inc
[connection server_1]
###################################################################
# the base config and status for quick sync
###################################################################
set global rpl_semi_sync_master_wait_cond_hwm = '2:1';
set global rpl_semi_sync_master_wait_cond_lwm = '1:0';
set global rpl_semi_sync_master_group1 = '2,3:1';
set global rpl_semi_sync_master_group2 = '1,4:1';
set global rpl_semi_sync_master_enabled = ON;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE]
drop database if exists fuys_db;
Warnings:
Note	1008	Can't drop database 'fuys_db'; database doesn't exist
create database fuys_db;
create table fuys_db.t(a int);
create user fuys@'%';
grant Create, Insert, Update, Delete, Drop, Select ON *.* to 'fuys'@'%' with grant option;
###################################################################
# Test Case 1:the global variable service_available_even_bellow_lwm must be default OFF
###################################################################
include/assert.inc [ should be 0]
###################################################################
# Test Case 2: lwm_allow_write=OFF and err_flag=0 and user with super privalige
###################################################################
insert into fuys_db.t values (2);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE]
###################################################################
# Test Case 3: lwm_allow_write=OFF and err_flag=0 and user without super privalige
###################################################################
insert into fuys_db.t values (3);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE]
######################################################################################
# Test Case 4: lwm_allow_write=OFF and err_flag from 0 to 2 and user with super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (4);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 5: lwm_allow_write=OFF and err_flag from 0 to 2 and user without super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (5);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 6: lwm_allow_write=OFF and err_flag from 0 to 1 and user with super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (6);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_no_slave = ON;
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 7: lwm_allow_write=OFF and wait_no_slave = ON and err_flag from 0 to 1 and user without super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (7);
truncate table fuys_db.t;
ERROR HY000: Active groups is less than the lwm cond, only support read.
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_no_slave = OFF;
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 8: lwm_allow_write=OFF and wait_no_slave = OFF and err_flag from 0 to 1 and user without super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (8);
ERROR HY000: Active groups is less than the lwm cond, only support read.
truncate table fuys_db.t;
ERROR HY000: Active groups is less than the lwm cond, only support read.
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global service_available_even_bellow_lwm = ON;
set global rpl_semi_sync_master_wait_cond_lwm = '1:0';
set global rpl_semi_sync_master_wait_cond_hwm = '2:1';
set global rpl_semi_sync_master_wait_no_slave = ON;
###################################################################
# Test Case 9: lwm_allow_write=ON and err_flag=0 and user with super privalige
###################################################################
insert into fuys_db.t values (9);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE]
###################################################################
# Test Case 10: lwm_allow_write=ON and err_flag=0 and user without super privalige
###################################################################
insert into fuys_db.t values (10);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE]
######################################################################################
# Test Case 11: lwm_allow_write=ON and err_flag from 0 to 2 and user with super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (11);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 12: lwm_allow_write=ON and err_flag from 0 to 2 and user without super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (12);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 13: lwm_allow_write=ON and err_flag from 0 to 1 and user with super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (13);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_no_slave = ON;
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 14: lwm_allow_write=ON and wait_no_slave = ON and err_flag from 0 to 1 and user without super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into fuys_db.t values (14);
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_no_slave = OFF;
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 15: lwm_allow_write=ON and wait_no_slave = OFF and err_flag from 0 to 1 and user without super privalige
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
truncate table fuys_db.t;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
########################################################################
# Coverage Test
########################################################################
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 4;
drop user fuys@'%';
SET GLOBAL rpl_semi_sync_master_enabled= OFF;
set global service_available_even_bellow_lwm = OFF;
[connection server_2]
include/uninstall_semisync_slave.inc
[connection server_3]
include/uninstall_semisync_slave.inc
[connection server_1]
[connection server_1]
include/uninstall_semisync_master.inc
[connection server_1]
DROP TABLE t1;
drop database if exists fuys_db;
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
include/rpl_end.inc
