include/rpl_init.inc [topology=1->2, 1->3, 1->4, 1->5]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
CREATE TABLE t1(c1 INT);
include/rpl_sync.inc
[connection server_1]
include/install_semisync_master.inc
####################################################################
# Test Case: check the thread_pool_size of threadpool mode
####################################################################
include/assert.inc [ should be 24]
SET GLOBAL rpl_semi_sync_master_trace_level= 255;
set global rpl_semi_sync_master_wait_cond_hwm = '1:0';
set global rpl_semi_sync_master_wait_cond_lwm = '1:0';
####################################################################
# Test Case: Wait ack from 1 slave, but no semisync slave is enabled
####################################################################
SET GLOBAL rpl_semi_sync_master_timeout=3000;
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 0:GROUP_UNACTIVE]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 0]
INSERT INTO t1 VALUES(1);
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [rpl_semi_sync_master_yes_tx should be 0 + 0]
include/assert.inc [rpl_semi_sync_master_no_tx should be 0 + 1]
###################################################################
# Test Case: Wait ack from 1 slave, and 1 semisync slave is enabled
###################################################################
[connection server_2]
include/install_semisync_slave.inc
[connection server_1]
SET GLOBAL rpl_semi_sync_master_group1= '1,2:1';
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 1:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
SET GLOBAL rpl_semi_sync_master_timeout=100000;
INSERT INTO t1 VALUES(3);
INSERT INTO t1 VALUES(4);
include/assert.inc [rpl_semi_sync_master_yes_tx should be 0 + 2]
include/assert.inc [rpl_semi_sync_master_no_tx should be 1 + 0]
#########################################################################
# Test Case: Wait ack from 2 slaves, but only 1 semisync slave is enabled
#########################################################################
set global rpl_semi_sync_master_wait_cond_hwm = '2:0';
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 2;
SET GLOBAL rpl_semi_sync_master_timeout=3000;
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 1:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
INSERT INTO t1 VALUES(10);
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 1:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [rpl_semi_sync_master_yes_tx should be 2 + 0]
include/assert.inc [rpl_semi_sync_master_no_tx should be 1 + 1]
#####################################################################
# Test Case: Wait ack from 2 slaves, and 2 semisync slave are enabled
#####################################################################
[connection server_3]
include/install_semisync_slave.inc
[connection server_1]
SET GLOBAL rpl_semi_sync_master_group2= '3:1';
include/assert.inc [Rpl_semi_sync_master_clients should be 2]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 1:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
SET GLOBAL rpl_semi_sync_master_timeout = 100000;
INSERT INTO t1 VALUES(102);
INSERT INTO t1 VALUES(103);
include/assert.inc [rpl_semi_sync_master_yes_tx should be 2 + 2]
include/assert.inc [rpl_semi_sync_master_no_tx should be 2 + 0]
##########################################################################
# Test Case: Wait ack from 3 slaves, but only 2 semisync slave are enabled
##########################################################################
set global rpl_semi_sync_master_group2 = '3,4:2';
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 3;
SET GLOBAL rpl_semi_sync_master_timeout = 3000;
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 1:GROUP_UNACTIVE]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
INSERT INTO t1 VALUES(100);
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 1:GROUP_UNACTIVE]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
INSERT INTO t1 VALUES(101);
include/assert.inc [rpl_semi_sync_master_yes_tx should be 4 + 0]
include/assert.inc [rpl_semi_sync_master_no_tx should be 2 + 2]
######################################################################
# Test Case: Wait ack from 3 slaves, and 3 semisync slaves are enabled
######################################################################
[connection server_4]
include/install_semisync_slave.inc
[connection server_1]
include/assert.inc [Rpl_semi_sync_master_clients should be 3]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
SET GLOBAL rpl_semi_sync_master_timeout = 100000;
INSERT INTO t1 VALUES(102);
INSERT INTO t1 VALUES(103);
include/assert.inc [rpl_semi_sync_master_yes_tx should be 4 + 2]
include/assert.inc [rpl_semi_sync_master_no_tx should be 4 + 0]
########################################################################
# Check set master_enabled = ON
########################################################################
SET GLOBAL rpl_semi_sync_master_timeout = 10000;
set global rpl_semi_sync_master_wait_no_slave = 0;
set global rpl_semi_sync_master_group1 = NULL;
set global rpl_semi_sync_master_group2 = NULL;
set global rpl_semi_sync_master_enabled = 0;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 0]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
set global rpl_semi_sync_master_enabled = 1;
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
set global rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_group1 = '1,2:1';
set global rpl_semi_sync_master_enabled = 1;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
set global rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_group2 = '3,4:2';
set global rpl_semi_sync_master_enabled = 1;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
########################################################################
# Check set wait_no_slave = ON/OFF
########################################################################
set global rpl_semi_sync_master_wait_no_slave = 1;
set global rpl_semi_sync_master_group1 = NULL;
set global rpl_semi_sync_master_group2 = NULL;
set global rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_enabled = 1;
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
INSERT INTO t1 VALUES(201);
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
set global rpl_semi_sync_master_wait_no_slave = 0;
set global rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_enabled = 1;
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
set global rpl_semi_sync_master_wait_no_slave = 1;
set global rpl_semi_sync_master_enabled = 1;
set global rpl_semi_sync_master_group1 = '1,2:1';
set global rpl_semi_sync_master_group2 = '3,4:1';
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
set global rpl_semi_sync_master_group2 = NULL;
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
INSERT INTO t1 VALUES(202);
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
set global rpl_semi_sync_master_wait_no_slave = 0;
set global rpl_semi_sync_master_group2 = '3,4:1';
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
set global rpl_semi_sync_master_group2 = NULL;
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
set global rpl_semi_sync_master_wait_no_slave = 1;
set global rpl_semi_sync_master_group1 = NULL;
set global rpl_semi_sync_master_group2 = NULL;
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
set global rpl_semi_sync_master_wait_no_slave = 0;
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
set global rpl_semi_sync_master_wait_no_slave = 1;
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
########################################################################
# Check set wait_group_count
########################################################################
set global rpl_semi_sync_master_wait_no_slave = 0;
set global rpl_semi_sync_master_group1 = '1,2:1';
set global rpl_semi_sync_master_group2 = '3,4:2';
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
set global rpl_semi_sync_master_wait_cond_hwm = '1:0';
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
set global rpl_semi_sync_master_wait_cond_hwm = '3:0';
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
set global rpl_semi_sync_master_wait_cond_hwm = '1:0';
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
set global rpl_semi_sync_master_wait_cond_hwm = '2:0';
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
########################################################################
# Check set rpl_semi_sync_master_group*
########################################################################
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
set global rpl_semi_sync_master_group1 = '1:1';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
set global rpl_semi_sync_master_group1 = '1,2:1';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
set global rpl_semi_sync_master_group1 = '1,2:2';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
set global rpl_semi_sync_master_group1 = '1,2:1';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
########################################################################
# Coverage Test
########################################################################
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 4;
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 4;
SET GLOBAL rpl_semi_sync_master_enabled= OFF;
SET GLOBAL rpl_semi_sync_master_enabled= OFF;
SET GLOBAL rpl_semi_sync_master_enabled= ON;
set global rpl_semi_sync_master_wait_no_slave= 1;
[connection server_2]
include/uninstall_semisync_slave.inc
[connection server_3]
include/uninstall_semisync_slave.inc
[connection server_4]
include/uninstall_semisync_slave.inc
[connection server_1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_active_groups should be 0]
include/uninstall_semisync_master.inc
[connection server_1]
DROP TABLE t1;
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
include/rpl_end.inc
