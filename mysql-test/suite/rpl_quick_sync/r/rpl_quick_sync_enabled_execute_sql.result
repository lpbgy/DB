include/rpl_init.inc [topology=1->2, 1->3, 1->4, 1->5]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
CREATE TABLE t1(c1 INT);
include/rpl_sync.inc
[connection server_1]
include/install_semisync_master.inc
####################################################################
# Test Case: check the thread_pool_size of threadpool mode
####################################################################
include/assert.inc [ should be 24]
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_timeout = 1000;
###################################################################
# Test Case: add slave 2 3
###################################################################
[connection server_2]
include/install_semisync_slave.inc
[connection server_3]
include/install_semisync_slave.inc
[connection server_1]
###################################################################
# the base config and status for quick sync
###################################################################
set global rpl_semi_sync_master_wait_cond_hwm = '2:1';
set global rpl_semi_sync_master_wait_cond_lwm = '1:0';
set global rpl_semi_sync_master_group1 = '2,3:1';
set global rpl_semi_sync_master_group2 = '1,4:1';
set global rpl_semi_sync_master_enabled = ON;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE]
create database if not exists abczyy1;
create table if not exists abczyy1.tb1(a int key, b int);
create user zyy_test@localhost;
grant CREATE,DROP,INSERT on *.* to zyy_test@localhost;
###################################################################
# Test Case 1: execute DLL &&wait_no_slave=ON && err_flag=0
###################################################################
truncate table abczyy1.tb1;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE]
###################################################################
# Test Case 2: execute DML &&wait_no_slave=ON && err_flag=0
###################################################################
insert into abczyy1.tb1(a,b) values(1,1);
include/assert.inc [Rpl_semi_sync_master_active_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_ACTIVE]
######################################################################################
# Test Case 3: execute DLL &&wait_no_slave=ON && err_flag from 0 to 2
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
truncate table abczyy1.tb1;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 4: execute DML &&wait_no_slave=ON && err_flag from 0 to 2
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into abczyy1.tb1(a,b) values(1,1);
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 5: execute DLL &&wait_no_slave=ON && err_flag from 0 to 1
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
truncate table abczyy1.tb1;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 6: execute DML &&wait_no_slave=ON && err_flag from 0 to 1
######################################################################################
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into abczyy1.tb1(a,b) values(1,1);
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
######################################################################################
# Test Case 7: execute DLL && err_flag=1
######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
truncate table abczyy1.tb1;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;
######################################################################################
# Test Case 8: execute DML && err_flag=1
######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into abczyy1.tb1(a,b) values(1,1);
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;
######################################################################################
# Test Case 9: execute DLL && err_flag=1 && user without root privalige
######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
truncate table abczyy1.tb1;
ERROR HY000: Active groups is less than the lwm cond, only support read.
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;
######################################################################################
# Test Case 10: execute DML && err_flag=1 && user without root privalige
######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='2:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into abczyy1.tb1(a,b) values(1,1);
ERROR HY000: Active groups is less than the lwm cond, only support read.
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 2]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 1]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;
######################################################################################
# Test Case 11: execute DLL && err_flag=2
######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
truncate table abczyy1.tb1;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;
######################################################################################
# Test Case 12: execute DML && err_flag=2
######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into abczyy1.tb1(a,b) values(1,1);
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;
######################################################################################
# Test Case 13: execute DLL && err_flag=2 && user without root privalige
######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
truncate table abczyy1.tb1;
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;
######################################################################################
# Test Case 14: execute DML && err_flag=2 && user without root privalige
######################################################################################
set global rpl_semi_sync_master_wait_no_slave=OFF;
set global rpl_semi_sync_master_wait_cond_hwm='2:0';
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
insert into abczyy1.tb1(a,b) values(1,1);
include/assert.inc [Rpl_semi_sync_master_active_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_current_stat_master_flag should be 0]
include/assert.inc [Rpl_semi_sync_master_current_wait_groups should be 1]
include/assert.inc [Rpl_semi_sync_master_err_flag should be 2]
include/assert.inc [Rpl_semi_sync_master_group1_status should be 2:GROUP_ACTIVE]
include/assert.inc [Rpl_semi_sync_master_group2_status should be 0:GROUP_UNACTIVE]
set global rpl_semi_sync_master_wait_cond_lwm='1:0';
set global rpl_semi_sync_master_wait_cond_hwm='2:1';
set global rpl_semi_sync_master_wait_no_slave=ON;
########################################################################
# Coverage Test
########################################################################
SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 4;
drop user zyy_test@localhost;
SET GLOBAL rpl_semi_sync_master_enabled= OFF;
[connection server_2]
include/uninstall_semisync_slave.inc
[connection server_3]
include/uninstall_semisync_slave.inc
[connection server_1]
[connection server_1]
include/uninstall_semisync_master.inc
[connection server_1]
DROP TABLE t1;
drop database if exists abczyy1;
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
include/rpl_end.inc
