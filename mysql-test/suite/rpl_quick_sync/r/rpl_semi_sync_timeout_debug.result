include/rpl_init.inc [topology=1->2, 1->3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
CREATE TABLE t1(c1 INT);
include/rpl_sync.inc
[connection server_1]
include/install_semisync_master.inc
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
####################################################################
# Test Case: check the thread_pool_size of threadpool mode
####################################################################
include/assert.inc [ should be 24]
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_timeout = 1000;
###################################################################
# Test Case: add slave 2 3
###################################################################
[connection server_2]
include/install_semisync_slave.inc
[connection server_3]
include/install_semisync_slave.inc
[connection server_1]
SET GLOBAL rpl_semi_sync_master_enabled = 1;
set global rpl_semi_sync_master_timeout = 1000;
create database if not exists abczyy1;
create table if not exists abczyy1.tb1(a int key, b int);
###################################################################
# Test Case 1: timeout switch OFF and switch ON when catch up
###################################################################
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_quick_sync_enabled = 0;
set global rpl_semi_sync_master_wait_for_slave_count = 2;
SET GLOBAL rpl_semi_sync_master_enabled = 1;
include/assert.inc [ should be 1]
include/assert.inc [ should be 0]
[connection server_2]
SET @original_debug = @@GLOBAL.debug;
SET GLOBAL debug = 'd,rpl_semisync_before_send_ack';
[connection server_1]
insert into abczyy1.tb1(a,b) values(101,101);
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
[connection server_2]
SET DEBUG_SYNC = 'now SIGNAL continue';
SET GLOBAL debug = @original_debug;
[connection server_1]
include/assert.inc [Rpl_semi_sync_master_status should be ON]
include/assert.inc [rpl_semi_sync_master_yes_tx should be 0 + 0]
include/assert.inc [rpl_semi_sync_master_no_tx should be 3 + 1]
###################################################################
# Test Case 2: timeout switch OFF and reduce the wait_for_slave_count
###################################################################
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_quick_sync_enabled = 0;
set global rpl_semi_sync_master_wait_for_slave_count = 2;
SET GLOBAL rpl_semi_sync_master_enabled = 1;
include/assert.inc [ should be 1]
include/assert.inc [ should be 0]
[connection server_2]
SET @original_debug = @@GLOBAL.debug;
SET GLOBAL debug = 'd,rpl_semisync_before_send_ack';
[connection server_1]
insert into abczyy1.tb1(a,b) values(102,102);
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
[connection server_1]
set global rpl_semi_sync_master_wait_for_slave_count=1;
include/assert.inc [Rpl_semi_sync_master_status should be ON]
include/assert.inc [rpl_semi_sync_master_yes_tx should be 0 + 0]
include/assert.inc [rpl_semi_sync_master_no_tx should be 4 + 1]
[connection server_2]
SET DEBUG_SYNC = 'now SIGNAL continue';
SET GLOBAL debug = @original_debug;
[connection server_1]
###################################################################
# Test Case 3: timeout switch OFF and add slave
###################################################################
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_quick_sync_enabled = 0;
set global rpl_semi_sync_master_wait_for_slave_count = 2;
SET GLOBAL rpl_semi_sync_master_enabled = 1;
include/assert.inc [ should be 1]
include/assert.inc [ should be 0]
[connection server_3]
stop slave;
[connection server_2]
SET @original_debug = @@GLOBAL.debug;
SET GLOBAL debug = 'd,rpl_semisync_before_send_ack';
[connection server_1]
insert into abczyy1.tb1(a,b) values(103,103);
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
[connection server_3]
start slave;
[connection server_1]
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
include/assert.inc [rpl_semi_sync_master_yes_tx should be 0 + 0]
include/assert.inc [rpl_semi_sync_master_no_tx should be 5 + 1]
[connection server_2]
SET DEBUG_SYNC = 'now SIGNAL continue';
SET GLOBAL debug = @original_debug;
[connection server_1]
include/assert.inc [Rpl_semi_sync_master_status should be ON]
###################################################################
# Test Case 4: timeout wait and switch off to disabled
###################################################################
SET GLOBAL rpl_semi_sync_master_enabled = 0;
set global rpl_semi_sync_master_quick_sync_enabled = 0;
set global rpl_semi_sync_master_wait_for_slave_count = 3;
set global rpl_semi_sync_master_timeout = 50000;
SET GLOBAL rpl_semi_sync_master_enabled = 1;
include/assert.inc [ should be 1]
include/assert.inc [ should be 0]
[connection server_1]
insert into abczyy1.tb1(a,b) values(104,104);;
[connection default]
set global rpl_semi_sync_master_enabled = OFF;
[connection server_1]
include/assert.inc [rpl_semi_sync_master_yes_tx should be 0 + 0]
include/assert.inc [rpl_semi_sync_master_no_tx should be 6 + 1]
include/assert.inc [Rpl_semi_sync_master_status should be OFF]
########################################################################
# Coverage Test
########################################################################
[connection server_1]
set global rpl_semi_sync_master_enabled = OFF;
[connection server_2]
include/uninstall_semisync_slave.inc
[connection server_3]
include/uninstall_semisync_slave.inc
[connection server_1]
[connection server_1]
include/uninstall_semisync_master.inc
[connection server_1]
drop database if exists abczyy1;
DROP TABLE t1;
CALL mtr.add_suppression(".* Timeout waiting for reply of binlog .*");
CALL mtr.add_suppression(".* Failed to allocate memory for ack_array .*");
include/rpl_end.inc
