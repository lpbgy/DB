# restart
##
## prepare
##
Drop database if exists abczyy_test;
Warnings:
Note	1008	Can't drop database 'abczyy_test'; database doesn't exist
Create database abczyy_test;
Create table abczyy_test.tb1(a int key, b int);
Create table abczyy_test.tb2(a int key, b int);
Insert into abczyy_test.tb2(a,b) values(1,1),(2,2),(3,3),(4,4),(5,5),(6,6),(7,7),(8,8),(9,9);
set global autocommit=1;
##
## Test 1.1 TSN ERROR AND GTID ok
##
/*+TSN:mycase-001*/ /*+GTID=123*/Start transaction;
Insert into abczyy_test.tb1(a,b) values(1,1);
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
NULL	123
rollback;
##
## Test 1.2 TSN OK AND GTID ERROR
##
/*+TSN=mycase-001*/ /*-GTID=123*/Start transaction;
Insert into abczyy_test.tb1(a,b) values(1,1);
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
mycase-001	NULL
rollback;
##
## Test 1.3 TSN OK AND GTID ok
##
/*+TSN=mycase-001*/ /*+GTID=123*/Start transaction;
Insert into abczyy_test.tb1(a,b) values(1,1);
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
mycase-001	123
rollback;
##
## Test 1.4 GTID OK AND TSN ok
##
/*+GTID=1234*//*+TSN=mycase-0001*/Start transaction;
Insert into abczyy_test.tb1(a,b) values(1,1);
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
mycase-0001	1234
rollback;
##
## Test 1.5 GTID AND TSN IN the one special comment
##
/*+GTID=1234 +TSN=mycase-0001*/Start transaction;
Insert into abczyy_test.tb1(a,b) values(1,1);
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
NULL	1234 +TSN=mycase-0001
rollback;
##
## Test 1.6 the first two sql has the special comment
##
/*+GTID=123456*/Start transaction;
/*+TSN=mycase-00001*/Insert into abczyy_test.tb1(a,b) values(1,1);
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
mycase-00001	123456
rollback;
##
## Test 1.7 reset after trx commit
##
Start transaction;
/*+TSN=mycase-000001*/select * from abczyy_test.tb1;
a	b
/*+GTID=1234567*/Insert into abczyy_test.tb1(a,b) values(301,301);
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
mycase-000001	1234567
commit;
Start transaction;
Insert into abczyy_test.tb1(a,b) values(302,302);
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
NULL	NULL
commit;
##
## Test 1.8 utf-8 in special comment
##
/*+TSN=事务流水号-00001*/Start transaction;
/*+GTID=事务GTID-12345*/Insert into abczyy_test.tb1(a,b) values(1,1);
select hex(TRX_SERIAL_NUM),hex(TRX_GTM_GTID) FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
hex(TRX_SERIAL_NUM)	hex(TRX_GTM_GTID)
E4BA8BE58AA1E6B581E6B0B4E58FB72D3030303031	E4BA8BE58AA1475449442D3132333435
rollback;
##
## Test 1.9 special char in special comment
##
Start transaction;
/*+TSN=$``~!@$%^&*()_+-=$*//*+GTID=?{}[]|:'"',./<>?*/select * from abczyy_test.tb1;
a	b
301	301
302	302
select TRX_SERIAL_NUM,TRX_GTM_GTID FROM INFORMATION_SCHEMA.INNODB_TRX where trx_mysql_thread_id!=0;
TRX_SERIAL_NUM	TRX_GTM_GTID
$``~!@$%^&*()_+-=$	?{}[]|:'"',./<>?
rollback;
##
## Test 1.10 show create table
##
Show create table information_schema.innodb_trx;
Table	Create Table
INNODB_TRX	CREATE TEMPORARY TABLE `INNODB_TRX` (
  `trx_id` varchar(18) NOT NULL DEFAULT '',
  `trx_state` varchar(13) NOT NULL DEFAULT '',
  `trx_started` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `trx_requested_lock_id` varchar(105) DEFAULT NULL,
  `trx_wait_started` datetime DEFAULT NULL,
  `trx_weight` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_mysql_thread_id` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_query` varchar(1024) DEFAULT NULL,
  `trx_operation_state` varchar(64) DEFAULT NULL,
  `trx_tables_in_use` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_tables_locked` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_lock_structs` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_lock_memory_bytes` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_rows_locked` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_rows_modified` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_concurrency_tickets` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_isolation_level` varchar(16) NOT NULL DEFAULT '',
  `trx_unique_checks` int(1) NOT NULL DEFAULT '0',
  `trx_foreign_key_checks` int(1) NOT NULL DEFAULT '0',
  `trx_last_foreign_key_error` varchar(256) DEFAULT NULL,
  `trx_adaptive_hash_latched` int(1) NOT NULL DEFAULT '0',
  `trx_adaptive_hash_timeout` bigint(21) unsigned NOT NULL DEFAULT '0',
  `trx_is_read_only` int(1) NOT NULL DEFAULT '0',
  `trx_autocommit_non_locking` int(1) NOT NULL DEFAULT '0',
  `trx_serial_num` varchar(64) DEFAULT NULL,
  `trx_gtm_gtid` varchar(32) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=utf8
Desc information_schema.innodb_trx;
Field	Type	Null	Key	Default	Extra
trx_id	varchar(18)	NO			
trx_state	varchar(13)	NO			
trx_started	datetime	NO			
trx_requested_lock_id	varchar(105)	YES			
trx_wait_started	datetime	YES			
trx_weight	bigint(21) unsigned	NO			
trx_mysql_thread_id	bigint(21) unsigned	NO			
trx_query	varchar(1024)	YES			
trx_operation_state	varchar(64)	YES			
trx_tables_in_use	bigint(21) unsigned	NO			
trx_tables_locked	bigint(21) unsigned	NO			
trx_lock_structs	bigint(21) unsigned	NO			
trx_lock_memory_bytes	bigint(21) unsigned	NO			
trx_rows_locked	bigint(21) unsigned	NO			
trx_rows_modified	bigint(21) unsigned	NO			
trx_concurrency_tickets	bigint(21) unsigned	NO			
trx_isolation_level	varchar(16)	NO			
trx_unique_checks	int(1)	NO			
trx_foreign_key_checks	int(1)	NO			
trx_last_foreign_key_error	varchar(256)	YES			
trx_adaptive_hash_latched	int(1)	NO			
trx_adaptive_hash_timeout	bigint(21) unsigned	NO			
trx_is_read_only	int(1)	NO			
trx_autocommit_non_locking	int(1)	NO			
trx_serial_num	varchar(64)	YES			
trx_gtm_gtid	varchar(32)	YES			
##
## clear
##
Drop database if exists abczyy_test;
