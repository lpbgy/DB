# create bootstrap file
# Stop the MTR default DB server
# Test1: bootstrap with 2 undo tablespaces and with keyring.
# Run the bootstrap command with keyring
# Start the DB server with undo log encryption disabled, and no keyring plugin.
SET @transaction_isolation_session_orig = @@global.transaction_isolation;
SET global transaction_isolation= 'READ-COMMITTED';
SET session transaction_isolation= 'READ-COMMITTED';
set @old_mvcc_purge = @@global.innodb_distributed_mvcc_purge;
set @old_purge_gtmgtid = @@global.innodb_distributed_mvcc_purge_gtmgtid;
CREATE TABLE t (  a int,  GTID bigint) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

############################################################
# 1. prepare the data
# set the variables
set global innodb_distributed_mvcc_purge = on;
set global innodb_distributed_mvcc_purge_gtmgtid = 8;
# Connection con1:
insert into t values(1,9);
insert into t values(2,10);
insert into t values(3,11);
insert into t values(4,12);
insert into t values(6,13);
insert into t values(7,20);
insert into t values(8,21);

############################################################
# 1. update delete error
#  active list  11, 13
set global innodb_distributed_mvcc_purge_gtmgtid = 15;;
/*+GTID=13*/update t set GTID=13;
/*+GTID=13*/delete from t;
set GLOBAL debug ='+d,trx_purge_before_purge_really';
select @@innodb_distributed_mvcc_purge_gtmgtid;
@@innodb_distributed_mvcc_purge_gtmgtid
15
set  DEBUG_SYNC = "now wait_for in_purge";
select /*+ SET_VAR(active_gtm_gtid_list='CwAAAAAAAAANAAAAAAAAAA==') SET_VAR(next_gtm_gtid=20)*/ a, GTID from t;
ERROR HY000: Table definition has changed, please retry transaction
SET  DEBUG_SYNC= "now SIGNAL select_Done";
set GLOBAL debug ='-d,trx_purge_before_purge_really';

############################################################
# 2. select when alter table
#  active list  11, 13
set  DEBUG_SYNC = "innodb_commit_inplace_alter_table_wait  wait_for select_in_alter_done";
alter table t drop a;;
SET  DEBUG_SYNC= "now SIGNAL select_in_alter_done";
select /*+ SET_VAR(active_gtm_gtid_list='CwAAAAAAAAANAAAAAAAAAA==') SET_VAR(next_gtm_gtid=20)*/ GTID from t;
ERROR HY000: Table definition has changed, please retry transaction

############################################################
# 2. insert  then rollback
#  active list  11, 13
create table t1(a int primary key, GTID bigint);
insert into t1 values(1,9);
insert into t1 values(2,10);
insert into t1 values(3,11);
insert into t1 values(4,12);
insert into t1 values(6,13);
insert into t1 values(7,20);
insert into t1 values(8,21);
begin;
/*+GTID=17*/insert into  t1 values(9, 17);
/*+GTID=17*/update t1 set GTID = 17;
/*+GTID=17*/delete from t1;
rollback;
select /*+ SET_VAR(active_gtm_gtid_list=' ') SET_VAR(next_gtm_gtid=16)*/ * from t1;
a	GTID
1	9
2	10
3	11
4	12
6	13

############################################################
# 2. delete then insert and rollback
#  active list  11, 13
CREATE TABLE `t2` (
`database_name` varchar(64) ,
`table_name` varchar(199) ,
`last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
`n_rows` bigint unsigned NOT NULL,
`clustered_index_size` bigint unsigned NOT NULL,
`sum_of_other_index_sizes` bigint unsigned NOT NULL,
PRIMARY KEY (`database_name`,`table_name`)
) ENGINE=InnoDB;
insert into t2 select * from mysql.innodb_table_stats;
alter table t2 add GTID bigint;
update t2 set GTID=1;
begin ;
/*+GTID=17*/delete from t2 where database_name='test' and table_name ='t2';
/*+GTID=17*/insert into t2 values('test','t2',now(), 1, 2, 1, 17);
rollback;
select /*+ SET_VAR(active_gtm_gtid_list='CwAAAAAAAAANAAAAAAAAAA==') SET_VAR(next_gtm_gtid=20)*/ 
database_name, table_name, n_rows,clustered_index_size,sum_of_other_index_sizes,GTID from t2 
where database_name='test' and table_name ='t2';
database_name	table_name	n_rows	clustered_index_size	sum_of_other_index_sizes	GTID
test	t2	0	1	0	1

############################################################
#  clean up
#  
SET global transaction_isolation= @transaction_isolation_session_orig;
set session transaction_isolation= @transaction_isolation_session_orig;
set global  innodb_distributed_mvcc_purge = @old_mvcc_purge;
set global innodb_distributed_mvcc_purge_gtmgtid = @old_purge_gtmgtid;
DROP TABLE t, t1, t2;
SET DEBUG_SYNC= "RESET";
# restart the server with MTR default
# restart
# Remove residue files
