include/rpl_init.inc [topology=1->2,3->2]
# TEST CASE 1: from different db sync 
# a) prepare  db1.t1 on server_1
#
[connection server_1]
CREATE DATABASE db1;
CREATE TABLE db1.t1 ( a int);
INSERT INTO db1.t1 VALUES (10);
INSERT INTO db1.t1 VALUES (9);
INSERT INTO db1.t1 VALUES (8);
INSERT INTO db1.t1 VALUES (7);
INSERT INTO db1.t1 VALUES (6);
INSERT INTO db1.t1 VALUES (5);
INSERT INTO db1.t1 VALUES (4);
INSERT INTO db1.t1 VALUES (3);
INSERT INTO db1.t1 VALUES (2);
INSERT INTO db1.t1 VALUES (1);
SHOW DATABASES;
Database
db1
information_schema
mtr
mysql
performance_schema
sys
test
create table db1.t2 as select * from db1.t1;
#
# b)  prepare database and table db3.t1 on server_3
#
[connection server_3]
CREATE DATABASE db3;
CREATE TABLE db3.t1 (a int);
INSERT INTO db3.t1 VALUES (3*10);
INSERT INTO db3.t1 VALUES (3*9);
INSERT INTO db3.t1 VALUES (3*8);
INSERT INTO db3.t1 VALUES (3*7);
INSERT INTO db3.t1 VALUES (3*6);
INSERT INTO db3.t1 VALUES (3*5);
INSERT INTO db3.t1 VALUES (3*4);
INSERT INTO db3.t1 VALUES (3*3);
INSERT INTO db3.t1 VALUES (3*2);
INSERT INTO db3.t1 VALUES (3*1);
SHOW DATABASES;
Database
db3
information_schema
mtr
mysql
performance_schema
sys
test
create table db3.t2 as select * from db3.t1;
#
# c)  sync the slave (server_2) with both masters (server_1 and server_3)
#
[connection server_1]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'channel_1']
[connection server_3]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'channel_3']
#
# d) Check that slave has replicated from both masters.
[connection server_2]
SHOW DATABASES;
Database
db1
db3
information_schema
mtr
mysql
performance_schema
sys
test
include/assert.inc [Slave should have 10 rows in db1.t2]
include/assert.inc [Slave should have 10 rows in db3.t2]
# TEST CASE 2: use the same database, different table
# a) prepare database on server_1
[connection server_1]
CREATE DATABASE IF NOT EXISTS  dbcommon;
CREATE TABLE dbcommon.t11(a int);
INSERT INTO dbcommon.t11 values (11*10);
INSERT INTO dbcommon.t11 values (11*9);
INSERT INTO dbcommon.t11 values (11*8);
INSERT INTO dbcommon.t11 values (11*7);
INSERT INTO dbcommon.t11 values (11*6);
INSERT INTO dbcommon.t11 values (11*5);
INSERT INTO dbcommon.t11 values (11*4);
INSERT INTO dbcommon.t11 values (11*3);
INSERT INTO dbcommon.t11 values (11*2);
INSERT INTO dbcommon.t11 values (11*1);
create table dbcommon.t12 as select * from dbcommon.t11;
# b) prepare database on server_3
[connection server_3]
CREATE DATABASE IF NOT EXISTS  dbcommon;
CREATE TABLE dbcommon.t33(a int);
INSERT INTO dbcommon.t33 values (33*10);
INSERT INTO dbcommon.t33 values (33*9);
INSERT INTO dbcommon.t33 values (33*8);
INSERT INTO dbcommon.t33 values (33*7);
INSERT INTO dbcommon.t33 values (33*6);
INSERT INTO dbcommon.t33 values (33*5);
INSERT INTO dbcommon.t33 values (33*4);
INSERT INTO dbcommon.t33 values (33*3);
INSERT INTO dbcommon.t33 values (33*2);
INSERT INTO dbcommon.t33 values (33*1);
create table dbcommon.t32 as select * from dbcommon.t33;
#
# c)  sync the slave (server_2) with both masters (server_1 and server_3)
#
[connection server_1]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'channel_1']
[connection server_3]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'channel_3']
#
# d) Check that slave has replicated from both masters.
[connection server_2]
SHOW DATABASES;
Database
db1
db3
dbcommon
information_schema
mtr
mysql
performance_schema
sys
test
include/assert.inc [Slave should have 10 rows in dbcommon.t12]
include/assert.inc [Slave should have 10 rows in dbcommon.t32]
# TEST CASE 3: use the same database, same table
# a) prepare database on server_1
[connection server_1]
CREATE TABLE dbcommon.t_common(a int);
INSERT INTO dbcommon.t_common values (11*10);
INSERT INTO dbcommon.t_common values (11*9);
INSERT INTO dbcommon.t_common values (11*8);
INSERT INTO dbcommon.t_common values (11*7);
INSERT INTO dbcommon.t_common values (11*6);
INSERT INTO dbcommon.t_common values (11*5);
INSERT INTO dbcommon.t_common values (11*4);
INSERT INTO dbcommon.t_common values (11*3);
INSERT INTO dbcommon.t_common values (11*2);
INSERT INTO dbcommon.t_common values (11*1);
create table IF NOT EXISTS dbcommon.t_common2 as select * from dbcommon.t_common;
# b) prepare database on server_3
[connection server_3]
CREATE TABLE IF NOT EXISTS  dbcommon.t_common(a int);
INSERT INTO dbcommon.t_common values (33*10);
INSERT INTO dbcommon.t_common values (33*9);
INSERT INTO dbcommon.t_common values (33*8);
INSERT INTO dbcommon.t_common values (33*7);
INSERT INTO dbcommon.t_common values (33*6);
INSERT INTO dbcommon.t_common values (33*5);
INSERT INTO dbcommon.t_common values (33*4);
INSERT INTO dbcommon.t_common values (33*3);
INSERT INTO dbcommon.t_common values (33*2);
INSERT INTO dbcommon.t_common values (33*1);
create table  IF NOT EXISTS dbcommon.t_common2 as select * from dbcommon.t_common;
#
# c)  sync the slave (server_2) with both masters (server_1 and server_3)
#
[connection server_1]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'channel_1']
[connection server_3]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'channel_3']
#
# d) Check that slave has replicated from both masters.
[connection server_2]
SHOW DATABASES;
Database
db1
db3
dbcommon
information_schema
mtr
mysql
performance_schema
sys
test
include/assert.inc [Slave should have 20 rows in dbcommon.t_common2]
# TEST CASE 3: use the same database, same table
# clean up
connection_server_1
DROP DATABASE db1;
DROP DATABASE  IF EXISTS  dbcommon;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'channel_1']
connection_server_3
DROP DATABASE db3;
DROP DATABASE  IF EXISTS  dbcommon;
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'channel_3']
include/rpl_end.inc
RESET SLAVE ALL FOR CHANNEL 'channel_1';
RESET SLAVE ALL FOR CHANNEL 'channel_3';
