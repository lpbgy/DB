#
# Test：Range分区支持substring函数 测试用例
#       本测试用例涉及 CREATE/INSERT/UPDATE/DELETE/DROP/SELECT/SHOW 命令
# 
# Syntax:
#     CREATE TABLE [IF NOT EXISTS] table_name
#     [(create_definition,...)]
#     [partition_options]
#
# partition_options:
#     PARTITION BY RANGE(substr(column,...))
#     [PARTITIONS num]
#     [SUBPARTITION BY
#         { [LINEAR] HASH(expr)
#         | [LINEAR] KEY [ALGORITHM={1|2}] (column_list) }
#     [SUBPARTITIONS num]
#     ]
#     [(partition_definition [, partition_definition] ...)]
#
# partition_definition:
#     PARTITION partition_name
#     [VALUES LESS THAN {'string' | MAXVALUE}]
#     [[STORAGE] ENGINE [=] engine_name]
#     [COMMENT [=] 'string']
#     [DATA DIRECTORY [=] 'data_dir']
#     [INDEX DIRECTORY [=] 'index_dir']
#     [MAX_ROWS [=] max_number_of_rows]
#     [MIN_ROWS [=] min_number_of_rows]
#     [TABLESPACE [=] tablespace_name]
#     [(subpartition_definition [, subpartition_definition] ...)]
#
# subpartition_definition:
#     SUBPARTITION logical_name
#         [[STORAGE] ENGINE [=] engine_name]
#         [COMMENT [=] 'string' ]
#         [DATA DIRECTORY [=] 'data_dir']
#         [INDEX DIRECTORY [=] 'index_dir']
#         [MAX_ROWS [=] max_number_of_rows]
#         [MIN_ROWS [=] min_number_of_rows]
#         [TABLESPACE [=] tablespace_name]


# 创建测试数据库
--disable_warnings
drop database if exists test_db;
create database test_db;
use test_db;

--echo =========================================================
--echo 异常情况测试
--echo =========================================================

--echo 异常测试：range 分区字段为varchar类型字段时，需报错
--error ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD
CREATE TABLE test (
  id INT,
  name varchar(7),
  address varchar(7))
PARTITION BY RANGE (name)
( PARTITION p0 VALUES LESS THAN (199));

--echo 异常测试：分区值全是整形字段，需报错
--error ER_BAD_FIELD_ERROR
CREATE TABLE test (
  id INT,
  id2 INT,
  id3 INT,
  name varchar(7))
PARTITION BY RANGE (substr(name,1))
( PARTITION p0 VALUES LESS THAN (id),
  PARTITION p1 VALUES LESS THAN (id2));

--echo 异常测试：分区值全是字符串字段，需报错
--error ER_BAD_FIELD_ERROR
CREATE TABLE test (
  id INT,
  name varchar(7),
  name2 varchar(7))
PARTITION BY RANGE (substr(name,1))
( PARTITION p0 VALUES LESS THAN (name),
  PARTITION p1 VALUES LESS THAN (name2));

--echo 异常测试：不支持处理substr字符处理函数之外的函数：concat
--error ER_PARTITION_FUNCTION_IS_NOT_ALLOWED
CREATE TABLE test (
  id INT,
  name varchar(7),
  address varchar(7))
PARTITION BY RANGE (concat(name, address))
( PARTITION p0 VALUES LESS THAN ('ccc'));

--echo 异常测试：不支持字符类型的列
--error ER_VALUES_IS_NOT_INT_TYPE_ERROR
CREATE TABLE test (
  id INT,
  name varchar(7),
  address varchar(7))
PARTITION BY RANGE (name)
( PARTITION p0 VALUES LESS THAN ('ccc'));

--echo 异常测试：substr函数的入参数量错误:一个参数
--error ER_PARSE_ERROR
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name))
( PARTITION p0 VALUES LESS THAN ('ccc'),
  PARTITION p1 VALUES LESS THAN ('eee'));

--echo 异常测试：substr函数的入参数量错误:四个参数
--error ER_PARSE_ERROR
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 2, 4))
( PARTITION p0 VALUES LESS THAN ('ccc'),
  PARTITION p1 VALUES LESS THAN ('eee'));

--echo 异常测试：values less than 的值必须是字符串
--error ER_VALUES_IS_NOT_STRING_TYPE_ERROR
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 3))
( PARTITION p0 VALUES LESS THAN (199),
  PARTITION p1 VALUES LESS THAN ('xxx'));

--echo 异常测试：values less than 的值不能为NULL
--error ER_NULL_IN_VALUES_LESS_THAN
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 3))
( PARTITION p0 VALUES LESS THAN (NULL),
  PARTITION p1 VALUES LESS THAN ('xxx'));

--echo 异常测试：values less than 的值不能空(不是空字符串)
--error ER_PARSE_ERROR
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 3))
( PARTITION p0 VALUES LESS THAN ( ),
  PARTITION p1 VALUES LESS THAN ('xxx'));

--echo 异常测试：Invalid character string
#select hex('GoldenD') = '476F6C64656E44'
create table if not exists test (
id1 int,
city varchar(15))
partition by range (substr(city, 8, 7))
(PARTITION part_0 VALUES less than (' '),
PARTITION part_2 VALUES less than ('1XX'),
PARTITION part_3 VALUES less than ('55'),
PARTITION part_4 VALUES less than ('5XX'),
PARTITION part_5 VALUES less than ('99'),
PARTITION part_6 VALUES less than ('9XX X'),
PARTITION part_1 VALUES less than (X'476F6C64656E44'),
PARTITION part_7 VALUES less than ('中文'),
PARTITION part_8 VALUES less than (maxvalue));

--echo 异常测试：Partition column values of incorrect type
--error ER_INVALID_CHARACTER_STRING
create table if not exists test_1 (
id1 int,
city varchar(15))
partition by range (substr(city,8,2))
(PARTITION part_0 VALUES less than (' '),
PARTITION part_1 VALUES less than (X'FFD8FFE000104A4649460001010100'),
PARTITION part_2 VALUES less than ('1XX'),
PARTITION part_3 VALUES less than ('55'),
PARTITION part_4 VALUES less than ('5XX'),
PARTITION part_5 VALUES less than ('99'),
PARTITION part_6 VALUES less than ('9XX X'),
PARTITION part_7 VALUES less than ('中文'),
PARTITION part_8 VALUES less than (maxvalue));

--echo 和range columns保持一致，values less than 的值可以为空字符串('')
drop table test;
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 3))
( PARTITION p0 VALUES LESS THAN (''),
  PARTITION p1 VALUES LESS THAN ('xxx'));
show create table test;
drop table if exists test;
--echo 和range columns保持一致，values less than 的值可以包含单引号/双引号/特殊符号
CREATE TABLE test (
  id INT,
  name varchar(30) )
PARTITION BY RANGE (substr(name, 1, 30))
( PARTITION p0 VALUES LESS THAN ("cc'cc"),
  PARTITION p1 VALUES LESS THAN ('kk"kk'),
  PARTITION p2 VALUES LESS THAN ('yy~`@#$%^&*()_+-={}[]|\:;<>,.?/'));
show create table test;

insert into test values (1, "cc");
select * from test partition (p0);
insert into test values (2, 'kk"');
select * from test partition (p1);
insert into test values (3, 'yy"');
select * from test partition (p2);

drop table if exists test;

--echo 异常测试：values less than 的值必须是严格递增
--error ER_RANGE_NOT_INCREASING_ERROR
CREATE TABLE test (
  id INT,
  name char(7) )
PARTITION BY RANGE (substr(name, 1, 3))
( PARTITION p0 VALUES LESS THAN ('fff'),
  PARTITION p1 VALUES LESS THAN ('ccc'));

--echo 异常测试：分区名字若相同，需要报错
--error ER_SAME_NAME_PARTITION
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 3))
( PARTITION p0 VALUES LESS THAN ('ccc'),
  PARTITION p0 VALUES LESS THAN ('fff'),
  PARTITION pmax VALUES LESS THAN (MAXVALUE));

--echo 异常测试：分区名字和子分区名字若相同，需要报错
--error ER_SAME_NAME_PARTITION
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 2))
SUBPARTITION BY HASH (id) subpartitions 2
( PARTITION p0 VALUES LESS THAN ('cc')
  (subpartition p0, subpartition s1),
  PARTITION p0 VALUES LESS THAN ('ff')
  (subpartition s2, subpartition s3),
  PARTITION pmax VALUES LESS THAN (MAXVALUE)
  (subpartition s4, subpartition s5));

--echo 异常测试：MAXVALUE只能作为最后一个分区的值
--error ER_PARTITION_MAXVALUE_ERROR
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 2))
( PARTITION p0 VALUES LESS THAN ('cc'),
  PARTITION p0 VALUES LESS THAN (MAXVALUE),
  PARTITION pmax VALUES LESS THAN ('zz'));

--echo 异常测试：分区名字必须是字符串，若是数字，需要报错
--error ER_PARSE_ERROR
CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 2))
( PARTITION 123 VALUES LESS THAN ('cc'),
  PARTITION pmax VALUES LESS THAN (MAXVALUE));

--echo 支持创建分区表时指定partition的数量
CREATE TABLE test (
  id INT,
  name varchar(7),
  primary key(id, name))
PARTITION BY RANGE (substr(name,1))
PARTITIONS 5
( PARTITION p0   VALUES LESS THAN ('ccc'),
  PARTITION p1   VALUES LESS THAN ('eee'),
  PARTITION p2   VALUES LESS THAN ('ggg'),
  PARTITION p3   VALUES LESS THAN ('ppp'),
  PARTITION pmax VALUES LESS THAN (maxvalue));
show create table test;
drop table if exists test;

--echo 创建分区表时,指定partition的数量与实际不符时，应报错
#--error ER_PARTITION_WRONG_NO_PART_ERROR
--error 1064
CREATE TABLE test (
  id INT,
  name char(7),
  primary key(id, name))
PARTITION BY RANGE (substr(name,1))
PARTITIONS 4
( PARTITION p0   VALUES LESS THAN ('ccc'),
  PARTITION p1   VALUES LESS THAN ('eee'),
  PARTITION p2   VALUES LESS THAN ('ggg'),
  PARTITION p3   VALUES LESS THAN ('ppp'),
  PARTITION pmax VALUES LESS THAN (maxvalue));

--echo =========================================================
--echo range 分区支持substring/substr函数
--echo =========================================================

--echo substr函数支持char，varchar字段
CREATE TABLE test (
  id INT,
  name char(7) )
PARTITION BY RANGE (substr(name, 1, 2))
( PARTITION p0 VALUES LESS THAN ('cc'),
  PARTITION p1 VALUES LESS THAN (MAXVALUE));
show create table test;
drop table if exists test;

CREATE TABLE test (
  id INT,
  name varchar(7) )
PARTITION BY RANGE (substr(name, 1, 3))
( PARTITION p0 VALUES LESS THAN ('ccc'),
  PARTITION p1 VALUES LESS THAN (MAXVALUE));
show create table test;
drop table if exists test;

--echo substr函数不支持除了char，varchar之外的字段类型
--error ER_WRONG_TYPE_COLUMN_VALUE_ERROR
CREATE TABLE test (
  id INT,
  name char(7) )
PARTITION BY RANGE (substr(id, 1, 2))
( PARTITION p0 VALUES LESS THAN ('cc'),
  PARTITION p1 VALUES LESS THAN (MAXVALUE));

--echo 支持substring函数
CREATE TABLE test (
  id INT,
  name char(7) )
PARTITION BY RANGE (substring(name, 1, 2))
( PARTITION p0 VALUES LESS THAN ('cc'),
  PARTITION p1 VALUES LESS THAN (MAXVALUE));
show create table test;
drop table if exists test;

CREATE TABLE test (
  id INT,
  name char(7) )
PARTITION BY RANGE (substring(name, 1))
( PARTITION p0 VALUES LESS THAN ('cc'),
  PARTITION p1 VALUES LESS THAN (MAXVALUE));
show create table test;
drop table if exists test;

--echo substr函数的字段可以不是主键(若表中没有主键)
CREATE TABLE test (
  id INT,
  name char(7) )
PARTITION BY RANGE (substring(name, 1))
( PARTITION p0 VALUES LESS THAN ('ccc'));
show create table test;
drop table if exists test;

--echo substr函数的字段必须是主键的一部分(若表中含有主键)
--error ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF
CREATE TABLE test (
  id INT primary key,
  name char(7))
PARTITION BY RANGE (substring(name, 1))
( PARTITION p0 VALUES LESS THAN ('ccc'));

CREATE TABLE test (
  id INT,
  name char(7),
  address char(7),
  primary key(id, name))
PARTITION BY RANGE (substring(name, 1))
( PARTITION p0 VALUES LESS THAN ('ccc'));
show create table test;
drop table if exists test;

--error ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF
CREATE TABLE test (
  id INT,
  name char(7),
  address char(7),
  primary key(id, name))
PARTITION BY RANGE (substring(address, 1))
( PARTITION p0 VALUES LESS THAN ('ccc'));

--echo substr函数必须是唯一键的一部分(若表中含有唯一键)
--error ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF
CREATE TABLE test (
  id INT unique key,
  name char(7))
PARTITION BY RANGE (substring(name, 1))
( PARTITION p0 VALUES LESS THAN ('ccc'));

CREATE TABLE test (
  id INT,
  name char(7),
  address char(7),
  unique key(id, name))
PARTITION BY RANGE (substring(name, 1))
( PARTITION p0 VALUES LESS THAN ('ccc'));
show create table test;
drop table if exists test;

--error ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF
CREATE TABLE test (
  id INT,
  name char(7),
  address char(7),
  unique key(id, name))
PARTITION BY RANGE (substring(address, 1))
( PARTITION p0 VALUES LESS THAN ('ccc'));

--echo =========================================================
--echo range 分区支持substring/substr函数：insert命令
--echo =========================================================

--echo 支持 insert 的数据
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
subpartition by hash (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s2, subpartition s3),
  PARTITION p_max VALUES LESS THAN (MAXVALUE)
    (subpartition s4, subpartition s5));

show create table test;
insert into test values (1, 'aaa');

--echo insert 的数据落入正确的分区
select * from test partition (p_ccc) order by id;

--echo insert 的数据落入正确的子分区
select * from test partition (s1) order by id;

--echo insert 的数据类型有整形转换为字符型能够落入正确的分区
insert into test values (2, 222);
select * from test partition (p_ccc) order by id;

--echo insert 的数据为分区值的临界值
insert into test values (3, 'ccc');
select * from test partition (p_kkk) order by id;

--echo insert 的数据落入maxvalue分区
insert into test values (4, 'mmm');
select * from test partition (p_max) order by id;
drop table test;

--echo insert 的数据找不到满足条件的分区时，需要报错
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1))
( PARTITION p_ccc VALUES LESS THAN ('ccc'),
  PARTITION p_fff VALUES LESS THAN ('fff'),
  PARTITION p_kkk VALUES LESS THAN ('kkk'));
show create table test;

--error ER_NO_PARTITION_FOR_GIVEN_VALUE
insert into test values (1, 'zzz');
drop table if exists test;

--echo =========================================================
--echo range 分区支持substring/substr函数：支持hash/key子分区
--echo =========================================================

--echo 支持hash子分区,子分区的名字若不指定，由mysql自己生成
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
subpartition by hash (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc'),
  PARTITION p_fff VALUES LESS THAN ('fff'),
  PARTITION p_kkk VALUES LESS THAN ('kkk'));
show create table test;
drop table if exists test;

--echo 支持hash子分区,指定子分区的名字
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
subpartition by hash (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_fff VALUES LESS THAN ('fff')
    (subpartition s2, subpartition s3),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s4, subpartition s5));
show create table test;

insert into test values (1, 'aaa'), (2, 'bbb');
insert into test values (3, 'ccc'), (4, 'ddd');

select * from test partition (p_ccc, p_fff) order by id;
select * from test partition (s0, s1) order by id;

drop table if exists test;

--echo 支持hash子分区,子分区的名字若相同，需报错
--error ER_SAME_NAME_PARTITION
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 2
subpartition by hash (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s0, subpartition s5));

--echo 支持key子分区,子分区的名字若不指定，由mysql自己生成
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
subpartition by key (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc'),
  PARTITION p_fff VALUES LESS THAN ('fff'),
  PARTITION p_kkk VALUES LESS THAN ('kkk'));
show create table test;
drop table if exists test;

--echo 支持key子分区,指定子分区的名字
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
subpartition by key (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_fff VALUES LESS THAN ('fff')
    (subpartition s2, subpartition s3),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s4, subpartition s5));
show create table test;
drop table if exists test;

--echo 支持key子分区,子分区的名字若相同，需报错
--error ER_SAME_NAME_PARTITION
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 2
subpartition by key (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s0, subpartition s5));

--echo 支持hash/key子分区,其他子分区，需报错
--error ER_PARSE_ERROR
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 2
subpartition by range (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s0, subpartition s5));

--echo =========================================================
--echo range 分区支持substring/substr函数：支持 create select 语法
--echo =========================================================

--echo 支持 create select 语法
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
subpartition by hash (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s2, subpartition s3),
  PARTITION p_zzz VALUES LESS THAN ('zzz')
    (subpartition s4, subpartition s5));

show create table test;

insert into test values (1, 'aaa'), (2, 'bbb');
insert into test values (3, 'ddd'), (4, 'fff');
insert into test values (5, 'lll'), (6, 'mmm');

--echo select子句中的分区名字不存在，需报错
--error ER_UNKNOWN_PARTITION
create table tmp select * from test partition (p_NoExist);

--echo select子句中支持单个分区
select * from test partition (p_ccc) order by id;
create table tmp select * from test partition (p_ccc);
select * from tmp order by id;
drop table if exists tmp;

--echo select子句中支持多个连续分区
select * from test partition (p_ccc, p_kkk) order by id;
create table tmp select * from test partition (p_ccc, p_kkk);
select * from tmp order by id;
drop table if exists tmp;

--echo select子句中支持多个不连续分区
select * from test partition (p_ccc, p_zzz) order by id;
create table tmp select * from test partition (p_ccc, p_zzz);
select * from tmp order by id;
drop table if exists tmp;

--echo select子句中支持单个子分区
select * from test partition (s0) order by id;
create table t_s0 select * from test partition (s0);
select * from t_s0 order by id;
drop table if exists t_s0;

--echo select子句中支持多个连续子分区
select * from test partition (s0, s1) order by id;
create table tmp select * from test partition (s0, s1);
select * from tmp order by id;
drop table if exists tmp;

--echo select子句中支持多个不连续分区
select * from test partition (s0, s3) order by id;
create table tmp select * from test partition (s0, s3);
select * from tmp order by id;
drop table if exists tmp;

drop table test;

--echo =========================================================
--echo range 分区支持substring/substr函数：update 命令
--echo =========================================================

--echo update 分区字段后，会根据字段值落入正确的分区
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1))
( PARTITION p_ccc VALUES LESS THAN ('ccc'),
  PARTITION p_fff VALUES LESS THAN ('fff'),
  PARTITION p_kkk VALUES LESS THAN ('kkk'),
  PARTITION p_max VALUES LESS THAN (MAXVALUE));
show create table test;

insert into test values (1, 'aaa');
select * from test partition (p_ccc) order by id;
update test set name='ggg' where id = 1;
select * from test partition (p_ccc) order by id;
select * from test partition (p_kkk) order by id;
truncate table test;

insert into test values (1, 'jjj');
select * from test partition (p_kkk) order by id;
update test set name = NULL where id = 1;
select * from test partition (p_ccc) order by id;
select * from test partition (p_kkk) order by id;

drop table test;

--echo =========================================================
--echo range 分区支持substring/substr函数：支持prepare模式
--echo =========================================================

--echo 支持prepare模式
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1))
( PARTITION p_ccc VALUES LESS THAN ('ccc'),
  PARTITION p_fff VALUES LESS THAN ('fff'),
  PARTITION p_kkk VALUES LESS THAN ('kkk'),
  PARTITION p_max VALUES LESS THAN (MAXVALUE));
show create table test;

prepare insert_stmt from "insert into test values (?,?)";
set @a= 8;
set @b= 'MMM';
execute insert_stmt using @a, @b;
deallocate prepare insert_stmt;
select *from test partition (p_max) order by id;

prepare update_stmt from "update test set name = ? where id = ?";
set @a= 8;
set @b= 'mmm';
execute update_stmt using @b, @a;
deallocate prepare update_stmt;
select *from test partition (p_max) order by id;

prepare delete_stmt from "delete from test where id = ?";
set @a= 8;
execute delete_stmt using @a;
deallocate prepare delete_stmt;
select *from test order by id;
drop table test;

--echo =========================================================
--echo range 分区支持substring/substr函数：delete 命令
--echo =========================================================

--echo 支持delete命令
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1))
( PARTITION p_ccc VALUES LESS THAN ('ccc'),
  PARTITION p_fff VALUES LESS THAN ('fff'),
  PARTITION p_kkk VALUES LESS THAN ('kkk'),
  PARTITION p_max VALUES LESS THAN (MAXVALUE));
show create table test;

insert into test values (1, '');
insert into test values (2, NULL);
insert into test values (3, 'aaa');
insert into test values (4, 'ddd');
insert into test values (5, 'jjj');
insert into test values (6, 'zzz');
insert into test values (7, '多字节');
insert into test values (11, '###');
insert into test values (12, '<<<');
insert into test values (13, '???');
insert into test values (14, '{{{');
insert into test values (15, '|||');
insert into test values (16, '}}}');

--echo delete 命令指定的分区名字不存在时，需报错
--error ER_UNKNOWN_PARTITION
delete from test partition (p_NoExist);

--echo delete命令指定的单个分区有效时，删除成功
delete from test partition (p_ccc);
select * from test partition (p_ccc) order by id;

--echo delete命令指定的多个分区有效时，删除成功
delete from test partition (p_fff, p_kkk);
select * from test partition (p_fff, p_kkk) order by id;

drop table if exists test;
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
subpartition by hash (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s2, subpartition s3),
  PARTITION p_zzz VALUES LESS THAN ('zzz')
    (subpartition s4, subpartition s5));

show create table test;

insert into test values (1, 'aaa'), (2, 'bbb');
insert into test values (3, 'ddd'), (4, 'fff');
insert into test values (5, 'lll'), (6, 'mmm');

--echo delete命令指定的单个子分区无效时，需报错
--error ER_UNKNOWN_PARTITION
delete from test partition (sp_NoExist);

--echo delete命令指定的单个子分区有效时，删除成功
delete from test partition (s0);
select * from test partition (s0) order by id;

--echo delete命令指定的多个子分区有效时，删除成功
delete from test partition (s1, s2);
select * from test partition (s1, s2) order by id;

--echo delete命令指定分区和子分区时，删除成功
delete from test partition (p_zzz, s3);
select * from test partition (p_zzz, s3) order by id;

drop table test;

--echo =========================================================
--echo range 分区支持substring/substr函数：支持copy table语法
--echo =========================================================

--echo range substr支持copy table
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
( PARTITION p_ccc VALUES LESS THAN ('ccc'),
  PARTITION p_kkk VALUES LESS THAN ('kkk'),
  PARTITION p_zzz VALUES LESS THAN ('zzz'));

show create table test;

insert into test values (1, 'aaa'), (2, 'bbb');
insert into test values (3, 'ddd'), (4, 'fff');
insert into test values (5, 'lll'), (6, 'mmm');

create table tmp like test;

select * from test partition (p_ccc) order by id;
select * from test partition (p_kkk) order by id;
select * from test partition (p_kkk) order by id;
copy table from test to tmp;
select * from test partition (p_ccc) order by id;
select * from test partition (p_kkk) order by id;
select * from test partition (p_kkk) order by id;
select * from tmp partition (p_ccc) order by id;
select * from tmp partition (p_kkk) order by id;
select * from tmp partition (p_kkk) order by id;
drop table tmp, test;

--echo =========================================================
--echo range 分区支持substring/substr函数：select 命令
--echo =========================================================

--echo select partition 带有where 子句
CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 3
subpartition by hash (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s2, subpartition s3),
  PARTITION p_zzz VALUES LESS THAN ('zzz')
    (subpartition s4, subpartition s5));

show create table test;

insert into test values (1, 'aaa'), (2, 'bbb');
insert into test values (3, 'ddd'), (4, 'fff');
insert into test values (5, 'lll'), (6, 'mmm');

select * from test partition (p_ccc,p_kkk) where name < 'bbb';
select * from test partition (p_ccc,p_kkk) where name <= 'bbb';
select * from test partition (p_ccc,p_kkk) where name > 'bbb';
select * from test partition (p_ccc,p_kkk) where name >= 'bbb';
drop table test;

--echo =========================================================
--echo range 分区支持substring/substr函数：select_into_outfile/load_data_infile
--echo =========================================================

CREATE TABLE test (
  id INT,
  name char(7),
  unique key(id,name))
PARTITION BY RANGE (substr(name, 1)) partitions 2
subpartition by hash (id) subpartitions 2
( PARTITION p_ccc VALUES LESS THAN ('ccc')
    (subpartition s0, subpartition s1),
  PARTITION p_kkk VALUES LESS THAN ('kkk')
    (subpartition s2, subpartition s3));

show create table test;
insert into test values (1, 'aaa'), (2, 'bbb');
insert into test values (3, 'ddd'), (4, 'fff');

--echo 支持 select_into_outfile
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--eval select * into outfile '$MYSQLTEST_VARDIR/tmp/range_substr_20200629.txt' from test order by id
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--eval select load_file('$MYSQLTEST_VARDIR/tmp/range_substr_20200629.txt')
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
truncate table test;

--echo 支持 load_data_infile
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--eval LOAD DATA INFILE '$MYSQLTEST_VARDIR/tmp/range_substr_20200629.txt' INTO TABLE test
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--eval select * from test order by id
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--remove_file $MYSQLTEST_VARDIR/tmp/range_substr_20200629.txt
drop table test;

--echo 清理测试数据
drop database if exists test_db;
--enable_warnings

# End of Range分区支持substring函数
