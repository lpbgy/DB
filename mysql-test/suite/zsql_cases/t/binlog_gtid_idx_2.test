# === Purpose ===
#
# This test case will verify the function of binlog gtid_idx mechanism 
# 1. WRITE
# 2. ROTATE
# 3. PURGE
# 4. MASTER / SLAVE RELATIONSHIP
#
--source include/not_windows.inc

--source include/have_log_bin.inc
--source include/not_group_replication_plugin.inc
--source include/master-slave.inc

#semisync plugine has built in ,we do not need to install it

##### START #####
--source include/rpl_connection_master.inc
create database fangpei_test;
use fangpei_test;
create table t1 (id int);



#########################################################
################# gtid_idx WRITE test ###################
#########################################################

--echo ##########################################################################
--echo #CASE 1: explicit transactions with gtid hint 
--echo ##########################################################################

--source include/rpl_connection_master.inc
use fangpei_test;
/*+GTID=7*/start transaction;
insert into t1 values (7);
commit;
/*+GTID=8*/start transaction;
insert into t1 values (8);
commit;

--disable_warnings
drop table if exists master_tmp_1_01;
drop table if exists master_tmp_2_01;
drop table if exists master_tmp_3_01;
--enable_warnings
create table master_tmp_1_01(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_01(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_01(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_01 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_01 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_01 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_01 limit 1, 18446744073709551615;

select * from master_tmp_1_01 limit 1;
select count(*) from master_tmp_1_01;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_01 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 7
--let $assert_cond = [select * from master_tmp_3_01, gtm_gtid, 1] = 7
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 8
--let $assert_cond = [select * from master_tmp_3_01, gtm_gtid, 2] = 8
--source include/assert.inc

drop table master_tmp_1_01;
drop table master_tmp_2_01;
drop table master_tmp_3_01;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_01;
--enable_warnings
create table slave_tmp_2_01(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_01 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_01 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_01;



--echo ##########################################################################
--echo #CASE 2: explicit transactions without gtid hint 
--echo ##########################################################################

--source include/rpl_connection_master.inc
use fangpei_test;
start transaction;
insert into t1 values (9);
commit;
start transaction;
insert into t1 values (10);
commit;

--disable_warnings
drop table if exists master_tmp_1_02;
drop table if exists master_tmp_2_02;
drop table if exists master_tmp_3_02;
--enable_warnings
create table master_tmp_1_02(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_02(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_02(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_02 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_02 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_02 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_02 limit 1, 18446744073709551615;

select * from master_tmp_1_02 limit 1;
select count(*) from master_tmp_1_02;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_02 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 7
--let $assert_cond = [select * from master_tmp_3_02, gtm_gtid, 1] = 7
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 8
--let $assert_cond = [select * from master_tmp_3_02, gtm_gtid, 2] = 8
--source include/assert.inc

drop table master_tmp_1_02;
drop table master_tmp_2_02;
drop table master_tmp_3_02;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_02;
--enable_warnings
create table slave_tmp_2_02(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_02 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_02 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_02;



--echo ##########################################################################
--echo #CASE 3: auto commit transactions with gtid hint 
--echo ##########################################################################

--source include/rpl_connection_master.inc
use fangpei_test;
/*+GTID=11*/insert into t1 values (11);
/*+GTID=12*/insert into t1 values (12);

--disable_warnings
drop table if exists master_tmp_1_03;
drop table if exists master_tmp_2_03;
drop table if exists master_tmp_3_03;
--enable_warnings
create table master_tmp_1_03(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_03(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_03(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_03 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_03 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_03 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_03 limit 1, 18446744073709551615;

select * from master_tmp_1_03 limit 1;
select count(*) from master_tmp_1_03;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_03 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 7
--let $assert_cond = [select * from master_tmp_3_03, gtm_gtid, 1] = 7
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 8
--let $assert_cond = [select * from master_tmp_3_03, gtm_gtid, 2] = 8
--source include/assert.inc

--let $assert_text = 3rd gtm-gtid must be 11
--let $assert_cond = [select * from master_tmp_3_03, gtm_gtid, 3] = 11
--source include/assert.inc

--let $assert_text = 4th gtm-gtid must be 12
--let $assert_cond = [select * from master_tmp_3_03, gtm_gtid, 4] = 12
--source include/assert.inc

drop table master_tmp_1_03;
drop table master_tmp_2_03;
drop table master_tmp_3_03;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_03;
--enable_warnings
create table slave_tmp_2_03(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_03 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_03 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_03;



--echo ##########################################################################
--echo #CASE 4: auto commit transactions without gtid hint 
--echo ##########################################################################

--source include/rpl_connection_master.inc
use fangpei_test;
insert into t1 values (13);
insert into t1 values (14);

--disable_warnings
drop table if exists master_tmp_1_04;
drop table if exists master_tmp_2_04;
drop table if exists master_tmp_3_04;
--enable_warnings
create table master_tmp_1_04(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_04(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_04(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_04 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_04 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_04 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_04 limit 1, 18446744073709551615;

select * from master_tmp_1_04 limit 1;
select count(*) from master_tmp_1_04;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_04 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 7
--let $assert_cond = [select * from master_tmp_3_04, gtm_gtid, 1] = 7
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 8
--let $assert_cond = [select * from master_tmp_3_04, gtm_gtid, 2] = 8
--source include/assert.inc

--let $assert_text = 3rd gtm-gtid must be 11
--let $assert_cond = [select * from master_tmp_3_04, gtm_gtid, 3] = 11
--source include/assert.inc

--let $assert_text = 4th gtm-gtid must be 12
--let $assert_cond = [select * from master_tmp_3_04, gtm_gtid, 4] = 12
--source include/assert.inc

drop table master_tmp_1_04;
drop table master_tmp_2_04;
drop table master_tmp_3_04;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_04;
--enable_warnings
create table slave_tmp_2_04(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_04 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_04 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_04;



--echo ##########################################################################
--echo #CASE 5: explicit transaction with gtid hint, bigger then max_binlog_size 
--echo ##########################################################################

--source include/rpl_connection_master.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;
--source include/rpl_connection_slave.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;


--source include/rpl_connection_master.inc
use fangpei_test;

--disable_warnings
drop table if exists master_tmp_1_05;
drop table if exists master_tmp_2_05;
drop table if exists master_tmp_3_05;
--enable_warnings
create table master_tmp_1_05(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_05(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_05(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_05 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_05 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_05 limit 1;
select count(*) from master_tmp_1_05;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_05 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_05;
truncate table master_tmp_2_05;


--source include/rpl_connection_slave.inc
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)


--source include/rpl_connection_master.inc
insert into t1 select * from t1 limit 3;
insert into t1 select * from t1 limit 5;
insert into t1 select * from t1 limit 10;
insert into t1 select * from t1 limit 20;
insert into t1 select * from t1 limit 40;
insert into t1 select * from t1 limit 80;
insert into t1 select * from t1 limit 100;
insert into t1 select * from t1 limit 100;
/*+GTID=3000*/start transaction;
insert into t1 select * from t1 limit 3000;
commit;

file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_05 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_05 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_05 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_05 limit 1, 18446744073709551615;

select * from master_tmp_1_05 limit 1;
select count(*) from master_tmp_1_05;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_05 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 3000
--let $assert_cond = [select * from master_tmp_3_05, gtm_gtid, 1] = 3000
--source include/assert.inc

truncate table master_tmp_1_05;
truncate table master_tmp_2_05;

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_05 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_05 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_05 limit 1;
select count(*) from master_tmp_1_05;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_05 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table master_tmp_1_05;
drop table master_tmp_2_05;
drop table master_tmp_3_05;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_05;
--enable_warnings
create table slave_tmp_2_05(status_flag int, other1 varchar(256), other2 varchar(256));

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_05 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_05 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_05;

--let $old_slave_binlog_file = $cur_slave_binlog_file
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
while ($old_slave_binlog_file == $cur_slave_binlog_file)
{
  --let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
  --real_sleep 0.5
}

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_05 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_05 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_05;


--source include/rpl_connection_master.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;
--source include/rpl_connection_slave.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;



--echo ##########################################################################
--echo #CASE 6: explicit transaction without gtid hint, bigger then max_binlog_size 
--echo ##########################################################################

--source include/rpl_connection_master.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;
--source include/rpl_connection_slave.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;


--source include/rpl_connection_master.inc
use fangpei_test;

--disable_warnings
drop table if exists master_tmp_1_06;
drop table if exists master_tmp_2_06;
drop table if exists master_tmp_3_06;
--enable_warnings
create table master_tmp_1_06(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_06(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_06(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_06 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_06 fields terminated by '#';
--enable_warnings
--enable_query_log

select * from master_tmp_1_06 limit 1;
select count(*) from master_tmp_1_06;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_06 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_06;
truncate table master_tmp_2_06;


--source include/rpl_connection_slave.inc
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)


--source include/rpl_connection_master.inc
start transaction;
insert into t1 select * from t1 limit 3000;
commit;

file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_06 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_06 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_06 limit 1;
select count(*) from master_tmp_1_06;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_06 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_06;
truncate table master_tmp_2_06;

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_06 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_06 fields terminated by '#';
--enable_warnings
--enable_query_log

select * from master_tmp_1_06 limit 1;
select count(*) from master_tmp_1_06;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_06 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table master_tmp_1_06;
drop table master_tmp_2_06;
drop table master_tmp_3_06;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_06;
--enable_warnings
create table slave_tmp_2_06(status_flag int, other1 varchar(256), other2 varchar(256));

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_06 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_06 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_06;

--let $old_slave_binlog_file = $cur_slave_binlog_file
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
while ($old_slave_binlog_file == $cur_slave_binlog_file)
{
  --let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
  --real_sleep 0.5
}

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_06 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_06 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_06;


--source include/rpl_connection_master.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;
--source include/rpl_connection_slave.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;



--echo ##########################################################################
--echo #CASE 7: auto commit transaction with gtid hint, bigger then max_binlog_size 
--echo ##########################################################################

--source include/rpl_connection_master.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;
--source include/rpl_connection_slave.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;


--source include/rpl_connection_master.inc
use fangpei_test;

--disable_warnings
drop table if exists master_tmp_1_07;
drop table if exists master_tmp_2_07;
drop table if exists master_tmp_3_07;
--enable_warnings
create table master_tmp_1_07(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_07(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_07(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_07 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_07 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_07 limit 1;
select count(*) from master_tmp_1_07;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_07 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_07;
truncate table master_tmp_2_07;


--source include/rpl_connection_slave.inc
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)


--source include/rpl_connection_master.inc
/*+GTID=3002*/insert into t1 select * from t1 limit 3000;

file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_07 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_07 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_07 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_07 limit 1, 18446744073709551615;

select * from master_tmp_1_07 limit 1;
select count(*) from master_tmp_1_07;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_07 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 3002
--let $assert_cond = [select * from master_tmp_3_07, gtm_gtid, 1] = 3002
--source include/assert.inc

truncate table master_tmp_1_07;
truncate table master_tmp_2_07;

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_07 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_07 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_07 limit 1;
select count(*) from master_tmp_1_07;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_07 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table master_tmp_1_07;
drop table master_tmp_2_07;
drop table master_tmp_3_07;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_07;
--enable_warnings
create table slave_tmp_2_07(status_flag int, other1 varchar(256), other2 varchar(256));

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_07 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_07 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_07;

--let $old_slave_binlog_file = $cur_slave_binlog_file
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
while ($old_slave_binlog_file == $cur_slave_binlog_file)
{
  --let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
  --real_sleep 0.5
}

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_07 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_07 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_07;


--source include/rpl_connection_master.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;
--source include/rpl_connection_slave.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;



--echo ##########################################################################
--echo #CASE 8: auto commit transaction without gtid hint, bigger then max_binlog_size 
--echo ##########################################################################

--source include/rpl_connection_master.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;
--source include/rpl_connection_slave.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;


--source include/rpl_connection_master.inc
use fangpei_test;

--disable_warnings
drop table if exists master_tmp_1_08;
drop table if exists master_tmp_2_08;
drop table if exists master_tmp_3_08;
--enable_warnings
create table master_tmp_1_08(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_08(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_08(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_08 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_08 fields terminated by '#';
--enable_warnings
--enable_query_log

select * from master_tmp_1_08 limit 1;
select count(*) from master_tmp_1_08;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_08 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_08;
truncate table master_tmp_2_08;


--source include/rpl_connection_slave.inc
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)


--source include/rpl_connection_master.inc
insert into t1 select * from t1 limit 3000;

file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_08 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_08 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_08 limit 1;
select count(*) from master_tmp_1_08;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_08 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_08;
truncate table master_tmp_2_08;

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_08 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_08 fields terminated by '#';
--enable_warnings
--enable_query_log

select * from master_tmp_1_08 limit 1;
select count(*) from master_tmp_1_08;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_08 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table master_tmp_1_08;
drop table master_tmp_2_08;
drop table master_tmp_3_08;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_08;
--enable_warnings
create table slave_tmp_2_08(status_flag int, other1 varchar(256), other2 varchar(256));

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_08 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_08 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_08;

--let $old_slave_binlog_file = $cur_slave_binlog_file
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
while ($old_slave_binlog_file == $cur_slave_binlog_file)
{
  --let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
  --real_sleep 0.5
}

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_08 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_08 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_08;


--source include/rpl_connection_master.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;
--source include/rpl_connection_slave.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;



--echo ##########################################################################
--echo #CASE 9: explicit transactions with gtid hint concurrent execute 
--echo ##########################################################################

--source include/rpl_connection_master.inc
connect (con1,localhost,root,,);
connect (con2,localhost,root,,);
connect (con3,localhost,root,,);

connection con1;
use fangpei_test;
start transaction;
/*+GTID=13*/start transaction;
insert into t1 values (13);

connection con2;
use fangpei_test;
start transaction;
/*+GTID=14*/start transaction;
insert into t1 values (14);

connection con3;
use fangpei_test;
start transaction;
/*+GTID=15*/start transaction;
insert into t1 values (15);

connection con2;
commit;
disconnect con2;

connection con3;
commit;
disconnect con3;

connection con1;
commit;
disconnect con1;

connection default;
use fangpei_test;
--disable_warnings
drop table if exists master_tmp_1_09;
drop table if exists master_tmp_2_09;
drop table if exists master_tmp_3_09;
--enable_warnings
create table master_tmp_1_09(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_09(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_09(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_09 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_09 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_09 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_09 limit 1, 18446744073709551615;

select * from master_tmp_1_09 limit 1;
select count(*) from master_tmp_1_09;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_09 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 14
--let $assert_cond = [select * from master_tmp_3_09, gtm_gtid, 1] = 14
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 15
--let $assert_cond = [select * from master_tmp_3_09, gtm_gtid, 2] = 15
--source include/assert.inc

--let $assert_text = 3rd gtm-gtid must be 13
--let $assert_cond = [select * from master_tmp_3_09, gtm_gtid, 3] = 13
--source include/assert.inc

drop table master_tmp_1_09;
drop table master_tmp_2_09;
drop table master_tmp_3_09;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_09;
--enable_warnings
create table slave_tmp_2_09(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_09 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_09 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_09;



--echo ##########################################################################
--echo #CASE 10: DDL with gtid hint 
--echo ##########################################################################

--source include/rpl_connection_master.inc
use fangpei_test;

/*+GTID=16*/create table t2 (id int);

--disable_warnings
drop table if exists master_tmp_1_10;
drop table if exists master_tmp_2_10;
drop table if exists master_tmp_3_10;
--enable_warnings
create table master_tmp_1_10(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_10(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_10(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_10 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_10 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_10 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_10 limit 1, 18446744073709551615;

select * from master_tmp_1_10 limit 1;
select count(*) from master_tmp_1_10;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_10 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 14
--let $assert_cond = [select * from master_tmp_3_10, gtm_gtid, 1] = 14
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 15
--let $assert_cond = [select * from master_tmp_3_10, gtm_gtid, 2] = 15
--source include/assert.inc

--let $assert_text = 3rd gtm-gtid must be 13
--let $assert_cond = [select * from master_tmp_3_10, gtm_gtid, 3] = 13
--source include/assert.inc

--let $assert_text = 4th gtm-gtid must be 16
--let $assert_cond = [select * from master_tmp_3_10, gtm_gtid, 4] = 16
--source include/assert.inc

drop table master_tmp_1_10;
drop table master_tmp_2_10;
drop table master_tmp_3_10;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_1_10;
drop table if exists slave_tmp_2_10;
drop table if exists slave_tmp_3_10;
--enable_warnings
create table slave_tmp_1_10(gtm_gtid varchar(256), pos varchar(256));
create table slave_tmp_2_10(status_flag int, other1 varchar(256), other2 varchar(256));
create table slave_tmp_3_10(gtm_gtid int);

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_1_10 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_10 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into slave_tmp_3_10 select cast(gtm_gtid as signed) as gtm_gtid from slave_tmp_1_10 limit 1, 18446744073709551615;

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_10 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 16
--let $assert_cond = [select * from slave_tmp_3_10, gtm_gtid, 1] = 16
--source include/assert.inc

drop table slave_tmp_1_10;
drop table slave_tmp_2_10;
drop table slave_tmp_3_10;



--echo ##########################################################################
--echo #CASE 11: DDL with gtid hint nested in explicit transactions
--echo ##########################################################################

--source include/rpl_connection_master.inc
use fangpei_test;

/*+GTID=5500*/ start transaction;
insert into t1 values (5500);
/*+GTID=5003*/create table t8 (id int);
insert into t1 values (5501);
commit;

--disable_warnings
drop table if exists master_tmp_1_11;
drop table if exists master_tmp_2_11;
drop table if exists master_tmp_3_11;
--enable_warnings
create table master_tmp_1_11(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_11(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_11(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_11 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_11 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_11 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_11 limit 1, 18446744073709551615;

select * from master_tmp_1_11 limit 1;
select count(*) from master_tmp_1_11;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_11 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 14
--let $assert_cond = [select * from master_tmp_3_11, gtm_gtid, 1] = 14
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 15
--let $assert_cond = [select * from master_tmp_3_11, gtm_gtid, 2] = 15
--source include/assert.inc

--let $assert_text = 3rd gtm-gtid must be 13
--let $assert_cond = [select * from master_tmp_3_11, gtm_gtid, 3] = 13
--source include/assert.inc

--let $assert_text = 4th gtm-gtid must be 16
--let $assert_cond = [select * from master_tmp_3_11, gtm_gtid, 4] = 16
--source include/assert.inc

--let $assert_text = 5th gtm-gtid must be 5500
--let $assert_cond = [select * from master_tmp_3_11, gtm_gtid, 5] = 5500
--source include/assert.inc

--let $assert_text = 6th gtm-gtid must be 5003
--let $assert_cond = [select * from master_tmp_3_11, gtm_gtid, 6] = 5003
--source include/assert.inc

drop table master_tmp_1_11;
drop table master_tmp_2_11;
drop table master_tmp_3_11;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_1_11;
drop table if exists slave_tmp_2_11;
drop table if exists slave_tmp_3_11;
--enable_warnings
create table slave_tmp_1_11(gtm_gtid varchar(256), pos varchar(256));
create table slave_tmp_2_11(status_flag int, other1 varchar(256), other2 varchar(256));
create table slave_tmp_3_11(gtm_gtid int);

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_1_11 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_11 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into slave_tmp_3_11 select cast(gtm_gtid as signed) as gtm_gtid from slave_tmp_1_11 limit 1, 18446744073709551615;

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_11 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 16
--let $assert_cond = [select * from slave_tmp_3_11, gtm_gtid, 1] = 16
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 5003
--let $assert_cond = [select * from slave_tmp_3_11, gtm_gtid, 2] = 5003
--source include/assert.inc

drop table slave_tmp_1_11;
drop table slave_tmp_2_11;
drop table slave_tmp_3_11;



--echo ##########################################################################
--echo #CASE 12: DDL without gtid hint
--echo ##########################################################################

--source include/rpl_connection_master.inc
use fangpei_test;

create table t3 (id int);

--disable_warnings
drop table if exists master_tmp_1_12;
drop table if exists master_tmp_2_12;
drop table if exists master_tmp_3_12;
--enable_warnings
create table master_tmp_1_12(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_12(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_12(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_12 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_12 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_12 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_12 limit 1, 18446744073709551615;

select * from master_tmp_1_12 limit 1;
select count(*) from master_tmp_1_12;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_12 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 14
--let $assert_cond = [select * from master_tmp_3_12, gtm_gtid, 1] = 14
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 15
--let $assert_cond = [select * from master_tmp_3_12, gtm_gtid, 2] = 15
--source include/assert.inc

--let $assert_text = 3rd gtm-gtid must be 13
--let $assert_cond = [select * from master_tmp_3_12, gtm_gtid, 3] = 13
--source include/assert.inc

--let $assert_text = 4th gtm-gtid must be 16
--let $assert_cond = [select * from master_tmp_3_12, gtm_gtid, 4] = 16
--source include/assert.inc

--let $assert_text = 5th gtm-gtid must be 5500
--let $assert_cond = [select * from master_tmp_3_12, gtm_gtid, 5] = 5500
--source include/assert.inc

--let $assert_text = 6th gtm-gtid must be 5003
--let $assert_cond = [select * from master_tmp_3_12, gtm_gtid, 6] = 5003
--source include/assert.inc

drop table master_tmp_1_12;
drop table master_tmp_2_12;
drop table master_tmp_3_12;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_1_12;
drop table if exists slave_tmp_2_12;
drop table if exists slave_tmp_3_12;
--enable_warnings
create table slave_tmp_1_12(gtm_gtid varchar(256), pos varchar(256));
create table slave_tmp_2_12(status_flag int, other1 varchar(256), other2 varchar(256));
create table slave_tmp_3_12(gtm_gtid int);

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_1_12 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_12 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into slave_tmp_3_12 select cast(gtm_gtid as signed) as gtm_gtid from slave_tmp_1_12 limit 1, 18446744073709551615;

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_12 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 16
--let $assert_cond = [select * from slave_tmp_3_12, gtm_gtid, 1] = 16
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 5003
--let $assert_cond = [select * from slave_tmp_3_12, gtm_gtid, 2] = 5003
--source include/assert.inc

drop table slave_tmp_1_12;
drop table slave_tmp_2_12;
drop table slave_tmp_3_12;



#########################################################
################# gtid_idx ROTATE test ##################
#########################################################

--echo ##########################################################################
--echo #CASE 13: master & slave rotate for one time and several times  
--echo ##########################################################################

--source include/rpl_connection_master.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;
--source include/rpl_connection_slave.inc
SET @old_max_binlog_size   = @@global.max_binlog_size;
SET GLOBAL max_binlog_size = 8192;


--source include/rpl_connection_master.inc
use fangpei_test;

--disable_warnings
drop table if exists master_tmp_1_l3;
drop table if exists master_tmp_2_l3;
--enable_warnings
create table master_tmp_1_l3(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_l3(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_l3 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_l3 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_l3 limit 1;
select count(*) from master_tmp_1_l3;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_l3;
truncate table master_tmp_2_l3;


--source include/rpl_connection_slave.inc
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_2_l3;
--enable_warnings
create table slave_tmp_2_l3(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_l3 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_l3;


--source include/rpl_connection_master.inc
use fangpei_test;
/*+GTID=3004*/insert into t1 select * from t1 limit 3000;


file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_l3 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_l3 fields terminated by '#';
--enable_warnings
--enable_query_log

select * from master_tmp_1_l3 limit 1;
select count(*) from master_tmp_1_l3;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_l3;
truncate table master_tmp_2_l3;


--source include/rpl_connection_slave.inc
use fangpei_test;

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_l3 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_l3;


--source include/rpl_connection_master.inc
use fangpei_test;

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_l3 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_l3 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_l3 limit 1;
select count(*) from master_tmp_1_l3;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_l3;
truncate table master_tmp_2_l3;


--source include/rpl_connection_slave.inc
use fangpei_test;

--let $old_slave_binlog_file = $cur_slave_binlog_file
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
while ($old_slave_binlog_file == $cur_slave_binlog_file)
{
  --let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
  --real_sleep 0.5
}

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_l3 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_l3;



--source include/rpl_connection_master.inc
use fangpei_test;
/*+GTID=3005*/insert into t1 select * from t1 limit 3000;


file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_l3 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_l3 fields terminated by '#';
--enable_warnings
--enable_query_log

select * from master_tmp_1_l3 limit 1;
select count(*) from master_tmp_1_l3;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table master_tmp_1_l3;
truncate table master_tmp_2_l3;


--source include/rpl_connection_slave.inc
use fangpei_test;

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_l3 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_l3;


--source include/rpl_connection_master.inc
use fangpei_test;

--let $old_slave_binlog_file = $cur_slave_binlog_file
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
while ($old_slave_binlog_file == $cur_slave_binlog_file)
{
  --let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
  --real_sleep 0.5
}

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_l3 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_l3 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_l3 limit 1;
select count(*) from master_tmp_1_l3;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table master_tmp_1_l3;
drop table master_tmp_2_l3;


--source include/rpl_connection_slave.inc
use fangpei_test;

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_l3 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_l3 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_l3;


--source include/rpl_connection_master.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;
--source include/rpl_connection_slave.inc
SET GLOBAL max_binlog_size = @old_max_binlog_size;



#########################################################
################# gtid_idx PURGE test ###################
#########################################################

--echo ##########################################################################
--echo #CASE 14: master & slave 'purge binary logs to ...'
--echo ##########################################################################

--source include/rpl_connection_master.inc
purge binary logs to 'master-bin.000003';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003.gtid_idx';


--source include/rpl_connection_slave.inc
purge binary logs to 'slave-bin.000002';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002.gtid_idx';



--echo ##########################################################################
--echo #CASE 15: master & slave 'purge master logs to ...'
--echo ##########################################################################

--source include/rpl_connection_master.inc
purge master logs to 'master-bin.000004';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004.gtid_idx';


--source include/rpl_connection_slave.inc
purge master logs to 'slave-bin.000004';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004.gtid_idx';



--echo ##########################################################################
--echo #CASE 16: master & slave 'purge binary logs before YYYY-MM-DD HH-mm-ss'
--echo ##########################################################################

--source include/rpl_connection_master.inc
--exec touch -d "01/01/1990" $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004
purge binary logs before '1991-01-01 00:00:00';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005.gtid_idx';


--source include/rpl_connection_slave.inc
--exec touch -d "01/01/1990" $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004
purge binary logs before '1991-01-01 00:00:00';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005.gtid_idx';



--echo ##########################################################################
--echo #CASE 17: master & slave purge logs over max period when rotating binlog
--echo ##########################################################################

--source include/rpl_connection_master.inc
--exec touch -d "01/01/1992" $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005
flush binary logs;

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006.gtid_idx';


--source include/rpl_connection_slave.inc
--exec touch -d "01/01/1992" $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005
flush binary logs;

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006.gtid_idx';



--echo ##########################################################################
--echo #CASE 18: master & slave purge logs over max period when starting DB
--echo ##########################################################################

--let $rpl_server_number=1
--source include/rpl_stop_server.inc
--exec touch -d "01/01/1993" $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006
--let $rpl_server_number=1
--source include/rpl_start_server.inc

--source include/rpl_connection_master.inc

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000007';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000007.gtid_idx';


--let $rpl_server_number=2
--source include/rpl_stop_server.inc
--exec touch -d "01/01/1993" $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006
--let $rpl_server_number=2
--source include/rpl_start_server.inc

--source include/rpl_connection_slave.inc
start slave;

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007.gtid_idx';



--echo ##########################################################################
--echo #CASE 19: master & slave purge logs with binlog not found
--echo ##########################################################################

remove_file $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000008;
--source include/rpl_connection_master.inc
purge binary logs to 'master-bin.000009';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000007
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000007.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000008
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000008.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000009';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000009.gtid_idx';


remove_file $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007;
--source include/rpl_connection_slave.inc
purge binary logs to 'slave-bin.000009';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000008
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000008.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000009';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000009.gtid_idx';



--echo ##########################################################################
--echo #CASE 20: master & slave purge logs with gtid_idx file not found
--echo ##########################################################################

remove_file $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000009.gtid_idx;
--source include/rpl_connection_master.inc
purge binary logs to 'master-bin.000010';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000007
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000007.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000008
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000008.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000009
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000009.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000010';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000010.gtid_idx';


remove_file $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000009.gtid_idx;
--source include/rpl_connection_slave.inc
purge binary logs to 'slave-bin.000010';

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000001.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000008
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000008.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000009
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000009.gtid_idx
--source include/file_does_not_exist.inc
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000010';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000010.gtid_idx';



#########################################################
########### MASTER / SLAVE RELATIONSHIP test ############
#########################################################

--echo ##########################################################################
--echo #CASE 21: master & slave exec 'reset master'
--echo ##########################################################################

--source include/rpl_reset.inc

--source include/rpl_connection_master.inc

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000006.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000007
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000007.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000008
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000008.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000009
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000009.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000010
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000010.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000011
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.1/data/master-bin.000011.gtid_idx
--source include/file_does_not_exist.inc

use fangpei_test;
--disable_warnings
drop table if exists master_tmp_1_21;
drop table if exists master_tmp_2_21;
--enable_warnings
create table master_tmp_1_21(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_21(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_21 fields terminated by ' ';
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_21 fields terminated by '#';
--enable_query_log

select * from master_tmp_1_21 limit 1;
select count(*) from master_tmp_1_21;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_21 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table master_tmp_1_21;
drop table master_tmp_2_21;


--source include/rpl_connection_slave.inc

--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000002.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000003.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000004.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000005.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000006.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000007.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000008
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000008.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000009
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000009.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000010
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000010.gtid_idx
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000011
--source include/file_does_not_exist.inc
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/slave-bin.000011.gtid_idx
--source include/file_does_not_exist.inc

use fangpei_test;
--disable_warnings
drop table if exists slave_tmp_2_21;
--enable_warnings
create table slave_tmp_2_21(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
--let $cur_slave_relaylog_file = query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file';
--let $file_does_not_exist = $MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_relaylog_file.gtid_idx
--source include/file_does_not_exist.inc
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_21 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_21 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_21;



--echo ##########################################################################
--echo #CASE 22: slave exec 'stop slave; reset slave; shutdown'
--echo ##########################################################################

--let $include_filename= rpl_reset.inc
--source include/begin_include_file.inc

--source include/rpl_sync.inc

--source include/rpl_stop_slaves.inc

--let $rpl_source_file= include/rpl_reset_slave_helper.inc
--source include/rpl_for_each_connection.inc


--source include/rpl_connection_slave.inc
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)

--let $rpl_server_number=2
--source include/rpl_restart_server.inc

# use --let $rpl_topology = 1->2 --source include/rpl_change_topology.inc may be error
--source include/rpl_connection_slave.inc
--disable_query_log
eval change master to Master_Host = '127.0.0.1', Master_Port = $SERVER_MYPORT_1, Master_User = 'root';
--enable_query_log

--source include/rpl_start_slaves.inc

--let $include_filename= rpl_reset.inc
--source include/end_include_file.inc


--source include/rpl_connection_slave.inc
use fangpei_test;
--disable_warnings
drop table if exists slave_tmp_2_22;
--enable_warnings
create table slave_tmp_2_22(status_flag int, other1 varchar(256), other2 varchar(256));

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_22 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_22 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_22;



--echo ##########################################################################
--echo #CASE 23: slave exec 'stop slave; reset slave all; shutdown'
--echo ##########################################################################

--let $include_filename= rpl_reset.inc
--source include/begin_include_file.inc

--source include/rpl_sync.inc

--source include/rpl_stop_slaves.inc

--let $rpl_reset_slave_all = 1
--let $rpl_source_file= include/rpl_reset_slave_helper.inc
--source include/rpl_for_each_connection.inc


--source include/rpl_connection_slave.inc
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)

use fangpei_test;
/*+GTID=231*/insert into t1 values (231);
/*+GTID=232*/insert into t1 values (232);
--disable_warnings
drop table if exists slave_tmp_2_23;
--enable_warnings
create table slave_tmp_2_23(status_flag int, other1 varchar(256), other2 varchar(256));

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_23 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_23 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_23;


--let $rpl_server_number=2
--source include/rpl_restart_server.inc

--source include/rpl_connection_slave.inc
--disable_query_log
eval change master to Master_Host = '127.0.0.1', Master_Port = $SERVER_MYPORT_1, Master_User = 'root';
--enable_query_log

--source include/rpl_start_slaves.inc

--let $include_filename= rpl_reset.inc
--source include/end_include_file.inc


--source include/rpl_connection_slave.inc
use fangpei_test;

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_23 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_23 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_23;



--echo ##########################################################################
--echo #CASE 24: slave exec 'stop slave; reset slave all; rotate'
--echo ##########################################################################

--let $include_filename= rpl_reset.inc
--source include/begin_include_file.inc

--source include/rpl_sync.inc

--source include/rpl_stop_slaves.inc

--let $rpl_reset_slave_all = 1
--let $rpl_source_file= include/rpl_reset_slave_helper.inc
--source include/rpl_for_each_connection.inc


--source include/rpl_connection_slave.inc
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)

use fangpei_test;
--disable_warnings
drop table if exists slave_tmp_2_24;
--enable_warnings
create table slave_tmp_2_24(status_flag int, other1 varchar(256), other2 varchar(256));

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_24 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_24 limit 1, status_flag, 1] = 1
--source include/assert.inc

truncate table slave_tmp_2_24;


--source include/rpl_connection_slave.inc
use fangpei_test;
flush binary logs;
--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)

file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_24 fields terminated by '#';
--enable_query_log

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_24 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_2_24;

--source include/rpl_connection_slave.inc
--disable_query_log
eval change master to Master_Host = '127.0.0.1', Master_Port = $SERVER_MYPORT_1, Master_User = 'root';
--enable_query_log

--source include/rpl_start_slaves.inc

--let $include_filename= rpl_reset.inc
--source include/end_include_file.inc



--echo ##########################################################################
--echo #CASE 25: slave exec 'master / slave switch'
--echo ##########################################################################

--source include/rpl_connection_master.inc
use fangpei_test;
/*+GTID=11*/insert into t1 values (11);
/*+GTID=12*/insert into t1 values (12);


--let $include_filename= rpl_change_topology.inc
--source include/begin_include_file.inc

--source include/rpl_sync.inc

--source include/rpl_stop_slaves.inc

--let $rpl_reset_slave_all = 1
--let $rpl_source_file= include/rpl_reset_slave_helper.inc
--source include/rpl_for_each_connection.inc

--let $rpl_topology = 2->1
--source include/rpl_change_topology.inc

--source include/rpl_start_slaves.inc

--let $include_filename= rpl_change_topology.inc
--source include/end_include_file.inc


--source include/rpl_connection_slave.inc
--echo [old slave, new master]
use fangpei_test;
/*+GTID=13*/insert into t1 values (13);
/*+GTID=14*/insert into t1 values (14);


--source include/rpl_connection_master.inc
--echo [old master, new slave]
use fangpei_test;

--disable_warnings
drop table if exists master_tmp_1_25;
drop table if exists master_tmp_2_25;
drop table if exists master_tmp_3_25;
--enable_warnings
create table master_tmp_1_25(gtm_gtid varchar(256), pos varchar(256));
create table master_tmp_2_25(status_flag int, other1 varchar(256), other2 varchar(256));
create table master_tmp_3_25(gtm_gtid int);

--let $cur_master_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';
echo $cur_master_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_1_25 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.1/data/$cur_master_binlog_file.gtid_idx' ignore into table master_tmp_2_25 fields terminated by '#';
--enable_warnings
--enable_query_log
insert into master_tmp_3_25 select cast(gtm_gtid as signed) as gtm_gtid from master_tmp_1_25 limit 1, 18446744073709551615;

select * from master_tmp_1_25 limit 1;
select count(*) from master_tmp_1_25;

--let $assert_text = master gtid_idx file flag must be 1
--let $assert_cond = [select * from master_tmp_2_25 limit 1, status_flag, 1] = 1
--source include/assert.inc

--let $assert_text = 1st gtm-gtid must be 11
--let $assert_cond = [select * from master_tmp_3_25, gtm_gtid, 1] = 11
--source include/assert.inc

--let $assert_text = 2nd gtm-gtid must be 12
--let $assert_cond = [select * from master_tmp_3_25, gtm_gtid, 2] = 12
--source include/assert.inc

drop table master_tmp_1_25;
drop table master_tmp_2_25;
drop table master_tmp_3_25;


--source include/rpl_connection_slave.inc
--echo [old slave, new master]
use fangpei_test;

--disable_warnings
drop table if exists slave_tmp_1_25;
drop table if exists slave_tmp_2_25;
--enable_warnings
create table slave_tmp_1_25(gtm_gtid varchar(256), pos varchar(256));
create table slave_tmp_2_25(status_flag int, other1 varchar(256), other2 varchar(256));

--let $cur_slave_binlog_file = query_get_value(SHOW MASTER STATUS, File, 1)
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file';
file_exists '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';
echo $cur_slave_binlog_file;
cat_file '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx';

--disable_query_log
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_1_25 fields terminated by ' ';
--disable_warnings
eval load data infile '$MYSQLTEST_VARDIR/mysqld.2/data/$cur_slave_binlog_file.gtid_idx' ignore into table slave_tmp_2_25 fields terminated by '#';
--enable_warnings
--enable_query_log

select * from slave_tmp_1_25 limit 1;
select count(*) from slave_tmp_1_25;

--let $assert_text = slave gtid_idx file flag must be 1
--let $assert_cond = [select * from slave_tmp_2_25 limit 1, status_flag, 1] = 1
--source include/assert.inc

drop table slave_tmp_1_25;
drop table slave_tmp_2_25;



##### END #####
--source include/rpl_connection_slave.inc
--echo [old slave, new master]
drop database fangpei_test;

--source include/rpl_end.inc

