# Fix 2 bugs of mysqld crash caused by usage of empty refcursor.
# BUG-1:
# For example:
#    declare
#      rc sys_refcursor;
#    begin
#       open rc;
#     end;
# In this case, sys_refcursor has not been binded with any sql statement, usage of rc will cause corruption.
# In another case, a sys_refcursor variable used as common variable uncorrectly will also lead to crash.
#
# BUG-2:
# For another bug, push_cursor_instr() in SYS_REFCURSOR definition saves stack memory for later usage,
#   which leads to cash.
# This commit will fix these 2 bugs.

--disable_warnings
drop database if exists yxx;
--enable_warnings
create database yxx;
use yxx;
create table t1 (id int, age int);
insert into t1 values (1, 1), (3, 3), (5, 5);


# sys_refcursor exists in oracle-mode
set @old_parse_mode = @@parse_mode;
set @@parse_mode = 2;


--echo "###################### (1) test in declare block #######################"


--echo #########################################################################
--echo # test 1.1: open unbinded-sys_refcursor in declare block
--echo #########################################################################
--delimiter /
--error ER_PROCEDURE_EXECUTE_FAIL
declare
  rc sys_refcursor;
begin
  open rc;
  end; 
/
--delimiter ;


--echo #########################################################################
--echo # test 1.2: close unbinded-sys_refcursor in declare block
--echo #########################################################################
--delimiter /
--error ER_PROCEDURE_EXECUTE_FAIL
declare
  rc sys_refcursor;
begin
  close rc;
  end;
/
--delimiter ;


--echo #########################################################################
--echo # test 1.3: fetch unbinded-sys_refcursor in declare block
--echo #########################################################################
--delimiter /
--error ER_PROCEDURE_EXECUTE_FAIL
declare
  a int;
  rc sys_refcursor;
begin
  fetch rc into a;
  end;
/
--delimiter ;


--echo #########################################################################
--echo # test 1.4: access attributes of unbinded-sys_refcursor in declare block
--echo #########################################################################
--delimiter /
--error ER_PROCEDURE_EXECUTE_FAIL
declare
  a int;
  rc sys_refcursor;
begin
  a := rc%found;
  end;
/
--delimiter ;






--echo "###################### (2) test in procedure call #######################"


--echo #########################################################################
--echo # test 2.1: open unbinded-sys_refcursor in procedure
--echo #########################################################################
--delimiter /
create procedure testproc1()
as
  rc sys_refcursor;
begin
  open rc;
end;
/
--error ER_PROCEDURE_EXECUTE_FAIL
call testproc1();/
--delimiter ;


--echo #########################################################################
--echo # test 2.2: close unbinded-sys_refcursor in procedure
--echo #########################################################################
--delimiter /
create procedure testproc2()
as
  rc sys_refcursor;
begin
  close rc;
end;
/
--error ER_PROCEDURE_EXECUTE_FAIL
call testproc2();/
--delimiter ;


--echo #########################################################################
--echo # test 2.3: fetch unbinded-sys_refcursor in procedure
--echo #########################################################################
--delimiter /
create procedure testproc3()
as
  a int;
  rc sys_refcursor;
begin
  fetch rc into a;
end;
/
--error ER_PROCEDURE_EXECUTE_FAIL
call testproc3();/
--delimiter ;


--echo #########################################################################
--echo # test 2.4: access attributes of unbinded-sys_refcursor in procedure
--echo #########################################################################
--delimiter /
create procedure testproc4()
as
  a int;
  rc sys_refcursor;
begin
  a := rc%found;
end;
/
--error ER_PROCEDURE_EXECUTE_FAIL
call testproc4();/
--delimiter ;




--echo "############### (3) test in procedure call with decalre ################"


--echo #########################################################################
--echo # test 3.1: open unbinded-sys_refcursor in procedure with declare
--echo #########################################################################
--delimiter /
create procedure testproc11()
as
begin
  declare
    rc sys_refcursor;
  begin
    open rc;
  end;
end;
/
--error ER_PROCEDURE_EXECUTE_FAIL
call testproc1();/
--delimiter ;


--echo #########################################################################
--echo # test 3.2: close unbinded-sys_refcursor in procedure with declare
--echo #########################################################################
--delimiter /
create procedure testproc12()
as
begin
  declare
    rc sys_refcursor;
  begin
    close rc;
  end;
end;
/
--error ER_PROCEDURE_EXECUTE_FAIL
call testproc2();/
--delimiter ;


--echo #########################################################################
--echo # test 3.3: fetch unbinded-sys_refcursor in procedure with declare
--echo #########################################################################
--delimiter /
create procedure testproc13()
as
begin
  declare
    a int;
    rc sys_refcursor;
  begin
    fetch rc into a;
  end;
end;
/
--error ER_PROCEDURE_EXECUTE_FAIL
call testproc3();/
--delimiter ;


--echo #########################################################################
--echo # test 3.4: access attributes of unbinded-sys_refcursor in procedure with declare
--echo #########################################################################
--delimiter /
create procedure testproc14()
as
begin
  declare
    a int;
    rc sys_refcursor;
  begin
    a := rc%found;
  end;
end;
/
--error ER_PROCEDURE_EXECUTE_FAIL
call testproc4();/
--delimiter ;





--echo "######## (4) test special case (refcursor var used incorrectly) ########"

--echo #########################################################################
--echo # test 4.1: open unbinded-sys_refcursor used as common var
--echo #########################################################################
--delimiter /
create procedure testcusr() is
  mmd int;
  r sys_refcursor;
begin
  for r in(select id, age from t1)loop
    exit when r%notfound;
    select r.id, r.age;
  end loop;
  close r;
end;
/
--delimiter ;
--error ER_PROCEDURE_EXECUTE_FAIL
call testcusr();





--echo "clear..."
drop database yxx;
set @@parse_mode = @old_parse_mode;
