#
# Test：ZSQL兼容Oracle的'FETCH ROW ONLY'语法
#
# Syntax:
#    FETCH {FIRST | NEXT} [row_count] {ROW | ROWS} ONLY
#

# 创建测试数据库和测试表，并预制数据，为测试做准备
DROP DATABASE IF EXISTS test_db;
CREATE DATABASE test_db;
USE test_db;
CREATE table t1 (a INT PRIMARY KEY, b INT , c VARCHAR(30));
INSERT INTO t1 VALUES (5,5,'5xxxx');
INSERT INTO t1 VALUES (2,2,'2xxxx');
INSERT INTO t1 VALUES (4,4,'4xxxx');
INSERT INTO t1 VALUES (7,7,'7xxxx');
INSERT INTO t1 VALUES (6,6,'6xxxx');
INSERT INTO t1 VALUES (8,8,'8xxxx');
INSERT INTO t1 VALUES (1,1,'1xxxx');
INSERT INTO t1 VALUES (3,3,'3xxxx');

CREATE table t2 (a INT PRIMARY KEY, b INT , c VARCHAR(30));
INSERT INTO t2 VALUES (5,5,'5xxxx');
INSERT INTO t2 VALUES (2,2,'2xxxx');
INSERT INTO t2 VALUES (4,4,'4xxxx');
INSERT INTO t2 VALUES (7,7,'7xxxx');
INSERT INTO t2 VALUES (6,6,'6xxxx');
INSERT INTO t2 VALUES (8,8,'8xxxx');
INSERT INTO t2 VALUES (1,1,'1xxxx');
INSERT INTO t2 VALUES (3,3,'3xxxx');

# 语法错误：格式不匹配
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a LIMIT FETCH FIRST 1 ROW ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a LIMIT 1 FETCH FIRST 1 ROW ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH 1 ROW ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST 1 ROW;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST 1 ONLY;

# 语法错误：row_count只支持正整数，不支持浮点数，负数，字符串，表达式，函数，临时变量
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST -1 ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST -5.7 ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST 0.0 ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST 0.7 ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST NULL ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST '' ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST 'string' ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST 4+3 ONLY;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST round(2.1, 0) ONLY;
set @row_count=1;
select @row_count;
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH FIRST @row_count ROWS ONLY;

# 关键字有效：first/NEXT/ROW/ROWS
SELECT * FROM t2 ORDER BY a FETCH FIRST 1 ROW ONLY;
SELECT * FROM t2 ORDER BY a FETCH FIRST 2 ROWS ONLY;
SELECT * FROM t2 ORDER BY a FETCH NEXT 3 ROW ONLY;
SELECT * FROM t2 ORDER BY a FETCH NEXT 4 ROWS ONLY;

# row_count其值为0
SELECT * FROM t2 ORDER BY a FETCH NEXT 0 ROWS ONLY;

# 忽略row_count时，默认其值为1
SELECT * FROM t2 ORDER BY a FETCH NEXT ROWS ONLY;

# row_count等于查询返回的行,表中共有8行数据
SELECT * FROM t2 ORDER BY a FETCH NEXT 8 ROWS ONLY;

# row_count 大于表的总行数(表中共有8行数据)
SELECT * FROM t2 ORDER BY a FETCH NEXT 10 ROWS ONLY;

# row_count 为ulonglong类型，最大值为: 18446744073709551615
SELECT * FROM t2 ORDER BY a FETCH NEXT 18446744073709551615 ROWS ONLY;

# 语法错误：18446744073709551616 = max_ulonglog(18446744073709551615) + 1
--error ER_PARSE_ERROR
SELECT * FROM t2 ORDER BY a FETCH NEXT 18446744073709551616 ROWS ONLY;

# 支持: PREPARE Statement
PREPARE stmt1 FROM 'SELECT * FROM t2 ORDER BY a FETCH FIRST ? ROW ONLY';
SET @a = 3;
EXECUTE stmt1 USING @a;

# 支持存储过程(Stored Procedure)
DROP PROCEDURE IF EXISTS bbb;
DELIMITER $$;
CREATE PROCEDURE bbb(IN row_count INTEGER)
BEGIN
  DECLARE a INTEGER DEFAULT 0 ;
  DECLARE b INTEGER DEFAULT 0 ;
  DECLARE c varchar(30);
  DECLARE cur CURSOR FOR SELECT * FROM t2 FETCH FIRST row_count ROWS ONLY;
  OPEN cur;
  FETCH cur INTO a, b, c;
  SELECT a, b, c;
  CLOSE cur;
END $$
DELIMITER ;$$
CALL bbb(1);
DROP PROCEDURE bbb;

# 支持存储函数(Stored function)
DROP FUNCTION IF EXISTS ddd;
DELIMITER $$;
CREATE FUNCTION ddd(row_count INTEGER) RETURNS INTEGER
BEGIN
  RETURN (SELECT a FROM t2 FETCH FIRST row_count ROWS ONLY);
END $$
DELIMITER ;$$
SELECT ddd(1);
DROP FUNCTION ddd;

# 支持子查询, union all, union distinct, with子句
(SELECT * FROM t2 FETCH FIRST 2 ROWS ONLY);
(SELECT * FROM t2 FETCH FIRST 2 ROWS ONLY) FETCH FIRST 1 ROWS ONLY;

(SELECT * FROM t2 FETCH FIRST 2 ROWS ONLY) UNION DISTINCT
(SELECT * FROM t1 FETCH FIRST 2 ROWS ONLY);
(SELECT * FROM t2 FETCH FIRST 2 ROWS ONLY) UNION DISTINCT
(SELECT * FROM t1 FETCH FIRST 2 ROWS ONLY) FETCH FIRST 2 ROWS ONLY;

(SELECT * FROM t2 FETCH FIRST 2 ROWS ONLY) UNION ALL
(SELECT * FROM t1 FETCH FIRST 2 ROWS ONLY);
(SELECT * FROM t2 FETCH FIRST 2 ROWS ONLY) UNION ALL
(SELECT * FROM t1 FETCH FIRST 2 ROWS ONLY) FETCH FIRST 2 ROWS ONLY;

WITH tmp AS (SELECT * FROM t2 FETCH FIRST 2 ROWS ONLY)
SELECT * FROM tmp;

# 不支持 show warings 命令
CREATE DATABASE IF NOT EXISTS test_db;
--error ER_PARSE_ERROR
SHOW WARNINGS FETCH FIRST 1 ROWS ONLY;
--error ER_PARSE_ERROR
SHOW WARNINGS FETCH FIRST 2 ROWS ONLY;

# 不支持 show errors 命令
--error ER_PARSE_ERROR
CREATE databases syntax_error;
--error ER_PARSE_ERROR
SHOW ERRORS FETCH FIRST 1 ROWS ONLY;
--error ER_PARSE_ERROR
SHOW ERRORS FETCH FIRST 2 ROWS ONLY;

# 不支持 handler命令
HANDLER test_db.t2 OPEN;
HANDLER t2 READ FIRST LIMIT 3;
--error ER_PARSE_ERROR
HANDLER t2 READ FIRST FETCH FIRST 3 ROWS ONLY;
HANDLER t2 CLOSE;

# 不支持 update 命令
--error ER_PARSE_ERROR
UPDATE t2 SET b=33 FETCH FIRST 3 ROWS ONLY;

# 不支持 delete 命令
--error ER_PARSE_ERROR
DELETE FROM t2 WHERE b=33 FETCH FIRST 3 ROWS ONLY;


# 清理测试数据
DROP DATABASE IF EXISTS test_db;

# End of ZSQL兼容Oracle的'FETCH ROW ONLY'语法 tests
