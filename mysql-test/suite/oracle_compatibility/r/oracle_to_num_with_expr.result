---------------------------------------------------------------
## Test to_number func used in expr for oracle  compatibility
purpose to test the decimal and precision
---------------------------------------------------------------
set @@sql_mode = STRICT_TRANS_TABLES;
Warnings:
Warning	3135	'NO_ZERO_DATE', 'NO_ZERO_IN_DATE' and 'ERROR_FOR_DIVISION_BY_ZERO' sql modes should be used with strict mode. They will be merged with strict mode in a future release.
select @@sql_mode;
@@sql_mode
STRICT_TRANS_TABLES
---------------------------------------------------------------
## Test_1: test '+' result 12.1
---------------------------------------------------------------
select 1+to_number('11.1', '99D9') as result from dual;
result
12.1
select 1.123451 + to_number('99.999') as result from dual;
result
101.122451
select 1.12345 + to_number('99.999999999') as result from dual;
result
101.123449999
select 1+(1+to_number('10.1', '99D9')) as result from dual;
result
12.1
select 1+to_number(-111111111111111111111111111111111111.12345678901234567890123456789) as result from dual;
result
-111111111111111111111111111111111110.12345678901234567890123456789
select -111111111111111111111111111111111111.12345678901234567890123456789 + 1 as result from dual;
result
-111111111111111111111111111111111110.12345678901234567890123456789
select 1+to_number(-999999999099999999999999999999999999.12345678901234567890123456789) as result from dual;
result
-999999999099999999999999999999999998.12345678901234567890123456789
select -999999999099999999999999999999999999.12345678901234567890123456789 + 1 as result from dual;
result
-999999999099999999999999999999999998.12345678901234567890123456789
select 111111111111111111111111111111111111.12345678901234567890123456789 +1 as result from dual;
result
111111111111111111111111111111111112.12345678901234567890123456789
select 999999999999999999999999999999999999.12345678901234567890123456789 +1 as result from dual;
result
1000000000000000000000000000000000000.12345678901234567890123456789
select 9999999999999999999999999999999999999999999999999.12345678901234567890123456789 +1 as result from dual;
result
10000000000000000000000000000000000000000000000000.123456789012345678901234567
select 10 +((1+to_number('11.123', '99D999')) -10) as result from dual;
result
12.123
---------------------------------------------------------------
## Test_2: test '-' result 8.89
---------------------------------------------------------------
select 20 - to_number('11.11', '99D99') as result from dual;
result
8.89
select (20 - to_number('11.11', '99D99')) * 10 as result from dual;
result
88.9
select 10 + ((20 - to_number('11.11', '99D99')) * 10) as result from dual;
result
98.9
select 10 + ((20 - 11.11) * 10) as result from dual;
result
98.90
---------------------------------------------------------------
## Test_3: test '/' result 2.8002
---------------------------------------------------------------
select 20/to_number('11.11', '99D99') +1 as result from dual;
result
2.800180018
select 20/11.11 +1 as result from dual;
result
2.8002
select to_number('20')/to_number('11.11', '99D99') +1 as result from dual;
result
2.800180018
---------------------------------------------------------------
## Test_4: test '*' result 223.20
---------------------------------------------------------------
select 20*to_number('11.11', '99D99') +1 as result from dual;
result
223.2
select 20*11.11 +1 as result from dual;
result
223.20
select to_number('10') *(20*to_number('11.11', '99D99') +1) as result from dual;
result
2232
---------------------------------------------------------------
## Test_5: test '%' result 9.89
---------------------------------------------------------------
select 20%to_number('11.11', '99D99') +1 as result from dual;
result
9.89
select 20%11.11 +1 as result from dual;
result
9.89
select (20%to_number('11.11', '99D99') +1) -10 as result from dual;
result
-0.11
---------------------------------------------------------------
## Test_6: test '-' neg result -1.11
---------------------------------------------------------------
select -to_number('11.11', '99D99') + 10 as result from dual;
result
-1.11
select 10 * (-to_number('11.11', '99D99')) + 10 as result from dual;
result
-101.1
---------------------------------------------------------------
## Test_7: test ABS() result 21.11
---------------------------------------------------------------
select ABS(-to_number('11.11', '99D99')) + 10 as result from dual;
result
21.11
select (ABS(to_number('11.11', '99D99')) + 10) +0.001 as result from dual;
result
21.111
---------------------------------------------------------------
## Test_8: test ROUND() result 21.1, 21, 21.11000
---------------------------------------------------------------
select round(to_number('11.11', '99D99'), 1) + 10 as result from dual;
result
21.1
select round(11.11, 1) + 10 as result from dual;
result
21.1
select round(to_number('11.11', '99D99')) + 10 as result from dual;
result
21
select round(11.11) + 10 as result from dual;
result
21
select round(to_number('11.11', '99D99'), 5) + 10 as result from dual;
result
21.11
select round(11.11, 5) + 10 as result from dual;
result
21.11000
select -(round(to_number('11.11', '99D99'), 5)) + 10 as result from dual;
result
-1.11
---------------------------------------------------------------
## Test_9: test CEIL() result  22, -1
---------------------------------------------------------------
select CEIL(to_number('11.11', '99D99')) + 10 as result from dual;
result
22
select CEIL(11.11) + 10 as result from dual;
result
22
select CEIL(to_number('-11.11', 'S99D99')) + 10 as result from dual;
result
-1
select CEIL(-11.11) + 10 as result from dual;
result
-1
select (CEIL(to_number('-11', 'S99D99')) + 10) +0.1 as result from dual;
result
-0.9
---------------------------------------------------------------
## Test_10: test CEILING() result  22, -1
---------------------------------------------------------------
select CEILING(to_number('11.11', '99D99')) + 10 as result from dual;
result
22
select CEILING(to_number('-11.11', 'S99D99')) + 10 as result from dual;
result
-1
select -CEILING(to_number('-11.11', 'S99D99')) + 10 as result from dual;
result
21
---------------------------------------------------------------
## Test_11: test FLOOR() result  21, -2
---------------------------------------------------------------
select FLOOR(to_number('11.11', '99D99')) + 10 as result from dual;
result
21
select FLOOR(to_number('-11.11', 'S99D99')) + 10 as result from dual;
result
-2
select (FLOOR(to_number('-11.11', 'S99D99')) + 10) *0.001 as result from dual;
result
-0.002
---------------------------------------------------------------
## Test_12: test LEAST() result 21.11, 20.00
---------------------------------------------------------------
select LEAST(to_number('11.11', '99D99'), 20) + 10 as result from dual;
result
21.11
select LEAST(11.11, 20) + 10 as result from dual;
result
21.11
select LEAST(to_number('11.11', '99D99'), 10) + 10 as result from dual;
result
20
select LEAST(11.11, 10) + 10 as result from dual;
result
20.00
select LEAST(to_number('11.11', '99D99'), 10.1234) + 10 as result from dual;
result
20.1234
---------------------------------------------------------------
## Test_13: test GREATEST() result 21.11, 30.00
---------------------------------------------------------------
select GREATEST(to_number('11.11', '99D99'), 10) + 10 as result from dual;
result
21.11
select GREATEST(11.11, 10) + 10 as result from dual;
result
21.11
select GREATEST(to_number('11.11', '99D99'), 20) + 10 as result from dual;
result
30
select GREATEST(to_number('11.11', '99D99'), 20.1234) + 10 as result from dual;
result
30.1234
---------------------------------------------------------------
## Test_14: test COALESCE() result 21.11, 30.00
---------------------------------------------------------------
select COALESCE(to_number('11.11', '99D99'), 20) + 10 as result from dual;
result
21.11
select COALESCE(11.11, 20) + 10 as result from dual;
result
21.11
---------------------------------------------------------------
## Test_15: test IFNULL() result 21.11
---------------------------------------------------------------
select IFNULL(to_number('11.11', '99D99'), 20) + 10 as result from dual;
result
21.11
select IFNULL(11.11, 20) + 10 as result from dual;
result
21.11
---------------------------------------------------------------
## Test_16: test NVL() result 21.11
---------------------------------------------------------------
select NVL(to_number('11.11', '99D99'), 20) + 10 as result from dual;
result
21.11
---------------------------------------------------------------
## Test_17: test ANY_VALUE() result 21.11
---------------------------------------------------------------
select ANY_VALUE(to_number('11.11', '99D99')) + 10 as result from dual;
result
21.11
select ANY_VALUE(11.11) + 10 as result from dual;
result
21.11
---------------------------------------------------------------
## Test_18: test case when, Not all same as the original.
---------------------------------------------------------------
select (case 1 when 1 then to_number('-11.11') else to_number('11.1111') end) as result from dual;
result
-11.11
select (case 1 when 1 then -11.11 else 11.1111 end) as result from dual;
result
-11.11
select (case 1 when 1 then to_number('-11.11') else to_number('11.1111') end) + 1 as result from dual;
result
-10.11
select (case 1 when 1 then -11.11 else 11.1111 end) + 1 as result from dual;
result
-10.1100
select 10*((case 1 when 1 then to_number('-11.11') else to_number('11.1111') end) + 1) as result from dual;
result
-101.1
select 10*((case 1 when 1 then -11.11 else 11.1111 end) + 1) as result from dual;
result
-101.1000
---------------------------------------------------------------
## Test_19: test NULLIF.
---------------------------------------------------------------
select NULLIF(to_number('-11.11'), to_number('11.111')) as result from dual;
result
-11.11
select NULLIF(-11.11, 11.111) as result from dual;
result
-11.11
select NULLIF(to_number('-11.11'), to_number('11.111')) + 1 as result from dual;
result
-10.11
select NULLIF(-11.11, 11.111) + 1 as result from dual;
result
-10.11
select 10 * (NULLIF(to_number('-11.11'), to_number('11.111')) + 1) as result from dual;
result
-101.1
select 10 * (NULLIF(-11.11, 11.111) + 1) as result from dual;
result
-101.10
---------------------------------------------------------------
## Test_20: test IF, Not all same as the original.
---------------------------------------------------------------
select IF(1, to_number('-11.11'), to_number('11.11')) as result from dual;
result
-11.11
select IF(1, -11.11, 11.111) as result from dual;
result
-11.11
select IF(1, to_number('-11.11'), to_number('11.111')) -10 as result from dual;
result
-21.11
select IF(1, -11.11, 11.111) -10 as result from dual;
result
-21.110
select 10 * (IF(1, to_number('-11.11'), to_number('11.111')) -10) as result from dual;
result
-211.1
select 10 * (IF(1, -11.11, 11.111) -10) as result from dual;
result
-211.100
---------------------------------------------------------------
## Test_21: test SQRT.
---------------------------------------------------------------
select SQRT(to_number('11.11')) as result from dual;
result
3.3331666624997918
select SQRT(11.11) as result from dual;
result
3.3331666624997918
select SQRT(to_number('1.44')) as result from dual;
result
1.2
select SQRT(1.44) as result from dual;
result
1.2
select SQRT(to_number('1.44')) +1 as result from dual;
result
2.2
select SQRT(1.44)+1 as result from dual;
result
2.2
---------------------------------------------------------------
## Test_22: test CAST/CONVERT.
---------------------------------------------------------------
select CAST(to_number('11.11') AS DECIMAL) as result from dual;
result
11
select CAST(11.11 AS DECIMAL) as result from dual;
result
11
select CAST(to_number('11.11') AS DECIMAL(10,5)) +1 as result from dual;
result
12.11
select CAST(11.11 AS DECIMAL(10,5)) +1 as result from dual;
result
12.11000
select CONVERT(to_number('11.11'), DECIMAL(6,3)) -1 as result from dual;
result
10.11
select CONVERT(11.11, DECIMAL(6,3)) -1 as result from dual;
result
10.110
select CONVERT(to_number('-11.11'), DECIMAL) -1 as result from dual;
result
-12
select CONVERT(-11.11, DECIMAL) -1 as result from dual;
result
-12
---------------------------------------------------------------
## Test_23: test SUM. TODO: BUG: will loss the precision of to_number result
---------------------------------------------------------------
select SUM(to_number('11.11')) as result from dual;
result
11.11
select SUM(to_number('11.11')) +1 as result from dual;
result
12.11
select SUM(11.11) +1 as result from dual;
result
12.11
---------------------------------------------------------------
## End test to_number function with other functions
---------------------------------------------------------------
