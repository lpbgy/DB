create table t1 (c1 int , c2 int, c3 int);
insert into t1 (c1,c2) values(1,2),(3,4),(5,6);
---------------------------------------------------------------
## Test Case 1: update single values
--------------------------------------------------------------- 
update t1 set c2 = c2 + 1 where c1= 1;
select * from t1;
c1	c2	c3
1	3	NULL
3	4	NULL
5	6	NULL
---------------------------------------------------------------
## Test Case 2: update multi col success
---------------------------------------------------------------
update t1 set (c1, c2) = (select 1, 2 from dual) where c1= 1;
update t1 set (c1, c2) = (select 1, 2 from dual), (c2, c3) = (select 2, 3 ) where c1= 2;
select * from t1;
c1	c2	c3
1	2	NULL
3	4	NULL
5	6	NULL
---------------------------------------------------------------
## Test Case 3: update multi values error
---------------------------------------------------------------
update t1 set (c1, c2) = (1,2) where c1= 1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1,2) where c1= 1' at line 1
---------------------------------------------------------------
## Test Case 4: update multi values error
---------------------------------------------------------------
update t1 set (c1, c2) = (select 22 from dual) where c1= 1;
ERROR 21000: Operand should contain 2 column(s)
update t1 set (c1, c2 + 1) = (select 22,1 from dual) where c1= 1;
ERROR 42000: Key column 'expression' doesn't exist in table
---------------------------------------------------------------
## Test Case 5: update can sucess
---------------------------------------------------------------
update t1 set (c1) = (select 1 from dual) where c1= 1;
---------------------------------------------------------------
## Test Case 6: update col can multi set
---------------------------------------------------------------
update t1 set (c1,c1) = (select 1,2 from dual) where c1= 1;
---------------------------------------------------------------
## Test Case 7: select nochange: select tuple error
---------------------------------------------------------------
select (c1, c2) from t1;
ERROR 21000: Operand should contain 1 column(s)
---------------------------------------------------------------
## Test Case 8: select nochange: select single with param sucess
---------------------------------------------------------------
select (c1) from t1;
c1
2
3
5
---------------------------------------------------------------
## Test Case 9: select nochange: select single success
---------------------------------------------------------------
select (c1 + 1) from t1;
(c1 + 1)
3
4
6
---------------------------------------------------------------
## Test Case 10: insert nochange: normal insert
---------------------------------------------------------------
insert into t1 (c1, c2) values(100,200);
insert into t1 values(150, 250, 300);
insert into t1 set c1 = 300, c2 = 200;
---------------------------------------------------------------
## Test Case 11: select nochange: multi set error
---------------------------------------------------------------
insert into t1 set (c1, c2) = (select 1, 2 from dual);
ERROR 21000: Operand should contain 1 column(s)
---------------------------------------------------------------
## Test Case 12: view nochange: normal select, insert
---------------------------------------------------------------
drop table if exists t1;
CREATE TABLE t1(i1 int not null auto_increment, c1 INT, primary key(i1)) engine=innodb;
CREATE TABLE t2(i1 int not null auto_increment, c2 INT, primary key(i1)) engine=innodb;
begin;
INSERT INTO t1(c1) VALUES (11), (12);
INSERT INTO t2(c2) VALUES (13), (14);
CREATE VIEW v16 AS SELECT c1, c2 FROM t1, t2;
INSERT INTO v16(c1) VALUES (15),(16);
commit;
---------------------------------------------------------------
## Test Case 13: view nochange: 
## update set multi cols error same with multi set col
---------------------------------------------------------------
update v16 set (c1, c2) = (select 1, 2 from dual) where c1 = 11;
ERROR HY000: Can not modify more than one base table through a join view 'test.v16'
update v16 set c1 =1, c2 = 2 where c1 = 11;
ERROR HY000: Can not modify more than one base table through a join view 'test.v16'
---------------------------------------------------------------
## Test Case 14 Other
## update set multi cols error table empty table
---------------------------------------------------------------
create table t3 (c1 int, c2 int);
insert into t3 values(1,2),(2,3);
create table t4(c1 int, c2 int, c3 int, c4 int, c5 int);
insert into t4 values(1,2,3,4,5);
Test Case 14.1: empty select value
select * from t1;
i1	c1
1	11
2	12
3	15
4	16
update t1 set i1 = (select c1 from t3 where c1 = 3) where c1= 1;
update t1 set c1 = (select c2 from t3 where c1 = 3) where c1= 1;
update t1 set (i1, c1) = (select c1, c2 from t3 where c1 = 3) where c1= 1;
## should no change of t1
select * from t1;
i1	c1
1	11
2	12
3	15
4	16
update t4 set (c1,c2) = (select c1/0, c2  from t3 where c1 = 1) where c1 = 1;
ERROR 22012: Division by 0
update t4 set (c1,c2) = (select c1, c2  from t3) where c1 = 1;
ERROR 21000: Subquery returns more than 1 row
update t3, t4 set (t3.c1,t4.c2) = (select 1, 2 from dual);
ERROR 21000: Operand should contain 1 column(s)
update t3, t4 set t3.c1 = (select 1 from dual),t4.c1= (select  2 from dual);
---------------------------------------------------------------
## Test Case 15 all kinds
## update set multi cols all kinds 
---------------------------------------------------------------
update t4 set (c1,c2,c3) = (select c1, c2, 22  from t3 where c1 = 1),
c3 = 32,
(c4, c5) = (select c1, c2  from t3 where c1 = 1)
where c1 = 1;
select * from t3;
c1	c2
1	2
1	3
select * from t4;
c1	c2	c3	c4	c5
2	2	3	4	5
---------------------------------------------------------------
## Test Case 16 replace
##  
---------------------------------------------------------------
CREATE TABLE test (
id INT UNSIGNED NOT NULL AUTO_INCREMENT,
data VARCHAR(64) DEFAULT NULL,
ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY (id)
);
REPLACE INTO test VALUES (1, 'Old', '2014-08-20 18:47:00');
REPLACE INTO test VALUES (1, 'New', '2014-08-20 18:47:42');
select * from test;
id	data	ts
1	New	2014-08-20 18:47:42
---------------------------------------------------------------
## Test Case 17 update multi table where has row item
##  
---------------------------------------------------------------
update t3, t4 set t3.c1= (select 12 from dual) where (t3.c1, t4.c1) > (0,0);
update t4 set (c1,c2,c3) = (select c1, c2, 22  from t3 where (c1,c2) = (1,2))  where c1 = 1;
select * from t4;
c1	c2	c3	c4	c5
2	2	3	4	5
---------------------------------------------------------------
## clear up env
--------------------------------------------------------------- 
DROP TABLE t1, test;
DROP TABLE t2, t3, t4;
DROP VIEW  v16;
