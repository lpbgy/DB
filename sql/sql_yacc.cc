/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#define IMPLICIT_VARIABLE_LENGTH  768
#define IMPLICIT_VARIABLE_DECIMAL 0
#define SP_EXIT_LABEL_INDEX       1

#define _TO_STR(x) #x
#define TO_STR(x) _TO_STR(x)

#include <limits>
#include <type_traits>                       // for std::remove_reference

#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/parser_yystype.h"
#include "sql/protocol.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql/create_options.h"
#include "sql/transaction.h"                       // trans_commit_stmt
#include "sql/thr_malloc.h"                        // sql_calloc

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}

static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

/* HAVE_ZSQL_ORACLE_COMPATIBILITY begin */

static bool IsCurCtxCreated(LEX *lex)
{
  if (lex->parse_place == IN_AS_STATEMENT ||
      lex->parse_place == IN_DECLARE_STATEMENT)
    return true;

  return false;
}

/**
  Helper action for a SET statement.
  Used to push a SP local variable into the assignment list.

  @param thd      the current thread
  @param var_type the SP local variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool set_local_variable(THD *thd, sp_variable *spv, Item *val)
{
  Item *it;
  LEX *lex= thd->lex;
  sp_instr_set *sp_set;

  if (val)
    it= val;
  else if (spv->default_value)
    it= spv->default_value;
  else
  {
    it= new (thd->mem_root) Item_null();
    if (it == NULL)
      return TRUE;
  }

  sp_set= new (thd->mem_root) sp_instr_set(lex->sphead->instructions(), lex,
                                           spv->offset, it,
                                           to_lex_cstring(spv->name), true);

  return (sp_set == NULL || lex->sphead->add_instr(thd,sp_set));
}


static Item* createSpNotationItem(const POS &pos, THD *thd,
                                  Item *left, Item *right)
{
  uint  param_len= 0;
  const char *param_name= NULL;

  if (Item::FIELD_ITEM == left->type())
  {
    param_name= left->item_name.ptr();
    param_len= left->item_name.length();
  }

  if (left->is_splocal())
  {
    param_name= ((Item_splocal*)left)->m_name.ptr();
    param_len= ((Item_splocal*)left)->m_name.length();
  }

  if (NULL == param_name || 0 == param_len)
  {
    my_error(ER_SYNTAX_ERROR, MYF(0), "");
    return NULL;
  }

  Item *mark_param= new (thd->mem_root) Item_sp_notation_param(pos,
                                                               thd,
                                                               right,
                                                               param_name,
                                                               param_len);

  return mark_param;
}

static bool isReturnCmdLegal(THD *thd, sp_head *sp, Item *retVal)
{
    if (thd->variables.m_opt_parse_mode == MYSQL_PARSE_MODE)
    {
      if (sp->m_type != enum_sp_type::FUNCTION || retVal == NULL)
      {
        my_message(ER_SP_BADRETURN, ER_THD(thd, ER_SP_BADRETURN), MYF(0));
        return false;
      }
      return true;
    }

    /* sp returns null */
    if (sp->m_type == enum_sp_type::PROCEDURE && NULL == retVal)
      return true;

    /* sf returns not null */
    if (sp->m_type == enum_sp_type::FUNCTION && NULL != retVal)
      return true;

    /* othres cant contains return */
    my_message(ER_SP_BADRETURN, ER_THD(thd, ER_SP_BADRETURN), MYF(0));
    return false;
}

static bool isWildField(Item *srcItem)
{
  if (srcItem->type() != Item::FIELD_ITEM)
    return false;

  if (NULL == ((Item_field*) srcItem)->field_name)
    return false;

  if (((Item_field*) srcItem)->field_name[0] == '*')
    return true;

  return false;
}

static bool isFieldIncludeTableName(Item_field *itemField)
{
  if (itemField->table_name && itemField->table_name[0])
    return true;

  return false;
}

static bool isSameTableName(const char *dbName, const char *tabName,
                            TABLE_LIST *table)
{
  if (lower_case_table_names)
  {
    if (strcasecmp(tabName, (const char*)table->alias))
      return false;
  }
  else
  {
    if (strcmp(tabName, (const char *)table->alias))
      return false;
  }

  if (dbName    &&
      dbName[0] &&
      table->db &&
      table->db[0])
  {
    if (strcmp(dbName,(const char *)table->db))
      return false;
  }

  return true;
}

static bool addOneVariable(THD *thd, sp_pcontext *ctx, const char *varName)
{
  // LEX *lex= thd->lex;
  LEX_STRING var_name= {const_cast<char *>(varName), strlen(varName)};
  if (ctx->find_variable(var_name.str, var_name.length, true))
  {
    my_error(ER_SP_DUP_PARAM, MYF(0), var_name.str);
    return true;
  }

  Item *dflt_value_item= new (thd->mem_root) Item_null();
  if (!dflt_value_item)
    return true;

  sp_variable *spvar= ctx->add_variable(thd, var_name, MYSQL_TYPE_DECIMAL,
                                        sp_variable::MODE_IN);
  spvar->type= MYSQL_TYPE_VARCHAR;
  spvar->default_value= dflt_value_item;
  spvar->field_def.field_name= spvar->name.str;
  spvar->field_def.sql_type= MYSQL_TYPE_VARCHAR;
  //spvar->field_def.create_if_not_exists= false;
  spvar->field_def.charset= system_charset_info;
  //spvar->field_def.length= IMPLICIT_VARIABLE_LENGTH;
  //spvar->field_def.decimals= IMPLICIT_VARIABLE_DECIMAL;

/*
5.7.22:
  if (fill_field_definition(thd,
                            lex->sphead,
                            MYSQL_TYPE_VARCHAR,
                            &spvar->field_def))
    return true;
  spvar->field_def.length= IMPLICIT_VARIABLE_LENGTH;
  spvar->field_def.decimals= IMPLICIT_VARIABLE_DECIMAL;
  spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

8.0.18 ref.:
  if (spvar->field_def.init(thd, "", field_type,
                            $2->get_length(), $2->get_dec(),
                            $2->get_type_flags(),
                            NULL, NULL, &NULL_CSTR, 0,
                            $2->get_interval_list(),
                            cs ? cs : thd->variables.collation_database,
                            $3 != nullptr, $2->get_uint_geom_type(),
                            nullptr, nullptr, {},
                            dd::Column::enum_hidden_type::HT_VISIBLE))
*/

  if (spvar->field_def.init(thd, "", MYSQL_TYPE_VARCHAR,
                            TO_STR(IMPLICIT_VARIABLE_LENGTH),
                            TO_STR(IMPLICIT_VARIABLE_DECIMAL), 0,
                            NULL, NULL, &NULL_CSTR, 0,
                            NULL,
                            thd->variables.collation_database,
                            false, 0,
                            nullptr, nullptr, {},
                            dd::Column::enum_hidden_type::HT_VISIBLE))
    return true;

  spvar->field_def.maybe_null= true;

  return false;
}

static bool declVarsByTable(THD *thd, sp_pcontext *ctx, TABLE_LIST *firstTable)
{
  Field *field;
  Field **fields = firstTable->table->field;
  while ((field= *fields++))
  {
    if (addOneVariable(thd, ctx, field->field_name))
      return true;
  }

  return false;
}

static bool declVarsByTable(THD *thd, sp_pcontext *ctx, TABLE_LIST *firstTable,
                            const char *dbName, const char *tabName)
{
  while (firstTable)
  {
    if (isSameTableName(dbName,tabName,firstTable))
      break;
    firstTable= firstTable->next_local;
  }

  if (!firstTable || !firstTable->table)
    return true;

  if (declVarsByTable(thd, ctx, firstTable))
    return true;

  return false;
}

static bool declVarsByAllTable(THD *thd, sp_pcontext *ctx,
                               TABLE_LIST *firstTable)
{
  while (firstTable)
  {
    if (declVarsByTable(thd, ctx, firstTable))
      return true;

    firstTable= firstTable->next_local;
  }

  return false;
}

static bool declareVarsByWildField(THD *thd, sp_pcontext *ctx,
                                   TABLE_LIST *table_first,
                                   Item_field *itemField)
{
  if (!isFieldIncludeTableName(itemField)) // select * from
  {
    if (declVarsByAllTable(thd, ctx, table_first))
      return true;

    return false;
  }

  // select tb.* || select db.tb.*
  if (declVarsByTable(thd, ctx, table_first,
                      itemField->db_name, itemField->table_name))
    return true;

  return false;
}

static void closeTables(THD *thd, bool opened)
{
  if (opened)
  {
    trans_commit_stmt(thd);
    close_thread_tables(thd);
  }
}

static bool closeTablesWhenError(THD *thd, bool opened)
{
  closeTables(thd, opened);
  return true;
}

/* MySQL8.0.18中没有lex::derived_tables了，但暂时还是保留该函数接口 */
static bool SetLexDerivedTableType(LEX *, TABLE_LIST *)
{
  return false;
}

/*
  TODO: MySQL8.0.18中没有lex::derived_tables了。
        经初步比对，觉得该函数没有存在的必要了。
static bool SetLexDerivedTableType(LEX *lex, TABLE_LIST *AllTables)
{
  TABLE_LIST *table= AllTables;
  for (; table; table= table->next_global)
  {
     if (table->is_view())
     {
       lex->derived_tables |= DERIVED_VIEW;
     }
     else if (table->is_derived())
     {
       lex->derived_tables |= DERIVED_SUBQUERY;
     }

     if (lex->derived_tables & (DERIVED_VIEW|DERIVED_SUBQUERY))
       break;
  }

  return false;
}
*/

static bool OpenTablesForWildField(THD *thd, LEX *cursorStmtLex,
                                   SELECT_LEX *select_lex,
                                   bool *openTable)
{
  bool res;
  TABLE_LIST *all_tables;
  if (0 == select_lex->with_wild)
    return false;

  LEX *old_lex= thd->lex;
  thd->lex= cursorStmtLex;
  cursorStmtLex->first_lists_tables_same();
  all_tables= cursorStmtLex->query_tables;
  select_lex->context.resolve_in_table_list_only(select_lex->table_list.first);

  bool check_file_acl= (cursorStmtLex->result != nullptr &&
                        cursorStmtLex->result->needs_file_privilege());

  ulong privileges_requested= check_file_acl
                                  ? SELECT_ACL | FILE_ACL
                                  : SELECT_ACL;
  if (all_tables)
    res= check_table_access(thd,
                            privileges_requested,
                            all_tables, FALSE, UINT_MAX, FALSE);
  else
    res= check_access(thd, privileges_requested, any_db, NULL, NULL, 0, 0);

  if (res)
    goto func_error;

  if (open_and_lock_tables(thd, all_tables, TRUE, 0))
    goto func_error;

  if (select_lex->setup_tables(thd, all_tables, false))
      goto func_error;

  *openTable = true;
  // cursorStmtLex->derived_tables |= DERIVED_VIEW;
  SetLexDerivedTableType(cursorStmtLex, all_tables);
  //if (select_lex->handle_derived(cursorStmtLex, DT_PREPARE))
  {
  //  close_thread_tables(thd);
  //  goto func_error;
  }
  // cursorStmtLex->derived_tables &= ~((uint8)DERIVED_VIEW);

  thd->lex= old_lex;
  return false;

func_error:
  thd->lex= old_lex;
  return true;
}

static bool declareVarsBySelectList(THD *thd, SELECT_LEX *select_lex,
                                    sp_pcontext *ctx)
{
  Item* item= NULL;
  List_iterator<Item> iter(select_lex->item_list);
  uint wild_num= select_lex->with_wild;
  TABLE_LIST *table_first= select_lex->table_list.first;

  while ((item= iter++))
  {
    if (NULL == item->item_name.ptr())
    {
      my_message(ER_SYNTAX_ERROR, ER_THD(thd, ER_SYNTAX_ERROR), MYF(0));
      return true;
    }

    if (wild_num>0 && isWildField(item))
    {
      if (declareVarsByWildField(thd, ctx, table_first, (Item_field*)item))
        return true;

      wild_num--;
      continue;
    }

    //if(!item->fixed && item->fix_fields(thd, (Item **) &item))
    {
    //    return true;
    }

    if (addOneVariable(thd, ctx, (const char*)item->item_name.ptr()))
      return true;
  }

  return false;
}

/*
  declare variables for items in cursor stament select list,
  variables one-to-one match items
  cursorStmtLex: lex of cursor stament
  ctx:           for loop parse context
*/
static bool declareImplicitVars(THD *thd, LEX *cursorStmtLex, sp_pcontext *ctx)
{
  bool openTable= false;
  SELECT_LEX *select_lex= cursorStmtLex->current_select();
  if (!select_lex)
    return true;

  Parser_state *bak_state= thd->m_parser_state;
  thd->m_parser_state= NULL;
  if (OpenTablesForWildField(thd, cursorStmtLex, select_lex, &openTable))
  {
    thd->m_parser_state= bak_state;
    return true;
    //return closeTablesWhenError(thd, openTable);
  }
   thd->m_parser_state= bak_state;

  if (declareVarsBySelectList(thd, select_lex, ctx))
    return closeTablesWhenError(thd, openTable);

  LEX *old_lex= thd->lex;
  thd->lex= cursorStmtLex;
  closeTables(thd, openTable);
  thd->lex= old_lex;

  return false;

  /*TABLE_LIST *all_tables;
  if (wild_num)
  {
    cursorStmtLex->first_lists_tables_same();
    all_tables= cursorStmtLex->query_tables;
    select_lex->context.resolve_in_table_list_only(select_lex->table_list.first);

    ulong privileges_requested= cursorStmtLex->exchange
                                    ? SELECT_ACL | FILE_ACL
                                    : SELECT_ACL;
    if (all_tables)
      res= check_table_access(thd,
                              privileges_requested,
                              all_tables, FALSE, UINT_MAX, FALSE);
    else
      res= check_access(thd, privileges_requested, any_db, NULL, NULL, 0, 0);

    if (res)
      return true;

    openTable= true;
    if (open_and_lock_tables(thd, all_tables, TRUE, 0))
      return closeTableWhenError(thd, openTable);
  }

  Item* item= NULL;
  List_iterator<Item> iter(select_lex->item_list);
  while (item= iter++)
  {
    if (NULL == item->name)
    {
      my_message(ER_SYNTAX_ERROR, ER_THD(thd, ER_SYNTAX_ERROR), MYF(0));
      return closeTablesWhenError(thd, openTable);
    }

    if (wild_num > 0 && isWildField(item))
    {
      if (declareVarsByWildField(thd, ctx, table_first, (Item_field*)item))
        return closeTablesWhenError(thd, openTable);
      wild_num--;
      continue;
    }

    if (addOneVariable(thd, ctx, (const char*)item->name))
      return closeTablesWhenError(thd, openTable);
  }*/
}

static LEX_STRING* createImplicitCursorName(uint cursorIdx)
{
  char *cursorName= (char*)sql_calloc(NAME_LEN);
  LEX_STRING *lexCursorName= (LEX_STRING*)(*THR_MALLOC)->Alloc(sizeof(LEX_STRING));
  if (!cursorName || !lexCursorName)
    return NULL;
  sprintf(cursorName, "implicit_%d", cursorIdx);
  lexCursorName->str= cursorName;
  lexCursorName->length= strlen(cursorName);
  return lexCursorName;
}

static LEX_STRING* createImplicitExceptionName(uint ExceptionIdx)
{
  char *cExceptionName= (char*)sql_calloc(NAME_LEN);
  LEX_STRING *lexExceptionName= (LEX_STRING*)(*THR_MALLOC)->Alloc(sizeof(LEX_STRING));
  if (!cExceptionName || !lexExceptionName)
    return NULL;
  sprintf(cExceptionName, "implicit_%d", ExceptionIdx);
  lexExceptionName->str= cExceptionName;
  lexExceptionName->length= strlen(cExceptionName);
  return lexExceptionName;
}

/*
  declare a implicit cursor for a select query
  cursorStmtLex: lex of cursor stmt
  ctx:           for loop parse context
*/
static sp_instr_cpush* CreateInstrCpush(THD *thd, LEX *cursorStmtLex,
                                        sp_pcontext *ctx,
                                        LEX_CSTRING *cursor_query,
                                        LEX_STRING *lexCursorName,
                                        uint cursorIdx)
{
  sp_head *sp= thd->lex->sphead;
  sp_instr_cpush *i= new sp_instr_cpush(sp->instructions(), ctx,
                                        cursorStmtLex, *cursor_query,
                                        cursorIdx);
  if (!i)
    return NULL;

  if (sp->add_instr(thd,i) || ctx->add_cursor(*lexCursorName))
    return NULL;

  ctx->push_cursor_instr(lexCursorName, i, cursorIdx);

  return i;
}


/* scope:find cursor in current context or global context */
static bool createInstrCopen(THD *thd, LEX_STRING *cursorName, bool scope)
{
  uint idx;
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
  if (! pctx->find_cursor(*cursorName, &idx, scope))
  {
    my_error(ER_SP_CURSOR_MISMATCH, MYF(0), cursorName->str);
    return true;
  }
  sp_instr_copen *copen= new sp_instr_copen(sp->instructions(), pctx, idx);
  if (copen == NULL || sp->add_instr(thd, copen))
    return true;

  return false;
}


/*
  new a sp_instr_cfetch
  spc_vars:fetch cursor into spvars
*/
static bool createInstrCfetch(THD *thd,uint cursorIdx,
                              const Mem_root_array<sp_variable *> *spc_vars)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
  sp_instr_cfetch *cfetch= new sp_instr_cfetch(sp->instructions(),
                                               pctx, cursorIdx);
  if (cfetch == NULL || sp->add_instr(thd, cfetch))
    return true;

  uint spvar_count= spc_vars->size();
  for (uint i = 0; i < spvar_count; i++)
  {
    sp_variable *spv= spc_vars->at(i);
    cfetch->add_to_varlist(spv);
  }

  return false;
}

static bool createInstrJumpIfNot(THD *thd, Item* jump_expr)
{
  LEX *lex= thd->lex;
  if (lex->sphead->reset_lex(thd))
    return true;

  lex= thd->lex;
  sp_head *sp= lex->sphead;
  uint ip= sp->instructions();
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
  LEX_CSTRING expr_query= EMPTY_CSTR;

  sp_instr_jump_if_not *jin= new sp_instr_jump_if_not(ip, lex, jump_expr,
                                                      expr_query);
  if (jin == NULL ||
      // Jumping forward
      sp->m_parser_data.add_backpatch_entry(jin, pctx->last_label()) ||
      sp->m_parser_data.new_cont_backpatch() ||
      sp->m_parser_data.add_cont_backpatch_entry(jin) ||
      sp->add_instr(thd, jin))
    return true;

  if (sp->restore_lex(thd))
    return true;

  return false;
}

static bool init_for_loop_cursor(THD *thd, LEX_STRING cursor_name)
{
  LEX *lex= thd->lex;
  sp_pcontext *ctx= lex->get_sp_current_parsing_ctx();

  // get cursor idx
  uint cursorIdx;
  if (!ctx->find_cursor(cursor_name, &cursorIdx, false))
  {
    my_error(ER_SP_CURSOR_MISMATCH, MYF(0), cursor_name.str);
    return false;
  }

  // get cpush
  sp_instr_cpush *cpush= ctx->get_cpush_by_cursor_name(cursor_name, false);
  if (!cpush)
  {
    my_error(ER_UNKNOWN_ERROR, MYF(0), "");
    return false;
  }

  // declare variables
  //sp_lex_keeper *lex_keeper= cpush->get_lex_keeper();
  LEX* cursorStmtLex= cpush->get_lex();
  if(declareImplicitVars(thd, cursorStmtLex, ctx))
    return false;

  // open cursor
  if (createInstrCopen(thd, &cursor_name, false))
    return false;

  // fetch cursor
  if (createInstrCfetch(thd, cursorIdx, ctx->get_vars()))
    return false;

  // configure a while loop
  Item_func_cursor_attribute *item_cursor_attr=
      new (thd->mem_root)Item_func_cursor_attribute(thd, &cursor_name, cpush,
                                          Item_func_cursor_attribute::FOUND);

  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
  pctx->push_cursor_attribute(item_cursor_attr);
  if (createInstrJumpIfNot(thd, item_cursor_attr))
    return false;

  return true;
}

static bool init_for_loop_normal(THD *thd, LEX_STRING var_name,
                                 Item *first_bound, Item *second_bound,
                                 bool reverse)
{
  uint idx= 0;
  LEX *lex= thd->lex;
  sp_variable *spv= NULL;
  //sp_pcontext *spc= lex->spcont;
  sp_pcontext *spc= lex->get_sp_current_parsing_ctx();

  if (!spc)
  {
    my_error(ER_INTERNAL_ERROR, MYF(0), "sp parse context is null");
    return false;
  }
  Item *low_bound= first_bound;
  Item *up_bound= second_bound;
  if (reverse)
  {
    low_bound= second_bound;
    up_bound= first_bound;
  }

  if (!(spv = spc->find_variable(var_name, &idx, false)))
  {
    // declare a variable
    spv= spc->add_variable(thd, var_name, MYSQL_TYPE_LONGLONG,
                           sp_variable::MODE_IN);
    idx= spc->var_context2runtime(spc->context_var_count() - 1);
    lex->sphead->reset_lex(thd);
    lex= thd->lex;
    spv->type= MYSQL_TYPE_LONGLONG;
    spv->mode= sp_variable::MODE_IN;
    spv->default_value= low_bound;
    spv->field_def.field_name= spv->name.str;
    spv->field_def.sql_type= MYSQL_TYPE_LONGLONG;

    /*
    if (fill_field_definition(thd, lex->sphead,
                              spv->type,
                              &spv->field_def))
    */

    if (spv->field_def.init(thd, "", MYSQL_TYPE_LONGLONG,
                            NULL, NULL, 0,
                            NULL, NULL, &NULL_CSTR, 0,
                            NULL,
                            thd->variables.collation_database,
                            false, 0,
                            nullptr, nullptr, {},
                            dd::Column::enum_hidden_type::HT_VISIBLE))
      return false;


    spv->field_def.maybe_null= true;
  }
  else
  {
    // varaible was declared before
    lex->sphead->reset_lex(thd);
    lex= thd->lex;
  }

  LEX_CSTRING value_query= EMPTY_CSTR;

  sp_instr_set *is= new sp_instr_set(lex->sphead->instructions(),
                                     lex,
                                     idx,
                                     low_bound,
                                     value_query,
                                     true);
  if (!is || lex->sphead->add_instr(thd,is) || lex->sphead->restore_lex(thd))
    return false;

  // configure a while loop
  lex= thd->lex;
  lex->sphead->reset_lex(thd);
  lex= thd->lex;
  sp_head *sp= lex->sphead;
  uint ip= sp->instructions();
  Item *expr= NULL;
  Item_splocal* splocal= new (thd->mem_root)
                         Item_splocal(var_name, spv->offset, spv->type,
                                      (uint)(var_name.str-(char*)0),
                                      (uint)var_name.length);
  #ifndef DBUG_OFF
    splocal->m_sp= lex->sphead;
  #endif

  if (reverse)
    expr= new (thd->mem_root)Item_func_ge(splocal,up_bound);
  else
    expr= new (thd->mem_root)Item_func_le(splocal,up_bound);


  LEX_CSTRING expr_query = EMPTY_CSTR;

  sp_instr_jump_if_not *i= new sp_instr_jump_if_not(ip,lex,expr,expr_query);
  if (i == NULL ||
      sp->m_parser_data.add_backpatch_entry(i, spc->last_label()) ||
      sp->m_parser_data.new_cont_backpatch() ||
      sp->add_instr(thd, i))
    return false;

  if (sp->restore_lex(thd))
    return false;

  return true;
}


/* for id in 1..10, need produce set id = id + 1 */

static bool create_control_variable_assignment(THD *thd, LEX_STRING var_name,
                                               bool reverse)
{
  // set $2 = $2 + 1 || set $2 = $2 -1
  LEX *lex= thd->lex;
  sp_pcontext *spc= lex->get_sp_current_parsing_ctx();

  sp_variable *spv= NULL;
  if (!spc || !(spv= spc->find_variable(var_name.str, var_name.length, false)))
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), var_name.str);
    return true;
  }
  Item *expr= NULL;

  Item_splocal* splocal= new (thd->mem_root)
                             Item_splocal(var_name, spv->offset, spv->type,
                                           (uint)(var_name.str - (char*)0),
                                           (uint)var_name.length);
  if (!splocal)
    return true;

  #ifndef DBUG_OFF
  splocal->m_sp= lex->sphead;
  #endif

  Item_int *item_1= new (thd->mem_root)Item_int(1);
  if(!item_1)
    return true;

  if (reverse)
    expr= new (thd->mem_root)Item_func_minus(splocal, item_1);
  else
    expr= new (thd->mem_root)Item_func_plus(splocal, item_1);
  if (!expr || set_local_variable(thd, spv, expr))
    return true;

  return false;
}

/* new sp_instr_jump */
static bool sp_create_instr_jump(THD *thd, uint)
{
  LEX *lex= thd->lex;
  uint ip= lex->sphead->instructions();
  sp_pcontext *spc= lex->get_sp_current_parsing_ctx();

  sp_label *lab= spc->last_label();
  lab->ip += 1;

  sp_instr_jump *i= new sp_instr_jump(ip, spc, lab->ip);
  if (i == NULL || lex->sphead->add_instr(thd, i))
    return true;

  return false;
}

static sp_name* makeSpname(THD *thd, LEX_STRING *dbName, LEX_STRING *spname)
{
  LEX *lex= thd->lex;

  if (sp_check_name(spname))
    return NULL;

  sp_name *call_spname;
  if (dbName)
  {
    call_spname= new (lex->thd->mem_root) sp_name(to_lex_cstring(*dbName),
                                                  *spname, false);
  }
  else
  {
    LEX_STRING db;
    if (lex->copy_db_to(&db.str, &db.length))
      return NULL;
    call_spname= new (lex->thd->mem_root) sp_name(to_lex_cstring(db),
                                                  *spname, false);
  }
  if (!call_spname)
    return NULL;

  call_spname->init_qname(thd);

  return call_spname;
}

/*
static void initCallCmdAndAddRoutineT(THD *thd,
                                      sp_name *spname,
                                      enum_sp_type type)
{
  LEX *lex= thd->lex;
  lex->sql_command= SQLCOM_CALL;
  lex->spname= spname;
  sp_add_used_routine(lex, thd, spname, type);
}
*/

/**
   parseStringEnd:
   if false, end of sp_instr_stmt::m_query is lip->get_tok_start()
*/
bool addSpInstrStmt(THD *thd, bool parseStringEnd, LEX_CSTRING *query)
{
  LEX *lex= thd->lex;
  Lex_input_stream *lip= &(thd->m_parser_state->m_lip);
  sp_head *sp= lex->sphead;

  sp->m_flags|= sp_get_flags_for_command(lex);
  sp_instr_stmt *i= new (lex->thd->mem_root) sp_instr_stmt(sp->instructions(),
                                                           lex, *query);
  if (i == NULL)
    return true;

  if (parseStringEnd)
    i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
  else
    i->m_query.length= lip->get_tok_start() - sp->m_tmp_query;

  if (!(i->m_query.str= strmake_root(thd->mem_root,
                                     sp->m_tmp_query,
                                     i->m_query.length)) ||
      sp->add_instr(thd,i))
    return true;

  return false;
}

static Item* make_cursor_attr_func(THD *thd, char *cursor_name,
               Item_func_cursor_attribute::enum_cursor_attribute_type attr_type)
{
  LEX_STRING *lex_cursor_name= (LEX_STRING*)(*THR_MALLOC)->Alloc(sizeof(LEX_STRING));
  if (!lex_cursor_name)
    return NULL;
  lex_cursor_name->str= cursor_name;
  lex_cursor_name->length= strlen(cursor_name);

  sp_pcontext *pctx= thd->lex->get_sp_current_parsing_ctx();
  if (!pctx)
  {
    my_message(ER_SYNTAX_ERROR, ER_THD(thd, ER_SYNTAX_ERROR), MYF(0));
    return NULL;
  }

  sp_instr *i= pctx->get_cpush_by_cursor_name(*lex_cursor_name, false);
  if (!i)
  {
    my_message(ER_SYNTAX_ERROR, ER_THD(thd, ER_SYNTAX_ERROR), MYF(0));
    return NULL;
  }

  Item_func_cursor_attribute *csr_attr=
      new (thd->mem_root) Item_func_cursor_attribute(thd, lex_cursor_name,
                                                     i, attr_type);

  pctx->push_cursor_attribute(csr_attr);

  thd->sp_exists_endmark= true;

  return csr_attr;
}

/*
  if a % b, b is 'found' or 'notfound' ,make Item_func_cursor_attr;
  else make Item_func_mod
*/

/*
static Item* make_mod_or_cursor_attr_func(const POS &pos, THD* thd,
                                          Item* percent_left,
                                          Item* percent_right)
{
  if(percent_right->type()==Item::INVALID_ITEM &&
     ((Parse_tree_item*)percent_right)->b_fielditem_simple())
  {
    PTI_simple_ident_ident *psimp_idt_idt= (PTI_simple_ident_ident*)percent_right;
    if (0 == strcasecmp("found",psimp_idt_idt->ident.str))
    {
        ITEMIZE(percent_left, &percent_left);
        ITEMIZE(percent_right, &percent_right);
        Item_field *leftField= (Item_field*)percent_left;
        return make_cursor_attr_func(thd, (char*)leftField->field_name,
                                     Item_func_cursor_attribute::FOUND);
    }
    else if (0 == strcasecmp("notfound", psimp_idt_idt->ident.str))
    {
        ITEMIZE(percent_left, &percent_left);
        ITEMIZE(percent_right, &percent_right);
        Item_field *leftField= (Item_field*)percent_left;
        return make_cursor_attr_func(thd, (char*)leftField->field_name,
                                     Item_func_cursor_attribute::NOT_FOUND);
    }
  }

  return (new (thd->mem_root) Item_func_mod(pos, percent_left, percent_right));
}
*/
/* HAVE_ZSQL_ORACLE_COMPATIBILITY end */

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 1479 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_HOME_ZC_MYSQL8_DB_MY_BUILD_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_HOME_ZC_MYSQL8_DB_MY_BUILD_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    GDB_FORMAT_SYM = 992,
    FLAG_SYM = 993,
    OPTION_LIST_SYM = 994,
    TABLE_TYPE_SYM = 995,
    TABNAME_SYM = 996,
    QUICKSYNC_SYM = 997,
    THREADPOOL_SYM = 998,
    COPY_SYM = 999,
    SYNCREPLAY_SYM = 1000,
    MY_LEX_FOR_LOOP_SEP = 1001,
    SYS_REFCURSOR_SYM = 1002,
    EXCEPTION_SYM = 1003,
    CLOB_SYM = 1004,
    IMMEDIATE_SYM = 1005,
    NOT_FOUND_SYM = 1006,
    SQLCODE_SYM = 1007,
    SQLERRM_SYM = 1008,
    CONDITIONLESS_JOIN = 1009,
    SUBQUERY_AS_EXPR = 1010,
    EMPTY_FROM_CLAUSE = 1011,
    MARK_SYM = 1012
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define GDB_FORMAT_SYM 992
#define FLAG_SYM 993
#define OPTION_LIST_SYM 994
#define TABLE_TYPE_SYM 995
#define TABNAME_SYM 996
#define QUICKSYNC_SYM 997
#define THREADPOOL_SYM 998
#define COPY_SYM 999
#define SYNCREPLAY_SYM 1000
#define MY_LEX_FOR_LOOP_SEP 1001
#define SYS_REFCURSOR_SYM 1002
#define EXCEPTION_SYM 1003
#define CLOB_SYM 1004
#define IMMEDIATE_SYM 1005
#define NOT_FOUND_SYM 1006
#define SQLCODE_SYM 1007
#define SQLERRM_SYM 1008
#define CONDITIONLESS_JOIN 1009
#define SUBQUERY_AS_EXPR 1010
#define EMPTY_FROM_CLAUSE 1011
#define MARK_SYM 1012

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_HOME_ZC_MYSQL8_DB_MY_BUILD_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 3052 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  984
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   93258

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  777
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  981
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3090
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5401

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1012

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   774,     2,     2,     2,   761,   756,     2,
     765,   766,   759,   758,   771,   757,   772,   760,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   773,   769,
       2,     2,     2,     2,   770,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   762,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   775,   755,   776,   763,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     764,   767,   768
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  3006,  3006,  3007,  3012,  3022,  3040,  3047,  3060,  3059,
    3084,  3091,  3093,  3097,  3098,  3103,  3104,  3105,  3106,  3107,
    3108,  3109,  3110,  3111,  3112,  3113,  3114,  3115,  3116,  3117,
    3118,  3119,  3120,  3121,  3122,  3123,  3124,  3125,  3126,  3127,
    3128,  3129,  3130,  3131,  3132,  3133,  3134,  3135,  3136,  3137,
    3138,  3139,  3140,  3141,  3142,  3143,  3144,  3145,  3146,  3147,
    3148,  3149,  3150,  3151,  3152,  3153,  3154,  3155,  3156,  3157,
    3158,  3159,  3160,  3161,  3162,  3163,  3164,  3165,  3166,  3167,
    3168,  3169,  3170,  3171,  3172,  3173,  3174,  3175,  3176,  3177,
    3178,  3179,  3180,  3181,  3182,  3183,  3184,  3185,  3186,  3187,
    3188,  3189,  3190,  3191,  3192,  3193,  3194,  3195,  3199,  3209,
    3210,  3214,  3234,  3241,  3252,  3251,  3263,  3292,  3294,  3298,
    3299,  3303,  3316,  3315,  3335,  3334,  3348,  3347,  3362,  3363,
    3366,  3373,  3380,  3387,  3394,  3401,  3409,  3418,  3424,  3431,
    3438,  3446,  3455,  3461,  3467,  3475,  3483,  3489,  3496,  3503,
    3511,  3523,  3529,  3536,  3543,  3551,  3561,  3562,  3566,  3570,
    3574,  3578,  3582,  3592,  3596,  3600,  3605,  3616,  3621,  3625,
    3629,  3633,  3637,  3641,  3645,  3650,  3654,  3658,  3662,  3668,
    3702,  3706,  3710,  3714,  3720,  3721,  3724,  3726,  3727,  3731,
    3737,  3743,  3752,  3756,  3772,  3776,  3787,  3791,  3806,  3816,
    3826,  3831,  3839,  3846,  3859,  3858,  3873,  3878,  3890,  3910,
    3929,  3949,  3966,  3971,  3980,  3985,  3997,  4009,  4023,  4039,
    4043,  4050,  4059,  4067,  4078,  4079,  4083,  4087,  4091,  4095,
    4099,  4104,  4108,  4116,  4115,  4147,  4146,  4155,  4164,  4165,
    4171,  4177,  4187,  4193,  4201,  4203,  4212,  4213,  4217,  4223,
    4232,  4233,  4241,  4241,  4299,  4300,  4301,  4302,  4303,  4304,
    4305,  4306,  4307,  4308,  4309,  4310,  4311,  4315,  4329,  4348,
    4349,  4353,  4354,  4359,  4361,  4363,  4365,  4367,  4369,  4371,
    4377,  4378,  4379,  4383,  4387,  4394,  4401,  4402,  4409,  4411,
    4415,  4416,  4420,  4471,  4473,  4477,  4478,  4482,  4565,  4566,
    4567,  4568,  4572,  4573,  4582,  4591,  4603,  4604,  4608,  4609,
    4614,  4618,  4623,  4632,  4636,  4641,  4649,  4650,  4654,  4655,
    4660,  4663,  4687,  4786,  4804,  4803,  4882,  4878,  4954,  4955,
    4960,  4962,  4967,  4990,  5001,  5005,  5027,  5028,  5032,  5036,
    5049,  5055,  5061,  5070,  5083,  5109,  5115,  5116,  5122,  5123,
    5128,  5134,  5147,  5149,  5169,  5175,  5177,  5179,  5181,  5183,
    5185,  5187,  5189,  5191,  5193,  5195,  5197,  5202,  5216,  5233,
    5234,  5236,  5241,  5247,  5256,  5262,  5271,  5279,  5307,  5315,
    5317,  5326,  5331,  5337,  5346,  5354,  5356,  5358,  5360,  5362,
    5364,  5366,  5368,  5370,  5372,  5374,  5376,  5378,  5383,  5403,
    5427,  5431,  5439,  5440,  5441,  5442,  5443,  5444,  5445,  5446,
    5447,  5448,  5449,  5450,  5451,  5455,  5456,  5457,  5458,  5459,
    5460,  5461,  5463,  5464,  5465,  5466,  5467,  5468,  5469,  5470,
    5473,  5498,  5526,  5525,  5554,  5554,  5579,  5663,  5666,  5670,
    5672,  5671,  5713,  5712,  5734,  5733,  5786,  5787,  5792,  5791,
    5805,  5810,  5840,  5805,  5866,  5868,  5869,  5874,  5873,  5884,
    5884,  5945,  5944,  6002,  6002,  6026,  6083,  6130,  6150,  6203,
    6237,  6246,  6245,  6270,  6292,  6294,  6295,  6299,  6317,  6338,
    6346,  6384,  6338,  6412,  6414,  6415,  6419,  6420,  6425,  6435,
    6424,  6487,  6486,  6500,  6501,  6505,  6506,  6511,  6519,  6510,
    6569,  6577,  6568,  6623,  6636,  6641,  6640,  6678,  6679,  6684,
    6683,  6718,  6717,  6746,  6745,  6786,  6785,  6805,  6805,  6824,
    6823,  6875,  6890,  6898,  6889,  6956,  6964,  6953,  7007,  7006,
    7022,  7021,  7033,  7032,  7056,  7057,  7074,  7094,  7093,  7151,
    7151,  7180,  7225,  7233,  7234,  7239,  7245,  7256,  7255,  7327,
    7326,  7397,  7414,  7397,  7453,  7455,  7454,  7533,  7534,  7538,
    7540,  7545,  7547,  7549,  7564,  7565,  7572,  7573,  7580,  7581,
    7585,  7591,  7600,  7601,  7602,  7603,  7604,  7605,  7606,  7607,
    7608,  7609,  7613,  7614,  7618,  7624,  7633,  7634,  7635,  7636,
    7637,  7638,  7642,  7643,  7647,  7653,  7662,  7666,  7667,  7671,
    7677,  7686,  7687,  7688,  7689,  7690,  7691,  7692,  7696,  7697,
    7701,  7707,  7716,  7717,  7718,  7722,  7726,  7727,  7731,  7735,
    7742,  7749,  7756,  7763,  7770,  7777,  7784,  7791,  7798,  7805,
    7809,  7816,  7823,  7824,  7899,  7905,  7909,  7914,  7919,  7925,
    7933,  7943,  7944,  7958,  7966,  7970,  7974,  7978,  7982,  7986,
    7993,  7994,  7999,  8000,  8018,  8019,  8031,  8032,  8037,  8046,
    8047,  8052,  8058,  8068,  8069,  8081,  8082,  8086,  8092,  8101,
    8110,  8113,  8118,  8126,  8127,  8131,  8135,  8142,  8149,  8159,
    8158,  8176,  8182,  8191,  8192,  8197,  8198,  8202,  8208,  8217,
    8224,  8225,  8229,  8235,  8244,  8246,  8248,  8250,  8252,  8254,
    8256,  8258,  8267,  8268,  8272,  8273,  8277,  8282,  8287,  8302,
    8303,  8307,  8313,  8322,  8328,  8336,  8338,  8342,  8346,  8350,
    8354,  8358,  8362,  8366,  8370,  8374,  8378,  8382,  8386,  8390,
    8394,  8398,  8415,  8419,  8423,  8427,  8431,  8435,  8439,  8443,
    8447,  8451,  8455,  8459,  8463,  8467,  8471,  8475,  8479,  8490,
    8501,  8515,  8529,  8533,  8537,  8541,  8545,  8546,  8547,  8548,
    8549,  8550,  8554,  8555,  8556,  8560,  8561,  8562,  8563,  8567,
    8573,  8582,  8583,  8587,  8594,  8595,  8603,  8609,  8615,  8620,
    8630,  8638,  8646,  8650,  8651,  8655,  8656,  8660,  8661,  8665,
    8669,  8673,  8694,  8696,  8700,  8701,  8702,  8706,  8710,  8714,
    8718,  8722,  8726,  8730,  8734,  8739,  8744,  8753,  8762,  8766,
    8770,  8775,  8788,  8797,  8801,  8817,  8821,  8825,  8829,  8833,
    8837,  8841,  8842,  8846,  8850,  8854,  8859,  8864,  8869,  8874,
    8879,  8884,  8888,  8892,  8897,  8901,  8908,  8910,  8912,  8914,
    8916,  8918,  8920,  8922,  8927,  8928,  8932,  8933,  8937,  8938,
    8939,  8940,  8941,  8945,  8946,  8947,  8948,  8949,  8953,  8958,
    8962,  8964,  8968,  8969,  8970,  8971,  8972,  8977,  8981,  8990,
    9003,  9008,  9012,  9021,  9022,  9026,  9027,  9028,  9036,  9037,
    9041,  9045,  9049,  9050,  9051,  9060,  9061,  9062,  9063,  9066,
    9067,  9072,  9076,  9080,  9081,  9085,  9104,  9123,  9127,  9131,
    9135,  9139,  9143,  9147,  9151,  9155,  9159,  9163,  9167,  9171,
    9175,  9179,  9183,  9192,  9197,  9210,  9217,  9218,  9219,  9223,
    9224,  9225,  9229,  9235,  9239,  9243,  9244,  9248,  9257,  9261,
    9262,  9266,  9275,  9279,  9280,  9284,  9290,  9294,  9295,  9299,
    9300,  9305,  9306,  9310,  9317,  9325,  9331,  9341,  9345,  9350,
    9355,  9360,  9367,  9373,  9384,  9385,  9393,  9392,  9404,  9406,
    9410,  9425,  9426,  9430,  9437,  9447,  9448,  9449,  9450,  9455,
    9459,  9464,  9469,  9475,  9484,  9485,  9486,  9487,  9488,  9492,
    9493,  9497,  9498,  9502,  9503,  9507,  9508,  9509,  9513,  9514,
    9518,  9519,  9523,  9529,  9538,  9539,  9553,  9554,  9558,  9564,
    9573,  9577,  9578,  9582,  9588,  9597,  9598,  9603,  9604,  9608,
    9632,  9633,  9634,  9638,  9639,  9643,  9644,  9648,  9649,  9653,
    9654,  9655,  9659,  9665,  9675,  9681,  9696,  9702,  9712,  9713,
    9722,  9723,  9727,  9728,  9732,  9738,  9750,  9760,  9774,  9773,
    9794,  9793,  9815,  9814,  9836,  9835,  9854,  9848,  9871,  9870,
    9906,  9928,  9947,  9967,  9975,  9997, 10021, 10032, 10034, 10049,
   10063, 10069, 10081, 10093, 10107, 10108, 10112, 10122, 10131, 10132,
   10136, 10137, 10141, 10147, 10153, 10161, 10176, 10184, 10192, 10199,
   10206, 10213, 10220, 10226, 10232, 10241, 10242, 10246, 10247, 10251,
   10257, 10263, 10269, 10278, 10292, 10293, 10294, 10295, 10299, 10300,
   10312, 10313, 10317, 10318, 10322, 10323, 10338, 10343, 10351, 10355,
   10363, 10367, 10372, 10373, 10382, 10386, 10397, 10401, 10405, 10409,
   10413, 10418, 10423, 10428, 10433, 10440, 10444, 10448, 10452, 10457,
   10462, 10467, 10472, 10476, 10483, 10484, 10488, 10492, 10499, 10500,
   10508, 10515, 10520, 10524, 10529, 10540, 10541, 10549, 10553, 10557,
   10561, 10565, 10569, 10574, 10578, 10582, 10586, 10590, 10594, 10598,
   10602, 10606, 10610, 10614, 10618, 10622, 10626, 10630, 10634, 10640,
   10644, 10651, 10656, 10661, 10669, 10670, 10675, 10680, 10686, 10695,
   10699, 10703, 10720, 10724, 10728, 10744, 10746, 10750, 10751, 10755,
   10756, 10757, 10761, 10762, 10763, 10767, 10768, 10769, 10770, 10774,
   10779, 10787, 10788, 10798, 10799, 10803, 10819, 10817, 10839, 10856,
   10859, 10866, 10870, 10877, 10881, 10885, 10892, 10897, 10900, 10907,
   10910, 10917, 10920, 10927, 10930, 10938, 10941, 10948, 10952, 10959,
   10963, 10971, 10975, 11000, 11001, 11002, 11007, 11012, 11019, 11033,
   11034, 11035, 11039, 11048, 11049, 11053, 11054, 11062, 11063, 11064,
   11068, 11078, 11079, 11098, 11103, 11110, 11120, 11128, 11136, 11137,
   11141, 11142, 11150, 11152, 11154, 11156, 11158, 11160, 11165, 11172,
   11173, 11174, 11178, 11194, 11193, 11199, 11206, 11211, 11219, 11220,
   11224, 11237, 11241, 11250, 11256, 11265, 11272, 11273, 11277, 11282,
   11289, 11295, 11304, 11311, 11318, 11319, 11329, 11330, 11334, 11338,
   11344, 11380, 11384, 11429, 11436, 11444, 11453, 11463, 11471, 11480,
   11491, 11495, 11499, 11506, 11520, 11536, 11537, 11541, 11549, 11570,
   11593, 11594, 11598, 11602, 11603, 11607, 11613, 11623, 11626, 11630,
   11635, 11639, 11643, 11652, 11653, 11657, 11663, 11672, 11676, 11680,
   11687, 11688, 11692, 11696, 11697, 11701, 11702, 11703, 11715, 11721,
   11727, 11737, 11738, 11746, 11747, 11748, 11749, 11750, 11754, 11755,
   11760, 11766, 11771, 11777, 11781, 11785, 11789, 11793, 11797, 11801,
   11805, 11809, 11813, 11817, 11821, 11834, 11838, 11842, 11847, 11851,
   11858, 11862, 11869, 11873, 11877, 11881, 11889, 11893, 11897, 11902,
   11907, 11915, 11923, 11927, 11928, 11932, 11936, 11940, 11944, 11948,
   11952, 11956, 11960, 11964, 11968, 11972, 12024, 12028, 12032, 12036,
   12040, 12041, 12045, 12046, 12053, 12054, 12058, 12059, 12063, 12064,
   12065, 12066, 12067, 12068, 12069, 12073, 12074, 12078, 12079, 12080,
   12081, 12082, 12083, 12087, 12088, 12089, 12090, 12091, 12092, 12096,
   12100, 12104, 12108, 12112, 12116, 12117, 12121, 12125, 12129, 12133,
   12137, 12141, 12145, 12149, 12153, 12157, 12161, 12165, 12170, 12177,
   12185, 12201, 12219, 12220, 12230, 12234, 12238, 12242, 12246, 12250,
   12254, 12258, 12262, 12266, 12270, 12274, 12278, 12282, 12286, 12290,
   12294, 12298, 12303, 12308, 12313, 12317, 12321, 12325, 12329, 12334,
   12338, 12357, 12361, 12365, 12369, 12373, 12378, 12383, 12387, 12391,
   12396, 12400, 12404, 12408, 12412, 12416, 12420, 12424, 12429, 12433,
   12437, 12441, 12445, 12457, 12461, 12465, 12469, 12473, 12477, 12481,
   12485, 12489, 12493, 12497, 12501, 12505, 12509, 12513, 12517, 12521,
   12525, 12529, 12533, 12537, 12541, 12545, 12549, 12555, 12561, 12567,
   12573, 12579, 12583, 12601, 12605, 12612, 12614, 12627, 12628, 12632,
   12633, 12637, 12638, 12642, 12648, 12657, 12664, 12665, 12669, 12673,
   12677, 12681, 12685, 12689, 12693, 12697, 12701, 12705, 12709, 12718,
   12722, 12726, 12730, 12734, 12738, 12742, 12746, 12750, 12754, 12764,
   12768, 12772, 12776, 12780, 12784, 12788, 12799, 12810, 12814, 12818,
   12831, 12835, 12840, 12849, 12852, 12860, 12863, 12867, 12876, 12879,
   12883, 12891, 12894, 12901, 12908, 12912, 12919, 12926, 12933, 12954,
   12957, 12965, 12968, 12976, 12979, 12987, 12990, 12999, 13004, 13011,
   13015, 13019, 13023, 13027, 13034, 13041, 13045, 13049, 13053, 13057,
   13065, 13068, 13072, 13076, 13080, 13086, 13087, 13088, 13092, 13099,
   13103, 13110, 13114, 13121, 13122, 13127, 13132, 13136, 13137, 13141,
   13146, 13156, 13163, 13170, 13189, 13197, 13204, 13211, 13218, 13225,
   13232, 13239, 13246, 13253, 13260, 13267, 13275, 13285, 13286, 13290,
   13296, 13305, 13328, 13329, 13333, 13334, 13338, 13344, 13353, 13354,
   13358, 13359, 13363, 13371, 13380, 13381, 13382, 13395, 13396, 13477,
   13481, 13486, 13490, 13494, 13504, 13511, 13512, 13513, 13517, 13518,
   13519, 13520, 13523, 13524, 13527, 13529, 13532, 13534, 13542, 13543,
   13547, 13576, 13577, 13578, 13579, 13581, 13583, 13587, 13588, 13597,
   13598, 13602, 13609, 13610, 13614, 13627, 13638, 13654, 13661, 13667,
   13676, 13680, 13689, 13696, 13699, 13707, 13714, 13722, 13730, 13738,
   13749, 13752, 13755, 13760, 13765, 13774, 13777, 13778, 13779, 13783,
   13784, 13788, 13794, 13803, 13804, 13812, 13813, 13817, 13822, 13828,
   13832, 13838, 13847, 13853, 13861, 13865, 13874, 13886, 13887, 13888,
   13889, 13890, 13891, 13892, 13893, 13894, 13895, 13896, 13897, 13901,
   13902, 13903, 13904, 13905, 13906, 13907, 13908, 13909, 13913, 13914,
   13915, 13916, 13919, 13921, 13925, 13926, 13931, 13932, 13935, 13937,
   13941, 13942, 13946, 13950, 13951, 13958, 13962, 13969, 13974, 13983,
   14000, 14008, 14015, 14021, 14031, 14034, 14041, 14047, 14056, 14070,
   14071, 14078, 14083, 14094, 14095, 14110, 14115, 14125, 14132, 14133,
   14137, 14144, 14149, 14159, 14160, 14164, 14165, 14169, 14170, 14174,
   14181, 14187, 14193, 14202, 14206, 14210, 14214, 14218, 14225, 14226,
   14230, 14231, 14232, 14233, 14234, 14235, 14239, 14240, 14241, 14242,
   14243, 14247, 14248, 14249, 14250, 14251, 14255, 14256, 14257, 14258,
   14259, 14263, 14268, 14269, 14273, 14279, 14288, 14292, 14299, 14306,
   14317, 14321, 14329, 14340, 14350, 14366, 14375, 14385, 14408, 14443,
   14450, 14465, 14475, 14490, 14499, 14510, 14530, 14552, 14575, 14583,
   14590, 14597, 14603, 14612, 14618, 14627, 14628, 14632, 14633, 14637,
   14638, 14642, 14648, 14657, 14658, 14665, 14679, 14697, 14714, 14726,
   14742, 14757, 14758, 14759, 14768, 14772, 14773, 14784, 14786, 14790,
   14795, 14800, 14808, 14813, 14818, 14826, 14832, 14841, 14848, 14849,
   14853, 14854, 14858, 14863, 14873, 14874, 14877, 14879, 14883, 14888,
   14893, 14897, 14903, 14912, 14913, 14921, 14925, 14934, 14951, 14952,
   14956, 14963, 14975, 14983, 14984, 14990, 15003, 15013, 15026, 15028,
   15032, 15033, 15037, 15038, 15039, 15043, 15051, 15053, 15056, 15058,
   15061, 15063, 15066, 15067, 15070, 15074, 15078, 15082, 15086, 15090,
   15094, 15098, 15102, 15110, 15113, 15127, 15126, 15137, 15146, 15152,
   15164, 15175, 15186, 15201, 15208, 15216, 15218, 15241, 15245, 15250,
   15249, 15260, 15259, 15269, 15287, 15294, 15302, 15310, 15318, 15326,
   15334, 15344, 15366, 15371, 15373, 15375, 15397, 15406, 15415, 15421,
   15426, 15431, 15436, 15442, 15451, 15459, 15463, 15467, 15471, 15478,
   15485, 15491, 15501, 15511, 15516, 15521, 15526, 15535, 15537, 15539,
   15544, 15545, 15548, 15550, 15554, 15555, 15559, 15560, 15564, 15565,
   15569, 15570, 15571, 15572, 15576, 15577, 15581, 15582, 15586, 15587,
   15591, 15592, 15593, 15598, 15605, 15612, 15613, 15614, 15615, 15616,
   15617, 15624, 15625, 15630, 15633, 15647, 15654, 15655, 15660, 15668,
   15667, 15680, 15679, 15693, 15697, 15698, 15711, 15710, 15733, 15734,
   15739, 15741, 15743, 15745, 15747, 15749, 15751, 15753, 15755, 15757,
   15759, 15761, 15766, 15767, 15772, 15771, 15778, 15788, 15789, 15794,
   15799, 15808, 15808, 15811, 15810, 15830, 15831, 15835, 15836, 15851,
   15850, 15861, 15865, 15869, 15883, 15895, 15896, 15897, 15903, 15914,
   15953, 15954, 15958, 15959, 15963, 15964, 15965, 15969, 15970, 15974,
   15975, 15979, 15980, 15984, 15989, 15993, 15998, 16004, 16009, 16017,
   16018, 16022, 16027, 16031, 16036, 16044, 16045, 16057, 16058, 16062,
   16063, 16067, 16068, 16072, 16073, 16074, 16078, 16084, 16093, 16094,
   16101, 16102, 16106, 16114, 16134, 16155, 16160, 16166, 16171, 16179,
   16186, 16193, 16203, 16222, 16223, 16224, 16235, 16236, 16237, 16238,
   16250, 16254, 16258, 16262, 16266, 16270, 16277, 16281, 16285, 16289,
   16293, 16301, 16305, 16309, 16323, 16324, 16328, 16332, 16341, 16348,
   16355, 16359, 16363, 16367, 16371, 16375, 16384, 16390, 16403, 16409,
   16420, 16421, 16451, 16464, 16477, 16493, 16509, 16526, 16530, 16531,
   16538, 16554, 16555, 16566, 16567, 16577, 16582, 16583, 16594, 16595,
   16605, 16606, 16607, 16611, 16612, 16613, 16617, 16622, 16630, 16634,
   16648, 16653, 16661, 16685, 16686, 16687, 16688, 16689, 16696, 16697,
   16698, 16705, 16706, 16707, 16708, 16709, 16710, 16711, 16712, 16713,
   16714, 16715, 16716, 16717, 16718, 16719, 16720, 16721, 16722, 16723,
   16724, 16725, 16726, 16727, 16728, 16729, 16730, 16731, 16732, 16733,
   16734, 16735, 16736, 16737, 16738, 16739, 16740, 16741, 16742, 16757,
   16758, 16759, 16766, 16767, 16768, 16769, 16770, 16771, 16772, 16773,
   16774, 16782, 16783, 16784, 16785, 16786, 16787, 16788, 16789, 16790,
   16791, 16792, 16793, 16794, 16795, 16796, 16797, 16798, 16799, 16800,
   16801, 16802, 16803, 16804, 16805, 16806, 16807, 16808, 16809, 16810,
   16811, 16812, 16813, 16814, 16815, 16816, 16817, 16818, 16819, 16820,
   16821, 16822, 16823, 16824, 16825, 16826, 16827, 16828, 16829, 16830,
   16831, 16832, 16833, 16834, 16835, 16836, 16837, 16838, 16839, 16840,
   16841, 16842, 16843, 16844, 16845, 16846, 16847, 16848, 16849, 16850,
   16851, 16852, 16853, 16854, 16855, 16856, 16857, 16858, 16859, 16860,
   16861, 16862, 16863, 16864, 16865, 16866, 16867, 16868, 16869, 16870,
   16871, 16872, 16873, 16874, 16875, 16876, 16877, 16878, 16879, 16880,
   16881, 16882, 16883, 16884, 16885, 16886, 16887, 16888, 16889, 16890,
   16891, 16892, 16893, 16894, 16895, 16896, 16897, 16898, 16899, 16900,
   16901, 16902, 16903, 16904, 16905, 16906, 16907, 16908, 16909, 16910,
   16911, 16912, 16913, 16914, 16915, 16916, 16917, 16918, 16919, 16920,
   16921, 16922, 16923, 16924, 16925, 16926, 16927, 16928, 16929, 16930,
   16931, 16932, 16933, 16934, 16935, 16936, 16937, 16938, 16939, 16940,
   16941, 16942, 16943, 16944, 16945, 16946, 16947, 16948, 16949, 16950,
   16951, 16952, 16953, 16954, 16955, 16956, 16957, 16958, 16959, 16960,
   16961, 16962, 16963, 16964, 16965, 16966, 16967, 16968, 16969, 16970,
   16971, 16972, 16973, 16974, 16975, 16976, 16977, 16978, 16979, 16980,
   16981, 16982, 16983, 16984, 16985, 16986, 16987, 16988, 16989, 16990,
   16991, 16992, 16993, 16994, 16995, 16996, 16997, 16998, 16999, 17000,
   17001, 17002, 17003, 17004, 17005, 17006, 17007, 17008, 17009, 17010,
   17011, 17012, 17013, 17014, 17015, 17016, 17017, 17018, 17019, 17020,
   17021, 17022, 17023, 17024, 17025, 17026, 17027, 17028, 17029, 17030,
   17031, 17032, 17033, 17034, 17035, 17036, 17037, 17038, 17039, 17040,
   17041, 17042, 17043, 17044, 17045, 17046, 17047, 17048, 17049, 17050,
   17051, 17052, 17053, 17054, 17055, 17056, 17057, 17058, 17059, 17060,
   17061, 17062, 17063, 17064, 17065, 17066, 17067, 17068, 17069, 17070,
   17071, 17072, 17073, 17074, 17075, 17076, 17077, 17078, 17079, 17080,
   17081, 17082, 17083, 17084, 17085, 17086, 17087, 17088, 17089, 17090,
   17091, 17092, 17093, 17094, 17095, 17096, 17097, 17098, 17099, 17100,
   17101, 17102, 17103, 17104, 17105, 17106, 17107, 17108, 17109, 17110,
   17111, 17112, 17113, 17114, 17115, 17116, 17117, 17118, 17119, 17120,
   17121, 17122, 17123, 17124, 17125, 17126, 17127, 17128, 17129, 17130,
   17131, 17132, 17133, 17134, 17135, 17136, 17137, 17138, 17139, 17140,
   17141, 17142, 17143, 17144, 17145, 17146, 17147, 17148, 17149, 17150,
   17151, 17152, 17153, 17154, 17155, 17156, 17168, 17169, 17170, 17182,
   17183, 17184, 17185, 17194, 17195, 17196, 17197, 17198, 17209, 17218,
   17222, 17226, 17230, 17237, 17245, 17253, 17265, 17269, 17274, 17279,
   17284, 17289, 17294, 17302, 17303, 17307, 17311, 17318, 17324, 17333,
   17338, 17345, 17355, 17356, 17361, 17365, 17373, 17377, 17381, 17382,
   17383, 17384, 17385, 17389, 17390, 17391, 17392, 17396, 17397, 17398,
   17399, 17403, 17404, 17405, 17406, 17407, 17408, 17413, 17421, 17427,
   17431, 17436, 17440, 17447, 17451, 17458, 17462, 17466, 17473, 17477,
   17484, 17491, 17492, 17496, 17503, 17504, 17508, 17509, 17513, 17514,
   17515, 17516, 17520, 17521, 17522, 17526, 17530, 17534, 17538, 17548,
   17547, 17560, 17570, 17571, 17575, 17576, 17580, 17608, 17609, 17610,
   17615, 17620, 17619, 17632, 17643, 17651, 17658, 17665, 17681, 17693,
   17712, 17716, 17720, 17729, 17740, 17756, 17757, 17761, 17762, 17763,
   17764, 17768, 17769, 17770, 17771, 17772, 17778, 17783, 17799, 17798,
   17817, 17822, 17833, 17838, 17855, 17854, 17871, 17884, 17885, 17886,
   17887, 17890, 17892, 17896, 17902, 17911, 17918, 17920, 17922, 17924,
   17926, 17928, 17930, 17932, 17934, 17936, 17938, 17940, 17942, 17944,
   17946, 17948, 17950, 17955, 17957, 17971, 17973, 17975, 17977, 17979,
   17981, 17983, 17985, 17987, 17989, 17991, 17993, 17995, 17997, 18002,
   18003, 18006, 18008, 18012, 18013, 18017, 18027, 18037, 18050, 18064,
   18076, 18088, 18100, 18120, 18126, 18135, 18141, 18150, 18151, 18155,
   18156, 18159, 18170, 18181, 18192, 18205, 18219, 18231, 18242, 18256,
   18274, 18285, 18296, 18310, 18321, 18335, 18350, 18363, 18374, 18379,
   18387, 18392, 18400, 18401, 18405, 18411, 18419, 18421, 18425, 18429,
   18433, 18440, 18441, 18446, 18447, 18451, 18452, 18456, 18461, 18463,
   18468, 18469, 18477, 18476, 18486, 18487, 18492, 18493, 18494, 18499,
   18500, 18501, 18505, 18506, 18510, 18522, 18531, 18541, 18550, 18564,
   18565, 18566, 18570, 18574, 18578, 18591, 18592, 18593, 18594, 18595,
   18596, 18597, 18603, 18614, 18623, 18625, 18627, 18632, 18633, 18634,
   18635, 18636, 18640, 18641, 18642, 18643, 18644, 18645, 18655, 18656,
   18661, 18674, 18702, 18704, 18706, 18712, 18713, 18715, 18721, 18720,
   18760, 18811, 18812, 18813, 18814, 18824, 18826, 18832, 18837, 18855,
   18845, 18922, 18940, 18964, 18988, 18994, 19035, 18961, 19100, 19106,
   19105, 19132, 19131, 19148, 19161, 19174, 19173, 19194, 19193, 19209,
   19210, 19214, 19215, 19219, 19221, 19227, 19226, 19316, 19351, 19387,
   19392, 19397, 19402, 19407, 19412, 19420, 19421, 19424, 19433, 19443,
   19461, 19462, 19466, 19467, 19468, 19472, 19473, 19478, 19479, 19481,
   19486, 19492, 19501, 19507, 19516, 19522, 19531, 19548, 19557, 19580,
   19584, 19592, 19595, 19599, 19606, 19607, 19612, 19618, 19622, 19629,
   19639, 19646, 19659, 19660, 19664, 19665, 19673, 19674, 19679, 19687,
   19688
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "GDB_FORMAT_SYM", "FLAG_SYM",
  "OPTION_LIST_SYM", "TABLE_TYPE_SYM", "TABNAME_SYM", "QUICKSYNC_SYM",
  "THREADPOOL_SYM", "COPY_SYM", "SYNCREPLAY_SYM", "MY_LEX_FOR_LOOP_SEP",
  "SYS_REFCURSOR_SYM", "EXCEPTION_SYM", "CLOB_SYM", "IMMEDIATE_SYM",
  "NOT_FOUND_SYM", "SQLCODE_SYM", "SQLERRM_SYM", "CONDITIONLESS_JOIN",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE", "MARK_SYM", "';'",
  "'@'", "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept",
  "start_entry", "sql_statement", "$@1", "opt_end_of_input",
  "simple_statement_or_begin", "simple_statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "$@2",
  "execute_immediate", "execute_using", "execute_var_list",
  "execute_var_ident", "help", "$@3", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "master_file_def", "opt_channel",
  "create_table_stmt", "create_role_stmt", "create_resource_group_stmt",
  "create", "$@6", "create_srs_stmt", "srs_attributes",
  "default_role_clause", "create_index_stmt", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_opt_inout2", "sp_ora_proc_stmts", "sp_ora_proc_stmts1",
  "sp_ora_default_no_pushexpr", "sp_ora_default", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_ora_proc_stmt",
  "sp_proc_stmt_exec_proc", "sp_ora_labeled_control", "$@12",
  "sp_ora_proc_stmt_unlabeled", "$@13", "sp_proc_stmt_exit",
  "leave_label_ident", "exit_option_expr", "$@14", "sp_decl_block", "$@15",
  "sp_ora_proc_stmt_return", "$@16", "sp_opt_return_expr",
  "sp_ora_proc_stmt_if", "$@17", "sp_ora_if", "$@18", "$@19", "$@20",
  "sp_ora_elseifs", "sp_proc_stmt_if", "$@21", "sp_proc_stmt_statement",
  "$@22", "sp_proc_stmt_return", "$@23", "sp_proc_stmt_unlabeled", "$@24",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "open_cursor_statement", "sp_proc_stmt_fetch", "$@25",
  "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list", "sp_if",
  "$@26", "$@27", "$@28", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@29", "$@30", "searched_case_stmt", "$@31",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@32", "$@33", "searched_when_clause", "$@34",
  "$@35", "else_clause_opt", "sp_labeled_control", "$@36", "sp_opt_label",
  "sp_labeled_block", "$@37", "sp_ora_labeled_block", "$@38", "$@39",
  "sp_ora_unlabeled_block", "$@40", "sp_unlabeled_block", "$@41",
  "sp_block_content", "$@42", "sp_unlabeled_control", "$@43", "$@44",
  "$@45", "$@46", "sp_ora_unlabeled_control", "$@47", "$@48", "$@49",
  "pop_unlabled_control_label", "pop_sp_empty_label", "ora_while_body",
  "$@50", "sp_cursor_stmt", "$@51", "low_bound_or_cursor", "opt_reverse",
  "opt_up_bound", "for_body", "$@52", "$@53", "sp_ora_block_content",
  "$@54", "$@55", "sp_exception_handle", "$@56", "sp_end_name",
  "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@57", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@58", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@59", "alter_procedure_stmt", "$@60",
  "alter_function_stmt", "$@61", "alter_view_stmt", "$@62", "$@63",
  "alter_event_stmt", "$@64", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "opt_fast", "slave_start", "start_slave_opts", "$@65", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "copy", "rename", "$@66", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "select_options",
  "select_option_list", "select_option", "opt_locking_clause_list",
  "locking_clause_list", "locking_clause", "lock_strength",
  "table_locking_list", "opt_locked_row_action", "locked_row_action",
  "select_item_list", "select_item", "select_alias", "optional_braces",
  "expr", "bool_pri", "predicate", "opt_of", "bit_expr", "or", "and",
  "not", "not2", "comp_op", "all_or_any", "simple_expr", "opt_array_cast",
  "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "opt_ll_default", "opt_null_treatment",
  "opt_from_first_last", "opt_windowing_clause", "windowing_clause",
  "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "sp_expr", "sp_opt_expr", "ident_list_arg",
  "ident_list", "opt_expr", "opt_else", "when_list", "table_reference",
  "esc_table_reference", "joined_table", "natural_join_type",
  "inner_join_type", "outer_join_type", "opt_inner", "opt_outer",
  "opt_use_partition", "use_partition", "table_factor",
  "table_reference_list_parens", "single_table_parens", "single_table",
  "joined_table_parens", "derived_table", "table_function",
  "columns_clause", "columns_list", "jt_column", "jt_column_type",
  "opt_on_empty_or_error", "opt_on_empty", "opt_on_error",
  "jt_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "or_replace",
  "opt_table_alias", "opt_all", "opt_where_clause", "where_clause",
  "opt_having_clause", "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "empty_select_options",
  "drop_table_stmt", "drop_index_stmt", "drop_database_stmt",
  "drop_function_stmt", "drop_resource_group_stmt", "drop_procedure_stmt",
  "drop_user_stmt", "drop_view_stmt", "drop_event_stmt",
  "drop_trigger_stmt", "drop_tablespace_stmt", "drop_undo_tablespace_stmt",
  "drop_logfile_stmt", "drop_server_stmt", "drop_srs_stmt",
  "drop_role_stmt", "table_list", "table_alias_ref_list", "if_exists",
  "opt_temporary", "opt_drop_ts_options", "drop_ts_option_list",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "opt_with_clause",
  "update_list", "update_elem", "opt_low_priority", "delete_stmt",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate_stmt",
  "opt_no_purge", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@67", "show_param", "$@68",
  "$@69", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where", "describe_stmt",
  "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_describe_column", "flush", "$@70",
  "flush_options", "$@71", "opt_flush_lock", "$@72", "flush_options_list",
  "flush_option", "opt_table_list", "reset", "$@73", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@74", "$@75",
  "slave_reset_options", "master_reset_options", "purge", "$@76",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_export_format", "opt_xml_rows_identified_by", "opt_ignore_lines",
  "lines_or_rows", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "load_data_set_list",
  "load_data_set_elem", "text_literal", "text_string", "param_marker",
  "signed_literal", "literal", "NUM_literal", "temporal_literal",
  "insert_ident", "table_wild", "order_expr", "grouping_expr",
  "simple_ident", "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "ora_label_ident",
  "label_ident", "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@77", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@78",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@79", "grant",
  "$@80", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password", "create_user",
  "alter_user", "create_user_list", "alter_user_list", "opt_column_list",
  "column_list", "require_clause", "grant_options", "opt_grant_option",
  "opt_with_roles", "opt_grant_as", "begin_stmt", "$@81", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_option", "row_subquery", "table_subquery",
  "subquery", "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_algorithm", "view_suid",
  "view_tail", "$@82", "view_select", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "trigger_tail", "$@83", "udf_tail", "sf_tail", "$@84", "$@85", "$@86",
  "$@87", "sp_tail", "sp_tail_prefix", "$@88", "sp_tail_body", "$@89",
  "sp_opt_pdparam", "$@90", "sp_ora_chistic", "$@91", "sp_ora_prefix_decl",
  "sp_opt_ora_variable_declares", "sp_ora_variable_declares",
  "sp_ora_variable_declare", "$@92", "xa", "opt_convert_xid", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "install", "uninstall", "TEXT_STRING_sys_list", "import_stmt",
  "clone_stmt", "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,   999,  1000,  1001,  1002,  1003,  1004,
    1005,  1006,  1007,  1008,  1009,   124,    38,    45,    43,    42,
      47,    37,    94,   126,  1010,    40,    41,  1011,  1012,    59,
      64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4439

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4439)))

#define YYTABLE_NINF -2882

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    7560,  3430,   181, -4439,   776,   902, 69477,   830,   -70,   -70,
     653,  4084, -4439, -4439, -4439, -4439,  4519, -4439, 70224,   181,
     216, 46320, 69477, -4439,  1040,  1696,   -29,  1045,   130,   951,
     181, 69477, -4439,  1133,  1813,   181,   308,   808, 62007, 47067,
     653, 69477,  3304, 29105, -4439, -4439, 62007,  1101,  1075,  1060,
      38,  1387, 69477, 62754,  1280, 22296,  2133,  1370,   939,   236,
   -4439,  1455,  1062,  1795, -4439,  1922, -4439, -4439,  1680, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, 54537, -4439, -4439,  1535,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439,  1955,   837,  1305, -4439, -4439,   -93, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,   461,
   -4439, -4439, -4439, -4439, -4439, 63501, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439,  2106, 69477,  2134, 69477,    32,  2014, 69477,
   60513, 69477, 69477,  1699,  2083,  2125,  2174, -4439, -4439,  2254,
   -4439, -4439,   -70,   653, -4439, -4439, 69477, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,  1626,
   -4439,  1642, -4439, -4439, -4439, -4439, -4439, -4439,  1833,  2241,
   -4439, -4439, 69477, 69477, -4439,  2416,  2260,  2265,  2284,  2050,
   60513,    47, 69477, -4439,  1970, -4439,  2260,  2260,  2301,  2307,
    1991,  2003, 13044,  2083,  2083,  2083, 69477,  2324,  2083,  2083,
    1846, 69477,  2083,  2017,  2083,  2083,  2083,  2373,   -70, 22296,
   -4439, -4439, -4439, -4439,  2472,  2176,  2135,  2744, -4439,  1968,
   -4439, -4439, -4439,  2255, -4439,  1881, -4439,  2095, -4439,  2286,
    1881, -4439,   256,  1881,   282, -4439, -4439, -4439,  1881, -4439,
   -4439, -4439, -4439,  1415, -4439, -4439, -4439, -4439,  1176, -4439,
    2285,   128, 60513,  2484, -4439, -4439, -4439,  2471, 69477,   776,
   -4439, -4439, 16899, -4439,  2458, -4439,   318,  2517, -4439,   -70,
    2525,   334, 69477, 55284, -4439,   -70, -4439, -4439,  2483, -4439,
     160,   845,  2130, -4439, -4439,  2257, -4439,  2176,  2411,    64,
     380, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, 13044,  3304, -4439, -4439,   131,  2271,  1308, -4439, -4439,
   50802,  1335, -4439,  1109, -4439, 73959, -4439,  2563, 29853, 52296,
   -4439,  2034, -4439, -4439, -4439, -4439, -4439, -4439, 72465,  2037,
     202, 92515,  2257, -4439,    20,   -32, -4439,    20, -4439, 69477,
   69477,   776, -4439,   -70, -4439, 69477,  2041, -4439,  2055, -4439,
     305,   305,   305,  2730,   305, -4439,   305,  2068,  2079,  2089,
   22296, -4439,  2091,  2116,  2118, 16899,  2141,  2145,  2152,  2154,
    2156,  2160,  2164,  2168,  2168,  2177,  2193,  2221,  2230,   814,
    2237, -4439,  2238,   939,  2246, -4439, -4439,  2256,  2269,  2272,
    2275, -4439,  2278,  2281,  2298, 17670,  2329,  2330, -4439, 39572,
    2331,  2333,  2342,  2350,  2354,  2356,  2370,  2372,  2378, -4439,
   -4439,  2177, -4439, -4439, -4439,  2379,  2380,  2382,  2398,  2401,
    2404,  2412,  2414,  2418,  2420,  2421,  2441,  2456,  2469,  2482,
    2485,  2177, -4439,   950,  2494,  2506,   972,  2527, -4439,  2535,
   -4439,   319,  2546,  2168,  2177,  2177,  2547,  2553,  2554,  2556,
    2562,  2564,  2566,  2583,  2597,  2606,  2609,  2625,  2627,  2629,
    2643,  2649,  2653,  2666,  2670,  2671, -4439, -4439, 22296, 22296,
   22296, 12273, 30601, -4439, 69477, -4439, -4439,  2860, 22296,  1245,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
    2296, -4439, -4439, -4439, -4439,    87, -4439,  2673,  2122, -4439,
   -4439,  2674,  2848,  2790,  1229,  2864, -4439,  2831,  2919,  2855,
    2300,   187,  1043,   -93, -4439, -4439,  2367, 69477,  2168, -4439,
    2675,   344, -4439, -4439,  2304, -4439,  2180, -4439,   763,  3242,
   -4439,  2693, 28357, -4439,  3022,  1367,  2900, -4439, 53043,  1367,
    2900,   265,   837,  1451,   184,  2944, -4439,  3088,  1400, 56031,
    2510,  1104, -4439, -4439, 55284, -4439, 69477, 60513, -4439, 69477,
   -4439,  2951,  3184,  8995, 69477,  3167, -4439, 69477, 69477,  2825,
   -4439, 69477, -4439,    73, -4439,   194, 16899, -4439, 69477, -4439,
   -4439,    81, -4439,   199,   309,   117,  1694, 69477, 69477, 69477,
    2892,  3223, 69477,  2732,  3436, 69477, 55284, 76947, 69477, 69477,
   -4439, -4439, -4439,  2254,  2260, 16899, -4439,  2676, -4439, 50055,
    3975, -4439,  3723, -4439,  2680, 69477, 69477, 69477,  3067, 69477,
   69477, 60513,  2745,  1300, 69477, 69477, 55284, 69477, 76947, 69477,
    2083,  1245,  2842,  4463, 32845, -4439, -4439, -4439, -4439, -4439,
    2903, -4439, -4439, -4439, -4439, -4439, 69477, -4439, -4439, 55284,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, 60513, -4439,   147,
   55284, 48561,   148, -4439, 70971, 69477, -4439,   776, -4439,  2483,
    2957, -4439,  2696,  1554,  3425, -4439, -4439,  3194,  3447, 69477,
   69477,  -158, -4439, -4439,  3191, -4439, -4439,  2712,  2901, 69477,
   69477, -4439, 69477, 69477, -4439, -4439, -4439,  2714, -4439, -4439,
    2296,  4748, -4439,  2716, 55284, 55284,   147,  3001,   117,    98,
   -4439, -4439, 75453, 69477, -4439, -4439, -4439, -4439,  3419, 16899,
   -4439, 55284,  2763,  2927,  3228,   822, -4439,  2731,  2737, -4439,
    2852, -4439, -4439,  2742, -4439,  2752, 69477,  1988,   202, -4439,
   -4439, -4439, -4439, -4439, 69477,  2767,  1109, -4439,  2037,   202,
   31349, -4439, 10731,  3369, -4439,    86,  2779,  2397,    86, 56778,
    2900,   314,   253,   391,   553, -4439,  3347, -4439,  3007,  2984,
   -4439, -4439,   565,  4265, -4439,  3385, -4439,   533, -4439,  3015,
    2900,  3016,  3017,    86, -4439,  3275,  3406,   757,  1829,   453,
     -78, -4439, -4439, -4439, -4439,  2794, -4439,   895,  3494, -4439,
    2812, -4439,  3404,  3222, -4439,  2696, -4439,  2041, 69477, 69477,
    3571, -4439, -4439, -4439,  2826, -4439,  3217,  3040, -4439,  2955,
   -4439, -4439,   144, 16899, 16899,  1717,  3532,  3591,  3591,  3591,
    1554,  2973, 16899, 16899, 16899, 16899, 16899, 16899,  1858,  2846,
   -4439, -4439,   326, -4439,  2857, 16899, 16899, -4439, 16899, 16899,
   69477, -4439,  5128, 16899, 16899,  1048,  3468, 16899, 16899, 16899,
   12273,  4846, 16899, 16899, 69477,  3604,  2854, -4439,  2856,  1946,
   16899, 16899,  2020, 16899, 16899, 16899, 16899, 16899, -4439, 16899,
   16899, 22296, 16899, 16899, 16899, 16899, 16899, 16899,  2861, 16899,
    3591,  3591, 16899, 16899,  2052, -4439, -4439, 16899,  1505,  1505,
   -4439, 16899, 11502, 16899, -4439, -4439, -4439,  2865, -4439, -4439,
   -4439, 69477,  3591,  3591, 16899, 16899, 16899,  3591,  3591, 16899,
    2868,  2871, 16899, 16899, 16899, 16899, 16899, 22296,  2875,  2876,
    2877,  3532,  3532,  3532,  2878,  1043,   244,  1144, -4439,  3147,
   16899, 22296, -4439, 22296, 22296, 22296, 22296, 22296, 23067, 23838,
   22296, 22296, 22296, 22296,  3532, 60513, 22296, -4439,  2296,  2296,
   16899, 69477, 16899,  1703, -4439, -4439, 55284,  3514, 69477, -4439,
   -4439, -4439,  3496, -4439, -4439,  2888,  2926,  3610, 60513,  3005,
    2931,   221, -4439,  1344, 55284,  3024,  3507,  3509,  3510,  3515,
    3517, -4439,  3520, -4439,  2910,  3524, -4439,  3281,  3114,  3114,
   60513,  2918, -4439, -4439, -4439, 16899, -4439, -4439,   -93,   265,
   -4439, -4439, -4439, -4439, -4439,   -44, -4439, -4439,   -93,   265,
    1303,  3441, -4439,   265, -4439,  2900, -4439,  2900,   265, -4439,
   -4439, -4439, 64248,   184,  2471, 60513,  3605, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,  3568,
   -4439, -4439,  3325,  3382,  3692, -4439,  2937,  3595,   202,   202,
    3595,   202,   202, -4439,  3124, -4439,    78, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439,  3550,  4300,   202,  1949,  3308,   202,
     202,  3638,   202,  3313,  3314,   202,   202,   202,   202,  3134,
    3582, -4439,   202,  3459,    26,  2741,  3461,   202,  3323, -4439,
    1252,  3589,   202,   202,   202,   202,   202,  3638,  3326,  3681,
     202,   202,  3329,  2290,  3332,  3336,   202,   202,   202,   202,
    1558,   202,   202,  3337,   202,  3120,  3122,   202, -4439, -4439,
     202,   202,   202,  5850, -4439, -4439, -4439,  2336, -4439, -4439,
      69, -4439, -4439,  2972,  2974, -4439, -4439, -4439, -4439,  3250,
   -4439,  3042, -4439,  3261,  3129, -4439,  2825,    80, 64995, 69477,
   -4439, -4439,  2993,  2994,  1944, -4439,   261,  2996,  2989, -4439,
   -4439,  5714,  3330, -4439, -4439, 69477, -4439, -4439, -4439, -4439,
    3153, -4439, -4439, -4439, -4439,  2958, -4439,  3707,  3321, -4439,
   -4439, -4439, -4439,  3599, -4439,  3393,  3765,  3056,  3664,  3399,
    2260,  3595,  3164,  3773,  3553, -4439,   113,  2752,  3192,   -86,
    2613,  1330, -4439, 69477, -4439, 16899, -4439, -4439, 65742, -4439,
   -4439, -4439, 16899, -4439, 16899, 16899, -4439, -4439, -4439, -4439,
   -4439, -4439,  2361, -4439, -4439, -4439, 18441, 22296,  3018, 22296,
   22296,  3522,  3132,   278, 42560, -4439, -4439,  3029, 69477,  1300,
   -4439, -4439,  2083, -4439, -4439, -4439,   137, -4439, -4439,   167,
   -4439,  3031,   155,  2752,  3611, 69477,  3034, -4439,  3518,  3521,
    3523,  3526, -4439, -4439, -4439, -4439,  3530, -4439,  3535, -4439,
   -4439,  3052, -4439, 69477, 27609, 60513, -4439,  3055, -4439,  3651,
   -4439,  3449, -4439, -4439,  1454,  3245, -4439, -4439, -4439, -4439,
   43312,  -183, -4439, -4439, 69477, -4439,   963,   986,  4044,  3195,
   -4439,  2696, 69477,   776,   776, 69477, -4439,  3593, -4439,   243,
    3062, -4439,  3075, 60513, -4439, -4439,   237, 55284, 55284,  3076,
   -4439,  3265,    96,  3450, -4439,  3269,  3841,   845, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439,  3084,  3696,  3647,  3483,  3665,  3031, 43312, -4439, 69477,
   -4439, 25360,  3195, -4439,  3668,  3283,  3292,   887, -4439, 57525,
   -4439,  1554,   177,  3418, -4439,  3418,  1741, -4439, -4439,  3621,
   -4439,  3444, -4439, 76947, -4439, 60513, 76947,  3685,  3110,  3113,
    3118,  3119,  3130, 73212, 16899, -4439, -4439, -4439, 10731,  3115,
   -4439, 73212, -4439, -4439, 22296,  2238, -4439,  2418, -4439,  1554,
   -4439,  3652,  2296, 16899, -4439, -4439,  3148,  2260, 69477, 69477,
   69477, 69477, 69477, 55284, 69477, -4439,  1261,  1261, -4439, -4439,
   -4439,    86, 69477, -4439, 69477,    86, 55284, -4439,   314, 69477,
      86, -4439,  3661,  3362, -4439, -4439, -4439,  3745, -4439, -4439,
    3736,  3162, -4439,  3652, -4439,  3740,  3392,   314, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439,   314, -4439, -4439, -4439,   314,
     314,   314,    86,    86,    20, -4439, -4439,  3426,   -32, -4439,
    3740,  3513, -4439, -4439,  1514, -4439,   939,   305,  3536, -4439,
    3748, -4439, -4439, -4439, -4439, -4439,   195,   379, -4439,  3591,
    3177, 16899,  3178,  3179,  3180, 16899,   363,  1586,   483,  1490,
    1651,   514,   179, 16899,  3181, 13815, -4439,  3190, -4439, -4439,
     283,   287,  1195,  1546,  3200, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439,  3774, -4439,   388,  3208, -4439,
   -4439, -4439, -4439,  3206, -4439, 16899,  1591,   503,   526,   295,
    3232,   643,  1726,  1732,  3227, 69477, 69477,  3591,  3236,  1595,
    1597,  3591,  3239,   722,  1614,  1777,  1785,  1794,   846,  1847,
    3083,  1654,   880,   971,  1751,   989,  1059, -4439,  1764,  3240,
    3244,  1172,   170,  3591,  3248,   316,  3237,  3246,  1771, 14586,
   15357, 16128,   320,  1193, -4439,  3249, -4439,  2856,  3253,  3255,
     369,   234,  1780,  3252,  3256,  1937,  3303,  3303,  1796,  1265,
    1896,  1265,  1274,   139,  3303,  3303,  3303, -4439, 16899,  3257,
    3259,  3266, 60513, 16899,   183,  3262,  3262,  1995,  1995,  3395,
    3464, 17670,   213, 17670,   213,  3262,  3262,  3262, -4439, -4439,
    3532, -4439, -4439, 50055,  3271,  3270, -4439,  -273,  1932, -4439,
     106,   107,  3609,   271,  3272,   202,  3471, -4439, -4439, -4439,
    3624,   851, -4439, 76200,  3653,  1168, 60513,  3484,  3487, -4439,
   -4439,  3490, -4439, -4439,   622,  1882, -4439,  2785,   367,   776,
    2002,   776,  3106,   776,   776,  1707,   776,  3740,  3895,  3937,
   -4439, -4439,  2465, -4439, 32097,   557,  3294, -4439, -4439, -4439,
   -4439, 53043, 53043, -4439, -4439, -4439, -4439, -4439,  2064,  3563,
   -4439,   265,   265, -4439, 69477,   103, -4439,  3295, -4439, 26111,
   -4439,  3161,   153, -4439, -4439, -4439, -4439,  2626,  2534,  3596,
    3808,  3475,  2534,  2776,   776,  1443, -4439,  2830,   776,  1443,
    2830,  2830, 69477, -4439,  1519,   202, -4439, 69477,  1944,   181,
    1944, -4439,   394, 69477, 40319, 66489, 69477, 69477, 69477,   181,
    2002,  3106, 69477,  3106, 67236,   181,   776,   776,   776,   776,
    2465,   202,  3106, -4439, 67236, -4439, 69477,  3821, 69477,  3824,
   69477, 69477, -4439, 60513, 69477, 67236, -4439,   202,  1640,  3106,
   67983,  2002,  2002, 69477,   181, 69477,  2646,   776,   181, -4439,
   69477, -4439, -4439, 69477, 69477,   181,   181,  2718,  2646,  2646,
    3053, -4439, -4439, 69477,  3106, 67236,  3327, -4439, -4439, 58272,
     776, 69477,   776, -4439,   202,   202,  3688, -4439, -4439,  9518,
    9235,  1860,   202,  3381,  3716,  1916, 69477, -4439,  3422,  3423,
   -4439, -4439, -4439, -4439, -4439,  1944, 67236, 68730,  3849, 16899,
   -4439, -4439, 16899,  3944,  3945,  3946,  3949,  3951,  3953,  3954,
    3955,  3956,  3957,  3958,  3963,  3964,  3966,  3969,  3971,  3972,
    3977,  3979,  3982,  3983,  3986,  3988,  3998,  3999,  4002,  4011,
       1, -4439, -4439,  4013,  4014,  4018,  4021,  4022,  4023,  4024,
      66, -4439, -4439, -4439, -4439, -4439, -4439, -4439,   164, 69477,
    3475,  3412,  3527, 69477,  3445, -4439,  3882,  4009,  3595,   246,
    3541, 55284,  3720,   202,   260,   260,  3812, -4439,  3996,  2260,
   69477, 69477, 69477, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
     352, 69477, -4439, -4439, -4439, -4439, -4439, -4439,  2825,  8088,
   -4439, -4439, -4439,  2570,   280, -4439, -4439, -4439, -4439, -4439,
    1087, -4439,  3432, -4439,   939,  2131, 12273, -4439,  1117,  3320,
   22296, -4439,  3437, 22296,  3438, 22296, 22296, -4439,  1479, 69477,
     398, -4439,  3445,  1423, -4439,    34, -4439, -4439, 55284, -4439,
   -4439, -4439, -4439, -4439,   155, 60513,  3434, -4439, -4439, -4439,
   -4439, -4439,  3740, -4439,  3183,  3075, -4439,  3629,  3634,  3636,
   -4439, 34341, -4439, -4439, -4439, -4439, 34341,   850,   147, -4439,
   69477, 55284,  3439,  3442,  3443,  3627,  3558, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,  3195,  3451,
    2900, -4439,  3450, -4439, -4439,  3446, -4439,   194,  3114,  1047,
   69477, -4439, 16899,   776, -4439,  3637, -4439, 69477, 69477, -4439,
   -4439, -4439, -4439,  1132, -4439,  3466,  2335, -4439,  3445, -4439,
   -4439,  3740, -4439,  4748, 27609,  3850,   147, 55284,  4037, -4439,
   -4439,  3472,   939, 24609,  3505, -4439,  3467,  3251, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439,  3450,  4766,  4029,  3195,
   76947, 76947, 76947, -4439, -4439, -4439,  3511,  2927,  2927,  3519,
    3519,   362,  3816, -4439, -4439, -4439, -4439,  2752, -4439, -4439,
    3161, -4439, -4439, -4439, -4439, -4439,   202,  1554, -4439, 31349,
   -4439,   776,  4054, -4439,  1554,  3486, 69477, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439,  3640,    86, -4439, -4439, -4439, -4439, -4439,
    3825,  2900,  4265,  4054,  4196, -4439, -4439,    86,    86, 69477,
   69477,    86, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   69477, -4439,  3491, -4439,  3925, 19212, -4439,  3498,  3303,  1554,
    3303,  3303,  3303,   930, 16899, 16899,  4114,  4065, -4439, 59019,
   -4439, -4439, -4439, 59019,  4065,  1964,  3303,  3528, -4439,  4028,
    4034, -4439, -4439, -4439, 16899, 16899, -4439, 16899,   -76, -4439,
   16899, 16899, 16899, 16899, 16899, -4439, -4439, 22296, -4439,  3512,
    3534,  3303, -4439, -4439,  3539,  3303, 16899, -4439, -4439, -4439,
   -4439, 16899, -4439, 16899, -4439, 16899, 16899, -4439, 16899, 16899,
   -4439,  3303,  3303, 19983, 16899, 16899,  3540,  3303, -4439, 16899,
   16899, 16899, -4439, 16899,   358, 16899,  1129, 16899,  1859, 16899,
   -4439, 16899, -4439,  3303,  3303, -4439, 16899,  2084, -4439,  3106,
   -4439,  3591,  3303, -4439, 41066, -4439, -4439,    79,  1477,  3543,
      79,  3547, 22296,  3303, -4439, -4439, -4439,  1971, -4439, -4439,
   -4439,  3525,  1554, -4439,  4846,  4846, -4439, -4439, 16899, 16899,
   69477,  4125,  3542, 22296,  3555, 22296,  3161,  3732,  3557,  4278,
    3106,  3114, 69477, -4439,  3418,  3920, -4439, -4439,  2752, -4439,
    3871,  3924,  3519,  2443, -4439, -4439, -4439, -4439,   227,  3106,
    3106,  3106,  3106,  2785, -4439,  1053,   632, -4439,   367, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439,   776,  4169,  3929, 59019,  4258, -4439, -4439, -4439, -4439,
   -4439, 16899, -4439, -4439,  3106, 69477,  3667, -4439,  1603, -4439,
   -4439,  3995, -4439, -4439,  -171,   161,  1197, 26111, 69477, 44064,
   -4439,  -117, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439,   202,   776,  3809,  3811,  3813,  3817,  3819,  3853,
   -4439, -4439,  3976, -4439,   776,  1187,   776,   776,   776,   776,
    3106,   776,   776,  1974, -4439, -4439, -4439,   171, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, 60513, -4439, -4439, -4439, 69477,   -72, 69477,  3576,
    4090,  4093,  1944,   -22, 69477,  3584,  3742,  3768, 51549,  9766,
   -4439, -4439, -4439,  3994,  1982,   974, 67236, -4439, -4439, 69477,
   -4439, -4439,  2958,  3594, -4439,  3161, -4439, -4439, -4439, -4439,
   53790,   776, -4439,  3798, -4439, 69477,  3594, -4439, -4439,   291,
   -4439,  3731,  3807,   776, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439,  9766, 67236,  3607, -4439,   440, -4439,
   -4439, -4439, -4439, 67236,  3792,  3793, -4439, 69477, 67236, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, 69477, -4439, -4439, -4439, -4439, -4439, 57525,
   59019, -4439,  4269,  3004,  5850, -4439, -4439, -4439,  2972, -4439,
   -4439, -4439,   167,  4010,   202,   357,   250, -4439,  3930, -4439,
   -4439,  2055,  4004,  4012,  3622, -4439,  3625, -4439,  3631, -4439,
   64995,  1554, -4439,  3628,  3106,   776,  3106,  3106,   776,   776,
    3106,  3106,   776,   776,   776,   776,   776,   776,   776,   776,
    3106,  3106,   776,  2320,   776,  3106,   776,   776,  3106, 59766,
    5714, -4439,  3630,  3630,  3633,  3633,  3641,  3641,  3645,  3330,
   -4439, -4439,   165,  3646,  3912,  3445, 60513,  3648, -4439,  4180,
     202,   202,   202,   202, -4439,   196, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439,   167,  1230, 60513,
   76947, -4439,  3024,  -186, -4439, -4439, -4439, -4439, -4439, 69477,
   69477, 69477,  3649,  -105, -4439,  1609, -4439, -4439,  4605, -4439,
   85878, -4439, -4439,  1229, -4439, 69477, -4439, 38078, -4439, -4439,
   -4439, -4439,   238,  1318, -4439, -4439,  1305, -4439,   218, -4439,
   -4439, -4439, -4439, -4439, 22296,   399, 22296,  3320, 22296,  2371,
   12273, -4439,  1314,  3320, 44816, -4439, -4439,  4111,  4393, -4439,
   -4439,  3865, -4439, -4439, -4439,  3034, -4439, -4439,   438,  4255,
    3659, -4439, -4439, -4439, -4439, -4439, 43312, -4439,   952,  3657,
   45568, 55284,  4032,  2900, 20754, -4439,  2932, 69477,  1944,  4192,
     173,  3788,  4152, -4439, -4439, -4439,  1554, -4439, 55284, -4439,
   -4439, -4439, 69477, 69477, -4439, -4439, 35837, -4439, -4439, -4439,
   -4439,  3670, -4439, -4439,  4277, -4439,  4243, 43312,  3031, 55284,
   16899,  4766,  3671,  3675,  3677,  3678,  3680,  3683, 26111, 26111,
    4189,  4193, -4439,  4061,  1667,  4061, -4439, 38825, 26111, 26111,
    4109,  2055,  4405,  4237,  4029,  2752,  2752,  2752,  3418,  3418,
   -4439,  4352, -4439, -4439, -4439, -4439, -4439, -4439,   215, -4439,
   10731, -4439, -4439,  2002, -4439,   475, -4439, 55284, -4439,  4085,
   -4439, -4439, -4439,   776, -4439, -4439,   314,   314, -4439, -4439,
    3106, -4439, 17670,  1939,  3303, -4439, -4439, -4439, -4439, -4439,
   16899,  1554,  1153, -4439,  3695,  3695,  3698, -4439,  3701,  4043,
    3695, -4439, -4439,  4407, -4439, -4439,  4220,  3698,  4225,  3695,
   -4439,  3752,  3709,  3711,  3722,  3303, -4439,  3303, 16899, 16899,
    1981,   455,  1997,  4438,  3997,  1281,  1331,   190, -4439,  1999,
    3291,  3303, -4439,  3303, -4439,  2013,  2058,  2066,  2073,  1354,
    2075,  1996, -4439, -4439, 17670,  2129,   345,   466,  3303, -4439,
    2181,  1364,  1420,  2204, 16899,  2222, 16899,  2263, 16899,  2305,
    2309, -4439, -4439,  2325,  3726,  3726,  3725,  3728, -4439, 69477,
   -4439, -4439, -4439, -4439,  3814,  3815,  3303,  3734,  3734,    79,
    3303,    79,   154, -4439, -4439, 69477, -4439, -4439, -4439, -4439,
    3741, -4439, -4439, 69477,  2326, 69477,  2759, -4439,  4458,  3744,
   22296,  4360,  3747,  4294, -4439, -4439,  3519,  3418,  2927,   848,
   -4439,   920,  1259, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439,   255,  4421,  3077,  4281, -4439, -4439,   776,  4367, -4439,
   -4439,  1067,  4250, -4439, -4439,  3758, -4439, -4439, -4439, 26111,
    3450, 44064,  -197, -4439, -4439,  3759, 69477,   776, -4439, -4439,
   -4439,  4419, -4439,  4423,  1923,  4376, -4439, -4439,   275, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439,  2776, -4439,  3778,  3161,  4138,  3779, 16899, 69477, -4439,
   -4439, -4439,  3822, -4439, -4439,  3780, 41813,   260,   260,  2025,
   -4439, -4439, -4439,  9766, -4439,  3695,  3695,  3695, -4439, -4439,
     663,  3698, -4439, -4439,  3782, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439,   359,  2836, -4439, -4439,   359, -4439, -4439,
   -4439,   156,  1851, -4439, -4439, -4439, -4439, -4439, -4439,  3784,
   -4439,  3695,  3698,  3698, -4439, -4439,   359,  3695, -4439,  3695,
     359,  4110,  4444, -4439,   142,  3695,  3695,  3695,  3789,  3701,
   -4439, -4439, -4439, -4439,  4428,  4434, -4439,  9766, -4439, 69477,
   -4439,  3419,  3419, -4439, -4439, -4439, -4439,  4000, -4439, -4439,
     410, -4439, 69477, -4439, -4439, 69477, 69477,    62,  1132,  3794,
   -4439, -4439, -4439,  3804,   -37, -4439,   803, -4439, -4439,  3611,
    1692,  1570,  3981,  2067, -4439, 69477, 69477, -4439, -4439, 68730,
   -4439,  3106, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, 36584, -4439, -4439, 37331, -4439, -4439,  -156, -4439, -4439,
    1917, -4439, -4439, 41813,   202,   202, -4439,   296, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439,  4178, 41813,   877,
   69477,   776,  2830,  2830,  3161,  4086, -4439,  4161, -4439,  2461,
    2752,   367, -4439, -4439,  3042,  3803,  4102, -4439, -4439,  1078,
    3820, -4439, -4439,   993, -4439, -4439, -4439,  4443, 90342, -4439,
   69477, -4439, 91830,   231, -4439, 91830, 91830, 69477, -4439, 91830,
   -4439, -4439, -4439, -4439,   121, -4439, -4439, -4439, -4439, -4439,
    7970, -4439, -4439, -4439, -4439, -4439, -4439, -4439,  1334, -4439,
    3805, -4439, -4439, -4439, -4439,  2104, -4439, -4439, 69477,  2036,
   -4439, -4439,  6587, -4439, -4439, -4439, 16899,  1245,   158, 22296,
     472, 22296, -4439, -4439, -4439, -4439, -4439, -4439,  4146, -4439,
    4867, 34341,  4001,  4370, -4439, -4439, -4439, -4439,  1243, -4439,
   -4439,  2238,  1554,  2069, -4439, 69477,  4203,  4203, -4439,  1944,
    4192,  4313, -4439,  4341, -4439, -4439, -4439, -4439,  3823,  3594,
    3828, -4439,   202,  2385,  2071, -4439, -4439, -4439,  3830, 20754,
    3829, -4439, 27609, 55284,  4391,  3031,  1482,  2055, 26111, -4439,
   -4439, -4439, -4439, -4439,  3251,  3818,  3835,  3838,  3251, -4439,
   -4439, -4439,  4333, -4439,  4061,  4061,  4335,  4337, -4439,  3961,
    4299,  1121, -4439, 16899, 16899,  3898,  4237,  3519,  3519,  4200,
    3161, -4439, -4439,  2900, -4439, -4439,  3031, -4439,  2900, -4439,
    3195,    86, -4439,  4846, -4439, -4439,  1554, 16899,  1604, -4439,
   -4439,   359,  4233, -4439,  1666, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,  3851, -4439,
   -4439, -4439, -4439, -4439,  4846,  4846, -4439, -4439, 16899, -4439,
   16899,   305,  3852, 16899, 16899, -4439, 16899, -4439,  1097,  3856,
    3987, -4439, -4439, -4439, -4439, -4439, -4439, 16899, -4439, -4439,
    4846, -4439, 16899, -4439, -4439, 16899, -4439, -4439, 16899, 16899,
   -4439,  2351, -4439,  2383, -4439,  2391, -4439, -4439, -4439,  3161,
    3857,  3860,  3106,  3303, -4439,  3862,  4215, -4439, -4439, -4439,
   16899, -4439, -4439,  3303, -4439,  3303,  4422, -4439, -4439,  2080,
   -4439, -4439,  2101, -4439,  4353,  4138, -4439,  2771,  3161, 69477,
    4581, -4439,  3519,  3519,  2927, -4439, -4439, -4439,  3519,  4227,
     859, -4439,  3161, -4439,    92, -4439, -4439,  3107, -4439,   776,
    4584,  4589,  4487,  4593,  1067, -4439,   -66,  3905,  -197,  3195,
    1277, -4439,  3884, -4439,  -185, -4439, -4439, -4439, -4439, -4439,
   -4439,  1392, -4439, 41813, -4439, 69477,  2103, -4439, 41813,  2460,
    3880, -4439, 41813, 16899, -4439,  2136, -4439,   150, -4439, -4439,
   -4439, 51549,  4110, -4439, -4439, -4439,  4611,   386, -4439,  4614,
   -4439,   359, 59019, -4439, -4439, -4439, -4439,   305, -4439,   889,
   -4439,   359, -4439, -4439,  4025, -4439, -4439, -4439,   305,   359,
   -4439, -4439, -4439, -4439,   -48, -4439, 69477,   410, -4439, -4439,
   57525,  2151,   776,  3376,  3922, -4439,  4046, -4439,  4531,  1661,
    4394,  3445,   202,  4595, -4439, -4439,  4123, -4439,  4457,  4399,
     823, -4439,  4629, -4439,   359,  4629,   -48,  4293, -4439,   -48,
     -48, -4439,  3531,   410, -4439, -4439, -4439, 69477, 69477, -4439,
   -4439, -4439, -4439, -4439,  3902, -4439, -4439,  4296,  4010, -4439,
    4298, -4439, -4439,  4257, -4439, 16899, 16899,  4297, 69477,  4301,
   -4439,  4603,  4660,  3594,  1401, -4439,  2142, -4439, -4439, -4439,
    2173, -4439, -4439, -4439,  2209, -4439, -4439,  3911, -4439,  2212,
   -4439, -4439, -4439, 69477, -4439,  2223,  2227,  2830,  2830,  3561,
     877,  3926,  2244,   776,   776,   776,   776, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439,   920,  1382, -4439,  3381, 41813,  1078,
    4311, 69477, -4439, -4439, -4439, -4439,  4177, -4439, -4439, -4439,
   -4439, -4439,  4321, -4439,  4066, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439,    65, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439,  4671, -4439,  3931, -4439, -4439,  2104,
    4072, -4439, -4439,  4512, 69477, -4439, -4439, -4439,  4516, 16899,
    4206, -4439, 85878, -4439, -4439, -4439, -4439,  2133, -4439,   121,
    4681,  2133,  3967, -4439,  2104, -4439,  3960,  8437, -4439,  2261,
   -4439, -4439, -4439, 16899,  1245,  4540,  4432, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, 55284,  4343,  4520,  4701,  3195, 20754,   747,  4582,
   -4439, -4439, -4439, -4439,  4165, -4439, 69477, 20754, -4439, -4439,
    2385, 69477, 42560,  3970,  3980,  3670, -4439,  3031, 55284,   776,
   -4439,  1086, -4439, -4439,  4474,  4477, -4439, -4439, 16899,  3978,
   16899,  3990, -4439, -4439,  1944,  1944, -4439,  1121, -4439, -4439,
    1554,   603, -4439,  1554, 69477, -4439,  3898, -4439, -4439, -4439,
   -4439, -4439,  3740, -4439, -4439,  1584,  1554,  3974,  3991,  3992,
    3993, -4439,  4006,  2287, -4439,  4007,  4015,  2470,  3985, -4439,
   -4439,  3303,  2492,  1533,  2343,  4400,  4476, -4439,  4319, -4439,
    2514,  1616,  2536,  2540,  2548,  2574, -4439, -4439, -4439, -4439,
   -4439, -4439,  3989, -4439, -4439,  4700,  4365,  1554, -4439, -4439,
    1856,    79, -4439, 69477, -4439,  1863,  2390, -4439, -4439,  4027,
    4019,   776, -4439, -4439,  3519, -4439,  3519,  2927, -4439,  4643,
   -4439, -4439, -4439,  4644, -4439,   305,   305,  4718,   305, -4439,
    4719,  4720,   -66, -4439,   305, -4439, -4439,  4387,  4387, -4439,
    2394,  4164, -4439,  4138,  2438, -4439, 69477,  2448,  2587,   911,
   41813,  4416, -4439, -4439, -4439, -4439, -4439, -4439, 59019, -4439,
   -4439,  4629,  2491, -4439, -4439, -4439,  2495, -4439, -4439, -4439,
   -4439, -4439,   -48, -4439,  4026, -4439,   390, -4439, -4439, -4439,
   -4439, -4439,  3629,  3634,  3636,  2320,  2320, 16899, -4439, -4439,
   -4439, -4439,  4426,  4174, -4439, -4439, -4439, -4439, -4439, -4439,
    3445, -4439, 57525, -4439,  4781,  4777, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439,  4030, -4439, -4439, 16899, -4439, -4439,  1491,
   -4439,  4138, -4439, -4439, -4439, -4439,  1554,  4846,  4721, -4439,
   -4439,  4288,   776,  4657,  1229,  4430, -4439, -4439,  3106, -4439,
   69477, -4439, 69477, 69477, -4439,   776,  4035, -4439,  4047,   355,
   -4439, -4439, -4439,  2776,   383, -4439, -4439, -4439,  4585, -4439,
    4413, -4439,   357,  2503,  4304,  4338,  4057,  4056, -4439,  9766,
     776,   441, 69477, 16899,  4194, -4439, 16899, 90342, 90342, -4439,
   -4439, -4439, -4439,  4798, 69477, -4439,  2203, -4439, -4439, -4439,
    4586,  4680, 16899, 69477, -4439,  1554, -4439, 69477, 79182,  4067,
   16899, 16899,  1626, -4439, -4439,  4583,  4073,  9766, -4439, -4439,
   -4439, -4439,  2507, -4439, -4439,  1243, -4439,  4450, 55284, -4439,
    2900, -4439, -4439,  4578, 69477, -4439, -4439, -4439, -4439, -4439,
    4071, -4439, -4439,  3031,  4772, -4439, -4439, -4439,  1554, 69477,
    1554, 69477,  4653,  4653, -4439, -4439, 16899, -4439,  4828,  4079,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,  4478,
   -4439, -4439, -4439, 16899, -4439, -4439, 16899, -4439, -4439,  4510,
    4682, -4439, -4439, -4439, -4439, -4439, -4439,  4091,  3106, 16899,
    4808,  1445, -4439, -4439,  3303, -4439,  4094,  4278, -4439, -4439,
    1023, -4439, -4439,  3519, -4439, -4439, -4439, -4439,   305, -4439,
     305,   305, -4439, -4439,  4591,  4591,   355,  1453,  4008, -4439,
     383,  2522, -4439,   911,   440,   776,   202, -4439,   911, -4439,
   -4439, -4439, -4439, -4439,  4092, -4439, -4439,   359,   305,   359,
   -4439, 69477,  4541, -4439, -4439,  2636, -4439, -4439, -4439, -4439,
   -4439,  4103,  2651, -4439, -4439,  2532, -4439, -4439, -4439, -4439,
   -4439,  4232, -4439,  4197, -4439, -4439, -4439, -4439, -4439, 69477,
   69477,  4479,   398,   355, -4439, -4439,  2549,   398,   383, -4439,
   -4439,  4824, -4439, -4439,   911,   776,  1570, -4439, 69477,  3419,
   -4439, -4439, -4439, -4439,  4108,  4105, -4439, 69477,  4685,  1554,
   -4439,   385, -4439,  4727, 16899,  1554, 86622,  4115, 91086, 16899,
   -4439,    65,  4671, -4439, -4439, 78438, -4439, 16899, -4439,  4656,
    2028, -4439, -4439,  1062, -4439, 91830,  4634,  4596,  4118, -4439,
   91830,  1554,  1554, -4439, -4439, -4439, -4439,  3419, -4439,  4701,
   -4439,  4252, -4439,  4282,  3450,  4127,  4124,  4129,  4130,   210,
    4128,  4133, -4439,  4134, 69477,  4135, -4439,  2661, -4439, -4439,
   -4439,  4136,  4132, 16899, -4439, -4439, -4439, -4439,  2692, -4439,
   22296,  4140,  4764,   798, -4439, -4439, -4439, -4439, -4439, -4439,
   53043, -4439, -4439, -4439,  4142,  4334,   202,  4773,  4774,   202,
     202,   202,   202,  4147,  4008, -4439,  4755, -4439,  4110, 69477,
   -4439, -4439, -4439,  3106, -4439,   440, -4439, -4439, -4439,  2573,
   -4439,  1548,  4537, -4439, 16899, -4439, -4439,  4378, -4439, 90342,
     332, -4439, -4439,  4151,  4148,  2133, -4439, -4439, -4439, -4439,
   -4439,  3445,   398, -4439,  4297,  4445, -4439, -4439, -4439,   204,
     991,  4771,  4287, 16899, 90342, -4439,  4775,  4695,  1554,  4635,
    4157, -4439,  4155,  1554,  4806, 91830, 91830,  4163,  4187,  1554,
   69477, -4439, -4439, -4439, -4439, -4439, -4439,  -122, -4439, -4439,
   -4439,  4645, 91830,  4167,   224, -4439,  4284, -4439, 69477,  2465,
   71718,  5594, -4439, -4439,  4892, -4439,  4897, 68730, 68730, -4439,
   -4439, -4439, -4439, -4439,  3294,  3089,  4462, 16899,  4261,  4268,
   -4439, -4439,  4262,  4263,  2819, 69477,   202,  4414, -4439, -4439,
    4185, -4439, -4439,   336,   776,   202,   202,  3445,  3445,  3161,
   69477,  4401, -4439, -4439,   202, -4439, -4439, -4439, -4439, -4439,
   69477, -4439, -4439, -4439,   462, -4439,  2682, 16899,  4812, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439,  4904,  4576,  4906, -4439, 69477, -4439, -4439,
   -4439,  2067, -4439,  9766, -4439,  4587, -4439,  9766,  4492, -4439,
     414, -4439,  1554, 87366,  4923, -4439,  4404, -4439, -4439, 16899,
    4838, 61260, 88110,  4213, -4439, -4439, -4439, -4439,  4351,  4832,
    4216, -4439, 85878, -4439, -4439, 47814, 91830, 85878, -4439, -4439,
   16899, 16899,  4219, 74706,  3828,  4507,  4289,  2586, -4439,  9958,
   -4439, -4439, -4439,  4224,  2588, 16899,  1497, -4439,  4974,  1644,
    1675, -4439,  4846, -4439,   286, -4439, -4439, -4439,  4441,  2589,
    3114, -4439, -4439,  2602, -4439, 21525, -4439, -4439, -4439, -4439,
     776,   776, -4439, -4439, -4439, -4439, 60513,  2611, -4439, 60513,
   -4439,  1219,  1219,   748,  1554, 16899, -4439,  4612, -4439,  4613,
    4230,  4603,  3419, -4439,  3419,   992, 16899, -4439,  4845,  4425,
   -4439, 90342,  1554, 90342, -4439, -4439,  4787,  8535,  1969, -4439,
    4234, -4439,  4318, -4439, 69477, 77694,  4247,  4271, -4439, -4439,
   -4439, 79926,  1554,  1554, -4439,  2852, -4439, -4439,  2752,  4786,
    4258,   776, -4439, 71718,  4307,  3419, -4439, -4439,  4846, -4439,
    3089, -4439, -4439,  4323,  4535, -4439,  4336, -4439,  3161, -4439,
    4441,  4557, -4439,  4185, -4439,  2620, -4439,  3320, -4439, -4439,
    4008, -4439,  4401, -4439, -4439,  5017, -4439,   270,  4649,  4650,
   -4439, -4439,  4123,  1554, -4439, -4439, -4439,  4887, -4439,   245,
   -4439, -4439, 60513, -4439,  1554,  4977, 90342, 80670,  4878, 88854,
    4839, 69477,  3419,  4840,  4841, -4439,  4464, -4439,  2569,  4749,
   47814,  4751,  4752, -4439,  4992,  4250,  4772, -4439, -4439,  4875,
    1691, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   21525, -4439, -4439, -4439, -4439, -4439,  4440,  4917, -4439, -4439,
   -4439, 16899, 16899, -4439, -4439, 90342,  4475, -4439, 81414,  2593,
    4597,  4417, -4439, -4439,  4930,  2396, -4439, -4439, 85878, -4439,
   -4439, -4439, -4439, -4439, -4439,   305,  4825, -4439, -4439,  4354,
   -4439, -4439,  1219,  1219, -4439,  4605,  1554,  1554, -4439, 90342,
   90342, -4439, -4439, -4439, -4439, 49308, 16899, -4439, -4439, -4439,
   -4439,  1062, 85878, 82158, -4439, 85878, 85878, -4439,  4687,  4302,
     776, -4439, -4439, 90342, 82902, 89598, -4439, -4439, -4439, 26862,
   -4439, -4439, -4439,  4862, -4439,  1554, -4439, 83646, 84390, 85134,
    1089, 33593,  4561,  1784, -4439, 49308, -4439, -4439,  4776,  4782,
   -4439, -4439, -4439, -4439, 60513,  2644, -4439, -4439, 69477, -4439,
     776, -4439, -4439, -4439,  1784,  1784,  4686, -4439, -4439, -4439,
   -4439, -4439, 35089,  4292, -4439,   202, -4439, -4439,  4688, -4439,
    4698,   111, -4439, 69477, 20754,  4903,  4374, -4439, -4439, -4439,
   -4439
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1958,  2990,  1269,  2942,     0,     0,     0,     0,     0,     0,
    2944,  1794,   109,  2081,  2082,  1883,  1907,     7,     0,  1269,
     369,     0,     0,   122,     0,  1921,     0,  2135,     0,     0,
    1269,     0,  2129,     0,     0,  1269,  1963,  2114,   346,     0,
    2944,     0,  1327,     0,  1995,  2804,     0,     0,     0,  1978,
       0,  2801,     0,     0,     0,     0,     0,     0,     0,     0,
    2805,     0,     0,     0,     2,     8,    13,    42,     0,    80,
      62,    63,    70,    31,    41,    39,    38,    36,    40,    37,
      30,    96,    87,    66,    25,    15,    20,    17,    27,    16,
      19,    23,    24,    22,    26,    21,     0,    67,    99,  1231,
     100,    33,    84,    28,    29,    32,    77,   107,    83,    78,
      79,    92,  1300,  1298,  1828,  1299,  1310,  1317,  1959,    45,
      58,    49,    46,    48,    52,    51,    60,    61,    47,    59,
      56,    57,    50,    54,    55,    53,    72,    85,   104,     0,
      43,   101,    97,    44,    64,  2083,    65,    86,    81,    74,
     105,    75,    93,    95,    94,    76,   103,    98,    88,    18,
      69,    89,    68,    14,    35,    90,    91,    82,   106,    73,
     102,    71,    34,     0,  1102,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1905,     0,  1046,  2988,  2989,  2990,
    1271,  1270,     0,  2944,  2234,  1256,     0,  2322,  2321,  2324,
    2326,  2327,  2328,  2329,  2330,  2331,  2271,  2332,  2333,  2334,
    2335,  2336,  2337,  2272,  2338,  2339,  2340,  2341,  2342,  2343,
    2273,  2274,  2345,  2346,  2347,  2348,  2349,  2275,  2276,  2350,
    2351,  2352,  2353,  2354,  2355,  2356,  2357,  2358,  2359,  2278,
    2360,  2279,  2361,  2362,  2364,  2365,  2395,  2366,  2367,  2368,
    2369,  2370,  2371,  2280,  2372,  2373,  2374,  2375,  2376,  2377,
    2378,  2379,  2380,  2281,  2381,  2382,  2384,  2386,  2387,  2388,
    2389,  2390,  2282,  2391,  2392,  2393,  2394,  2283,  2396,  2398,
    2399,  2400,  2402,  2401,  2403,  2404,  2312,  2405,  2406,  2268,
    2408,  2409,  2410,  2411,  2412,  2413,  2414,  2313,  2415,  2416,
    2417,  2418,  2284,  2285,  2420,  2421,  2422,  2423,  2429,  2424,
    2425,  2426,  2703,  2428,  2286,  2430,  2287,  2434,  2433,  2435,
    2230,  2436,  2231,  2437,  2288,  2439,  2440,  2441,  2442,  2289,
    2444,  2445,  2446,  2447,  2448,  2449,  2450,  2290,  2451,  2452,
    2453,  2454,  2455,  2456,  2704,  2458,  2459,  2460,  2461,  2463,
    2464,  2466,  2468,  2469,  2470,  2471,  2473,  2474,  2475,  2484,
    2476,  2477,  2478,  2480,  2479,  2481,  2482,  2483,  2485,  2465,
    2487,  2488,  2489,  2490,  2491,  2492,  2493,  2494,  2495,  2496,
    2497,  2498,  2499,  2500,  2501,  2502,  2503,  2504,  2505,  2506,
    2507,  2508,  2509,  2510,  2511,  2512,  2513,  2515,  2516,  2517,
    2518,  2314,  2291,  2520,  2522,  2523,  2524,  2527,  2528,  2529,
    2531,  2535,  2536,  2537,  2538,  2539,  2541,  2540,  2542,  2544,
    2546,  2547,  2545,  2548,  2549,  2550,  2292,  2293,  2552,  2553,
    2554,  2315,  2556,  2558,  2557,  2316,  2559,  2560,  2561,  2563,
    2564,  2565,  2566,  2567,  2569,  2570,  2571,  2572,  2573,  2317,
    2574,  2575,  2294,  2576,  2318,  2577,  2579,  2578,  2580,  2582,
    2583,  2581,  2295,  2584,  2586,  2587,  2589,  2590,  2592,  2296,
    2594,  2595,  2596,  2598,  2597,  2599,  2297,  2600,  2601,  2606,
    2607,  2608,  2609,  2707,  2610,  2611,  2270,  2298,  2612,  2299,
    2614,  2615,  2616,  2617,  2618,  2619,  2620,  2621,  2622,  2623,
    2624,  2625,  2627,  2628,  2300,  2629,  2630,  2631,  2632,  2301,
    2633,  2634,  2635,  2636,  2637,  2638,  2639,  2320,  2640,  2641,
    2642,  2643,  2644,  2645,  2646,  2647,  2648,  2649,  2650,  2655,
    2653,  2654,  2656,  2657,  2658,  2302,  2659,  2660,  2662,  2663,
    2664,  2665,  2303,  2304,  2666,  2667,  2668,  2669,  2670,  2671,
    2672,  2673,  2675,  2677,  2678,  2679,  2680,  2681,  2682,  2683,
    2684,  2305,  2685,  2686,  2687,  2705,  2593,  2325,  2443,  2676,
    2363,  2613,  2457,  2519,  2706,  2431,  2344,  2277,  2407,  2419,
    2521,  2534,  2551,  2585,  2652,  2661,  2514,  2532,  2543,  2432,
    2591,  2626,  2651,  2319,  2674,  2472,  2427,  2269,  2383,  2385,
    2533,  2568,  2323,  2438,  2530,  2604,  2602,  2603,  2605,  2588,
    2526,  2397,  2525,  2467,  2562,  2462,  2486,  2555,  2306,  2691,
    2692,  2694,  2693,  2688,  2689,  2308,  2690,  2307,  2695,   286,
    2241,   268,  2242,  2264,  2265,  2266,  2263,  2267,     0,     0,
    2793,  2792,     0,     0,  2945,  2946,   709,     0,     0,     0,
       0,     0,     0,  1908,     0,   989,   709,   709,     0,     0,
    2990,     0,     0,  1905,  1905,  1905,     0,     0,  1905,  1905,
       0,     0,  1905,     0,  1905,  1905,  1905,     0,     0,  2307,
     114,  2089,   370,   371,     0,  2841,  2854,  2855,  2851,  2856,
    2874,  2857,  2861,     0,  2853,  2922,  2255,     0,  2860,     0,
    2922,  2858,     0,  2922,     0,  2859,  2864,  2875,  2922,  2852,
    2243,  2254,  2253,  2922,  2697,  2696,  2244,  2698,     0,  2843,
       0,  2226,     0,     0,  1923,  1924,  1922,  1187,     0,     0,
    2136,  2137,     0,  2140,     0,  2141,  2144,     0,  2789,     0,
       0,     0,     0,     0,  1273,     0,  1926,  1964,  1927,  1925,
    1905,     0,   336,   345,   347,   348,   344,  2841,     0,     0,
    2946,  2957,  2972,  2967,  2966,  2969,  2970,  2971,  1332,  2968,
    2965,     0,  1328,  1330,  1331,   926,     0,     0,  2738,  2741,
    2509,  2542,  2742,  2657,  2739,  2593,  2740,  2319,     0,     0,
    2248,  2765,  2700,  2701,  2702,  2699,  2249,  2708,     0,  2732,
       0,  2058,   348,  1199,  1225,  1209,  1200,  1225,  1979,     0,
       0,     0,  2803,     0,  2138,     0,  1805,  1808,  1810,  3050,
       0,     0,     0,  3045,     0,  3051,     0,  2324,  2271,  2336,
       0,  2203,     0,     0,     0,  1678,     0,  2275,     0,  2354,
    2356,     0,     0,  1358,  1358,   875,     0,     0,     0,  2379,
    2380,  2209,     0,     0,     0,  2200,  2210,  2420,  2424,  2426,
       0,  2202,  2435,     0,     0,     0,     0,  2455,  2207,     0,
       0,  2497,  2499,     0,     0,  2503,  2504,  2505,  2506,  2186,
    1417,   875,  2199,  2206,  2192,  2548,  2549,     0,  2559,     0,
       0,  2592,     0,     0,  2597,  2606,     0,     0,  2636,     0,
       0,   875,  2185,  2655,  2653,  2654,  2656,     0,  2201,  2302,
    2208,     0,  2669,  1358,   875,   875,     0,     0,     0,  2679,
    2680,  2687,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1460,  1461,     0,     0,
       0,     0,     0,  1416,     0,  1499,  2964,     0,     0,  1409,
    1428,  1429,  1431,  1535,  1430,  1436,  1556,  1437,  1557,  1435,
    2196,  1434,  1433,  2197,  2198,  1427,  2221,  2241,  2220,  1443,
    2962,     0,     0,     0,     0,     0,  2963,     0,     0,     0,
       0,     0,     0,     0,     1,    10,     0,     0,  1358,  2252,
    2669,     0,  2251,  2250,  2256,  2258,  2899,  2920,  2926,     0,
    1201,  1217,     0,  1302,     0,  2959,  1837,  1829,     0,  2959,
    1837,  1333,  1828,  1333,  1970,  1963,  2085,  2420,  1958,  2086,
    2226,     0,  1038,  1103,     0,  1042,     0,     0,  2806,     0,
    1040,     0,  2052,  1110,     0,     0,  1067,     0,     0,  2995,
    1044,     0,  2943,     0,  1283,  1294,  1667,   285,     0,   124,
     126,  1239,  1901,  1258,     0,  2949,     0,     0,     0,     0,
    1795,     0,     0,     0,   564,     0,     0,     0,     0,     0,
     206,  2973,  2973,  2990,   709,     0,  1350,  1882,  1349,  1353,
    1370,  1375,  1392,  1351,  2220,     0,     0,     0,     0,     0,
       0,     0,     0,  1909,     0,     0,     0,     0,     0,     0,
    1905,   116,   117,     0,     0,  2842,  2834,  2872,  2871,  2876,
       0,  2873,  2869,  2877,  2878,  2862,     0,  2848,  2866,     0,
    2850,  2868,  2867,  2847,  2863,  2870,  2849,     0,  2845,  2837,
       0,     0,  1792,  2811,     0,     0,   123,     0,  1188,  1927,
       0,  3064,  3061,  2134,     0,  2145,  2146,  2142,     0,     0,
       0,     0,  2051,  2050,     0,  2130,  2958,  1275,     0,     0,
       0,  1928,     0,     0,  2116,  2123,  2121,  2115,  2118,   337,
       0,     0,   367,  2828,     0,     0,  2837,  2952,  2949,  1320,
    1329,   925,     0,     0,   928,  2764,  1944,  1945,   937,     0,
     927,     0,     0,     0,     0,     0,  2710,  2774,  2771,  2770,
    2723,  2718,  2717,  2260,  2895,  2716,     0,  2751,     0,   932,
     934,   933,  2761,   931,     0,     0,  2657,  2711,  2732,     0,
       0,  2709,     0,     0,   926,  2070,     0,     0,  2070,     0,
    1837,  2054,  2059,  2057,     0,  2744,  2029,  2745,  2050,     0,
    2003,  2028,     0,  1980,  2019,     0,  2746,     0,  2053,     0,
    1837,     0,     0,  2070,  1996,     0,     0,     0,     0,     0,
       0,   343,  1230,  1229,  1205,  1226,  1227,     0,     0,  1208,
    1210,  1211,  1203,  1976,  3062,  3063,  2802,  1806,     0,     0,
       0,  2191,  2190,  2235,  3047,  2189,  3055,  3057,  3041,     0,
    3044,  3043,  3052,     0,     0,  1798,  1450,  1798,  1798,  1798,
    1679,     0,     0,     0,     0,     0,     0,     0,  1798,     0,
    1493,  1466,     0,  1494,     0,     0,     0,  2211,     0,     0,
       0,  1447,     0,     0,  1667,     0,  1643,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1674,  1676,  2220,  1798,
       0,     0,  1798,     0,     0,     0,     0,     0,   922,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1798,  1798,     0,     0,  1798,  1507,  2213,     0,     0,     0,
    2212,     0,     0,     0,  2205,  2204,  2187,     0,  1510,  1512,
    1511,     0,  1798,  1798,     0,     0,     0,  1798,  1798,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1440,  1439,  1441,     0,  2964,     0,  2747,  1639,  1641,
       0,     0,     3,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1442,     0,     0,  2188,     0,     0,
    1551,     0,     0,   650,     4,     6,     0,     0,     0,  1301,
    1316,  1315,    11,   108,  2259,     0,     0,     0,     0,     0,
       0,     0,  2917,     0,     0,  1085,     0,     0,     0,     0,
       0,  1237,     0,  1233,  1232,     0,  1206,  1219,  2391,     0,
       0,  1881,  1875,  1878,  1877,     0,  2961,  2960,     0,  1333,
    1838,  1846,  1847,  1845,  1839,  1840,  1844,  1843,     0,  1333,
       0,     0,  1307,  1334,  1336,  1837,  1309,  1837,  1333,  1974,
    1973,  1972,     0,  1970,  1187,     0,     0,  2075,  2076,  2077,
    2078,  2079,  2074,  2073,  2087,  2088,  2993,  2994,  2992,   939,
    2991,   269,  2808,     0,     0,   269,     0,     0,  1946,  1946,
       0,  1946,  1946,   630,     0,   629,   715,   584,   586,   587,
     588,   589,   590,   591,     0,  1185,  1946,  1185,     0,  1946,
    1946,  1185,  1946,     0,     0,  1946,  1946,  1946,  1946,     0,
       0,   940,  1946,     0,     0,  1185,     0,  1946,     0,  1169,
       0,     0,  1946,  1946,  1946,  1946,  1946,  1185,     0,     0,
    1946,  1946,     0,  1195,     0,     0,  1946,  1946,  1946,  1946,
       0,  1946,  1946,     0,  1946,     0,     0,  1946,  1132,  1133,
       0,     0,     0,  1143,   711,   738,   739,     0,  1036,  1037,
    1104,  1106,  1173,  1112,  1111,  1140,  1145,  1171,  1172,     0,
    1906,  3076,  1048,     0,     0,  1047,  2995,  1253,     0,     0,
     982,   981,     0,     0,  1294,  1285,  1672,     0,  1668,  1669,
     267,     0,     0,  1241,  1240,     0,  1238,  1266,  1265,  1263,
       0,  1264,  1262,  1257,  1259,  1260,  2948,     0,     0,  2950,
    2954,  1415,  1414,     0,   204,     0,     0,     0,     0,     0,
     709,     0,   566,     0,  2907,  2918,   219,   202,     0,  1013,
    2995,  2995,  2973,     0,  1363,     0,  1413,  1412,     0,  1411,
    1410,  2240,     0,  1352,     0,     0,  1357,  1356,  1418,  1419,
    1420,  1421,     0,  1422,  1423,  1424,     0,     0,     0,     0,
       0,     0,  1394,     0,     0,  1886,  1893,  1888,     0,  1909,
    1890,  1898,  1905,  1913,  1914,  1895,   715,  1911,  1894,   592,
    2893,  1891,  1189,  1900,  3089,     0,     0,   115,     0,     0,
       0,     0,  2106,  2108,  2111,  2107,     0,  2110,     0,  2109,
    2090,  2093,  2099,  2112,     0,     0,   368,   372,   374,     0,
     377,     0,  2865,  2924,     0,     0,  2846,  2839,  2840,  2838,
       0,  2879,  2844,  1793,     0,  2810,  2417,  2517,     0,  1800,
    2227,  3066,     0,     0,     0,     0,  2143,     0,  2791,  1792,
    2790,  2794,  1268,     0,   111,   112,     0,     0,     0,  1274,
    1278,     0,  1243,  1708,  2120,  2127,  2125,     0,   335,   360,
     355,   363,   357,   359,   358,   364,   365,   366,   361,   356,
     362,   349,     0,     0,     0,     0,  2826,     0,  2953,     0,
    2955,     0,  1800,  1321,  1320,     0,     0,     0,  2767,     0,
    2763,  2762,     0,  1064,  2237,  1064,     0,  2776,  2777,     0,
    2768,     0,  2769,     0,  2722,     0,     0,  2725,     0,     0,
       0,     0,     0,     0,     0,  2766,  2731,  2730,     0,  2733,
    2734,     0,  2737,  2785,  2786,  2783,  2784,  2787,  2788,  2782,
    2758,  2066,     0,     0,  2072,  2027,     0,   709,     0,     0,
       0,     0,     0,     0,     0,  1997,     0,     0,  2018,  2064,
    2065,  2070,     0,  2063,     0,  2070,     0,  2035,  2054,     0,
    2070,  1992,     0,     0,  1984,  1989,  1985,     0,  1991,  1990,
    1993,  1981,  1982,  2066,  2008,   196,     0,  2054,  2017,  2023,
    2024,  2026,  2007,  2014,  2022,  2054,   987,   986,   985,     0,
       0,  2054,  2070,  2070,     0,  1214,  1215,     0,     0,  1204,
     196,     0,  1975,  1807,     0,  1812,     0,     0,     0,  3042,
    3058,  3040,  3046,  3053,  3054,  3039,     0,     0,  1799,  1798,
       0,     0,     0,     0,     0,     0,  1680,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1359,     0,   876,  1517,
       0,     0,     0,     0,     0,  1768,  1769,  1770,  1771,  1779,
    1772,  1773,  1774,  1781,  1786,  1775,  1776,  1782,  1783,  1784,
    1777,  1785,  1780,  1778,  1787,     0,  1767,     0,     0,  1791,
    1788,  1790,  1789,     0,  1644,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1798,     0,     0,
       0,  1798,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1527,     0,     0,
       0,     0,     0,  1798,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1489,     0,  2223,  2222,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1590,
       0,  1590,     0,     0,     0,     0,     0,  1444,     0,     0,
       0,     0,     0,     0,     0,  1406,  1407,  1397,  1398,  1395,
    1396,     0,  1400,     0,  1399,  1403,  1404,  1405,  1408,  1432,
    1438,  1458,  1459,  1353,     0,  1552,  1553,  2224,     0,   651,
       0,     0,   654,     0,     0,  1946,     0,    12,     9,  1093,
       0,     0,  2257,     0,     0,     0,     0,     0,     0,  2930,
    2928,     0,  2929,  2927,  2884,  2899,  2921,     0,  1068,     0,
       0,     0,     0,     0,     0,     0,     0,   196,     0,  1221,
    2236,  1880,   929,  1876,     0,  1833,  1830,  1832,  1313,  1311,
    1303,     0,     0,  1314,  1312,  1305,  1341,  1340,  1343,     0,
    1335,  1333,  1333,  1308,     0,     0,  1903,  1968,  1971,     0,
    2084,     0,   939,   704,   707,   706,   708,     0,  1043,     0,
       0,     0,  1041,     0,     0,   582,  1947,     0,     0,   582,
       0,     0,     0,   716,  2052,  1946,  1186,  1030,   983,  1269,
     983,  1149,     0,  1030,     0,     0,     0,     0,     0,  1269,
       0,     0,     0,     0,     0,  1269,     0,     0,     0,     0,
       0,  1946,     0,  1157,     0,  1114,     0,     0,     0,     0,
       0,     0,  1158,     0,     0,     0,  1115,  1946,     0,     0,
       0,     0,     0,     0,  1269,     0,     0,     0,  1269,  1198,
       0,  1197,  1196,     0,     0,  1269,  1269,     0,     0,     0,
       0,   744,   745,     0,     0,     0,     0,  1136,  1137,     0,
       0,     0,     0,   712,  1946,  1946,     0,  1108,  1105,   939,
     939,     0,  1946,  3084,  1094,     0,     0,  1045,     0,     0,
    1250,  1287,  1281,  1286,  1284,  1294,     0,  1758,     0,     0,
    1671,   287,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     196,   156,   185,     0,     0,     0,     0,     0,     0,     0,
     196,   128,  1902,  1267,  1261,  2947,  2951,   710,   939,     0,
       0,     0,     0,     0,     0,   565,     0,   568,     0,     0,
       0,     0,  2926,  1946,     0,     0,     0,  1014,     0,   709,
       0,     0,     0,  2987,  2975,  2982,  2983,  2986,  2985,  2984,
     271,     0,  2981,  2974,  2977,  2978,  2980,  2979,  2995,   939,
    1348,  1355,  1354,  1361,  1360,  1362,  1366,  1371,  1364,  1368,
       0,  1425,  2331,  1373,     0,     0,     0,  1376,  1386,  1390,
       0,  1393,     0,     0,     0,     0,     0,  2216,  2224,     0,
    1174,  1897,     0,  2052,  1896,   593,   594,   596,     0,  1191,
    1190,  1892,  3090,  1889,  1189,     0,   118,   120,  2104,  2101,
    2100,  2102,   196,  2103,     0,  2113,  2091,  2379,  2655,  2656,
     381,     0,   353,   352,   354,   378,     0,     0,  2837,  2923,
       0,     0,  2888,  2891,     0,     0,     0,  2832,  1797,  2821,
    2817,  2822,  2824,  2820,  2823,  2825,  2818,  2819,  1800,     0,
    1837,  1801,  1708,  3060,  3065,  1289,  1290,  1294,     0,     0,
       0,   113,     0,     0,  2131,     0,  1276,     0,     0,  1248,
    1247,  1249,  1242,  1244,  1245,     0,     0,  1709,     0,  2124,
    2126,   196,  2117,     0,     0,     0,  2837,     0,     0,  2956,
    1323,     0,     0,     0,     0,  1322,  1324,  1325,  1685,  1684,
    1715,  1712,  1711,  1714,  1713,  1716,  1708,  1792,  1819,  1800,
       0,     0,     0,   936,   938,   935,     0,     0,     0,  2897,
    2897,     0,     0,  2781,  2773,  2775,  2772,  2724,  2261,  2896,
       0,  2754,  2755,  2756,  2752,  2753,     0,  2759,  2757,     0,
    2736,     0,  2068,  2071,  1802,     0,     0,  2045,  2039,  2038,
    2033,  2040,  2046,  2034,  2049,  2048,  2047,  2005,  2004,  2000,
    2055,  2044,  2042,  2030,  2070,  2043,  2041,  1986,  1987,  1988,
       0,  1837,     0,  2068,     0,  2036,  2037,  2070,  2070,     0,
       0,  2070,  2021,  2025,  1228,  1213,  1212,  1202,  1977,  1811,
       0,  1809,  3048,  3056,     0,     0,  1513,     0,  1601,  1651,
    1601,  1601,  1601,     0,     0,     0,     0,     0,  1514,     0,
    1464,  1515,  1516,     0,     0,     0,  1601,     0,   877,     0,
       0,  1467,  1468,  1455,     0,     0,  1536,     0,  1647,  1469,
       0,     0,     0,     0,     0,  1537,  1675,     0,  1677,  2224,
       0,  1601,  1521,  1474,     0,  1601,     0,  1475,  1538,  1539,
    1540,     0,  1542,     0,  1523,     0,     0,  1526,     0,     0,
    1477,  1601,  1601,     0,     0,     0,     0,  1601,  1479,     0,
       0,     0,  1478,     0,     0,     0,     0,     0,     0,     0,
    1481,     0,  1456,  1601,  1601,  1529,     0,     0,  1531,     0,
    1490,  1798,  1601,  1638,     0,  1582,  1581,  1595,     0,     0,
    1595,     0,     0,     0,  1583,  1580,  1579,     0,  2748,  2749,
    2750,  1032,  1640,  1448,     0,     0,  1555,  1543,     0,  1667,
       0,     0,     0,     0,     0,     0,     0,   656,     0,   652,
       0,     0,     0,  1060,  1064,     0,  1061,  1062,  1063,  2900,
    2237,     0,  2897,  2913,  2887,  2886,  2885,  2882,     0,     0,
       0,     0,     0,  1086,  1088,     0,     0,  1057,  1069,  1070,
     192,  2232,  1864,  1865,  1863,  1861,  1862,   193,   194,  1854,
    1855,  1851,  1852,  1850,  1853,   195,  1236,  1235,  1234,  1218,
    1207,     0,     0,  1223,     0,  2151,  1874,  1835,  1836,  2218,
    1834,     0,  1842,  1841,     0,     0,     0,  1346,  1343,  1337,
    1344,     0,  1304,  1306,     0,  1792,  2226,     0,     0,     0,
    2228,     0,  1872,  1873,  1857,  1858,  1856,  1859,  2080,  1860,
    1871,   705,  1946,     0,     0,     0,     0,     0,     0,     0,
     270,   279,     0,  2807,     0,   608,     0,     0,     0,     0,
       0,     0,     0,     0,   224,   615,  1051,   715,  1867,  1869,
    1866,  1868,   620,   632,  1870,   633,   631,  1052,   619,   621,
    1053,   585,     0,   784,  1031,   984,  1030,  1116,  1030,     0,
       0,     0,   983,   787,  1030,     0,  1010,  1031,   783,     0,
    1180,  1179,  1181,   785,     0,     0,     0,   727,   722,     0,
     733,  1138,  1258,  1139,  1765,     0,   724,   725,   726,   746,
       0,     0,   735,     0,  1156,     0,  1119,  1154,  1155,  1189,
     717,     0,     0,     0,   763,   764,   762,   740,   747,  1183,
    1182,  1184,   720,   721,     0,     0,  1170,  1826,  1833,   752,
     728,   751,   723,     0,     0,     0,  1164,  1127,     0,   761,
     759,   756,   758,   757,   760,   736,   729,   730,   732,   731,
     743,   734,  1126,  2112,   718,   719,   749,   750,   748,     0,
       0,  1109,  1185,  1185,  1144,  1141,  1142,  1107,  1113,  1146,
     616,   617,   592,     0,  1946,  3086,     0,  1096,  1098,  2996,
    2997,  1810,     0,     0,     0,  1761,     0,  1762,  1759,  1760,
       0,  1673,  1670,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   125,     0,     0,     0,     0,     0,     0,     0,     0,
     127,   205,   939,     0,   597,     0,     0,     0,   214,     0,
    1946,  1946,  1946,  1946,   209,   715,   570,   572,   573,   574,
     575,   576,   579,   577,   580,   578,   581,   592,     0,     0,
       0,  2919,  1085,     0,  1019,  1021,  1020,  1016,  1015,     0,
       0,     0,     0,   268,  3019,     0,  3029,  3030,  3021,  3018,
     459,  3027,  2976,     0,  2150,     0,  2149,   783,   199,   635,
     637,   640,   638,   715,   713,  1938,  1939,   642,     0,  1367,
    1372,  1365,  1369,  1374,     0,     0,     0,  1385,     0,     0,
       0,  1377,  1388,  1391,     0,  1887,  1885,  1176,  1175,  1899,
    1912,  2052,  2894,  1884,   121,     0,  2105,  2098,  2094,     0,
     373,   382,   375,   379,   380,   376,     0,  2925,  2933,     0,
       0,     0,     0,  1837,     0,  2812,     0,     0,  1294,  1296,
    2147,     0,  2797,  2798,  2796,  2795,  2133,  2132,     0,  1279,
    1280,  1246,     0,     0,  1941,  1940,     0,  1918,  1920,  1929,
    1932,     0,  2128,  2122,     0,   350,     0,     0,  2831,     0,
       0,  1792,     0,  1685,  1715,  1712,  1711,  1714,     0,     0,
       0,     0,  1698,  1706,  1704,  1706,  1701,     0,     0,     0,
    1792,  1810,     0,  1803,  1819,  2721,  2720,  2719,  1064,  1064,
    1065,     0,  2713,  2712,  2779,  2778,  2780,  2727,   715,  2726,
       0,  2735,  2067,     0,  2009,     0,  2032,     0,  2002,     0,
    2020,  1983,  2011,     0,  2001,  1999,  2054,  2054,  1998,  1813,
       0,  3059,     0,     0,  1601,  1558,  1602,  1560,  1561,  1564,
       0,  1681,     0,  1452,   889,   889,   873,  1660,   869,   860,
     867,  1655,  1664,     0,   844,   858,  1656,   873,  1658,   889,
    1665,  1462,     0,     0,     0,  1601,  1566,  1601,     0,     0,
       0,     0,     0,     0,  1645,     0,     0,     0,  1457,     0,
    1547,  1601,  1570,  1601,  1568,     0,     0,     0,     0,     0,
       0,     0,  1574,  1572,     0,     0,     0,     0,  1601,  1576,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1573,  1575,     0,     0,     0,     0,     0,  1562,  1609,
    1603,  1604,  1605,  1606,     0,     0,     0,  1593,  1593,  1595,
       0,  1595,     0,  1584,  1445,     0,  1642,  1402,  1401,  1554,
       0,  2225,     5,     0,     0,     0,     0,   655,     0,   665,
       0,     0,     0,     0,  3067,  1272,  2897,  1064,     0,  2897,
    2910,     0,     0,  2883,  1091,  1089,  1090,  1092,  1087,  1073,
    1072,  1074,     0,     0,     0,  1071,  1220,     0,     0,  1216,
     930,     0,  2159,  1831,  1347,  1342,  1345,  1338,  1339,     0,
    1708,     0,  1800,  1904,  1969,  1968,     0,     0,   273,   276,
     274,     0,   275,     0,     0,     0,   618,  1050,   715,   610,
     612,   613,   614,   228,   227,   229,   230,   232,   231,   226,
    1056,     0,   627,     0,     0,     0,     0,     0,  1030,   979,
     980,   786,     0,   781,   788,     0,     0,     0,     0,     0,
     769,   771,   772,     0,   857,   809,   800,   889,   803,   802,
     947,   873,   815,   863,     0,   866,   862,   837,   836,   853,
     835,   840,   823,   947,   947,   822,   856,   947,   841,   839,
     843,     0,   844,   864,   865,   849,   838,   842,   834,     0,
     855,   889,   873,   873,   819,   854,   947,     0,   847,   889,
     947,   774,   893,   821,   954,   811,     0,   889,   891,   869,
    1163,  1018,  1017,  1162,     0,     0,  1122,     0,  1123,     0,
    1125,   937,   937,   741,  1130,  1153,  1152,     0,  1131,   742,
    1192,  1121,     0,  1827,  1120,     0,     0,     0,  1243,     0,
     754,   753,  1055,  3080,  3077,  3078,     0,  3088,  3087,  3089,
       0,     0,     0,   238,  2998,     0,     0,  1293,  1295,     0,
    1282,   186,   183,   160,   164,   166,   158,   162,   163,   165,
     169,   170,   168,   171,   172,   175,   176,   173,   167,   174,
     161,   179,   177,   178,   159,   181,   182,   191,   184,   190,
     157,     0,   130,   131,     0,   132,   133,     0,   134,   135,
       0,   136,   129,     0,  1946,  1946,   208,   715,   599,   601,
     602,   603,   604,   607,   605,   606,   214,     0,     0,   213,
       0,     0,     0,     0,     0,  2052,   210,     0,  2901,  2903,
     220,  1068,  3074,  3075,  3076,     0,     0,   233,  3013,     0,
    3024,   560,   559,     0,   281,   280,   272,     0,   459,   515,
    2353,   442,   437,   474,   448,     0,     0,  2529,   444,     0,
    3023,   423,   420,   421,     0,   424,   422,   416,   417,   415,
    1958,   425,   426,   427,   428,   429,   418,   419,   286,   432,
       0,  2247,  2310,  2309,  2311,  3031,   641,   200,     0,     0,
     636,   634,   939,   639,  1383,  1378,     0,  1387,     0,     0,
       0,     0,  2217,  1178,  1177,   595,   119,  2096,     0,  2092,
       0,     0,     0,     0,  2836,  2890,  2889,  2892,  2931,  2880,
    2813,  1954,  1953,     0,  1952,     0,  1955,  1955,  1291,  1294,
    1296,     0,  1292,     0,  2148,  2799,  2800,  1277,     0,  1764,
    1919,  1961,     0,     0,     0,  1936,  2215,  2214,  2222,  1949,
    1937,  1943,     0,     0,     0,  2827,     0,  1810,     0,  1723,
    1717,  1719,  1720,  1722,     0,     0,  1685,  1684,  1326,  1700,
    1699,  1707,     0,  1705,  1706,  1706,     0,     0,  1694,  1693,
       0,  1755,  1724,     0,     0,  1814,  1803,  2897,  2897,     0,
       0,  2760,  2069,  1837,  2016,  2015,  2031,  1994,  1837,   197,
    1800,  2070,  3049,     0,  1491,  1559,  1682,     0,     0,   890,
    1652,   947,     0,  1662,     0,  1663,   871,   870,   861,   859,
    1666,   868,   845,  1657,  1661,  1659,  1654,  1463,     0,  1465,
    1454,  1453,  1567,  1565,     0,     0,  1497,  1519,     0,  1498,
       0,     0,     0,     0,     0,  1471,     0,  1473,     0,     0,
    1549,  1571,  1569,  1522,  1541,  1500,  1524,     0,  1476,  1446,
       0,  1501,     0,  1506,  1504,     0,  1577,  1480,     0,     0,
    1487,     0,  1485,     0,  1486,     0,  1488,  1528,  1530,     0,
       0,     0,     0,  1601,  1610,     0,  1611,  1597,  1596,  1587,
       0,  1592,  1591,     0,  1588,     0,  1598,  1033,  1544,     0,
     661,   648,     0,   646,   650,     0,   643,     0,     0,   659,
       0,  1059,  2897,  2897,     0,  2911,  2239,  2238,  2897,     0,
    2897,  1077,     0,  1076,  1082,  1079,  1078,     0,  1222,     0,
       0,     0,     0,     0,  2152,  2154,     0,  2165,  1800,  1800,
    2227,  1966,     0,  2229,  1800,   755,   278,   277,   283,   284,
    2809,  2052,   225,     0,  1118,     0,     0,   667,     0,     0,
       0,   789,     0,     0,  1028,     0,  1027,  1833,  1011,  1012,
    1148,   783,   774,   808,   801,   820,   941,   952,   950,   944,
     846,   947,     0,   948,   949,   805,   818,     0,   829,     0,
     824,   947,   833,   828,   845,   848,   850,   852,     0,   947,
     817,   816,   826,   813,   878,   830,     0,  1192,   775,   903,
       0,     0,     0,     0,  1414,   897,     0,   959,     0,     0,
     906,     0,     0,     0,   914,   790,   894,   896,   792,     0,
       0,   955,   954,   807,   947,   954,   878,     0,   892,   878,
     878,  1161,     0,  1192,  1766,  1168,  1167,     0,     0,  1194,
    1151,  1825,  1166,  1165,     0,  1124,   737,     0,     0,  3082,
       0,  3085,  1066,     0,   248,     0,     0,  1095,     0,   241,
     239,   250,     0,  1255,  1251,  1763,     0,   187,   189,   137,
       0,   139,   141,   146,     0,   148,  2262,     0,   151,     0,
     153,  2233,   155,     0,   142,     0,     0,     0,     0,  2052,
     212,     0,     0,     0,     0,     0,     0,   567,   626,   622,
     628,   625,   571,  2902,     0,     0,   207,  3084,     0,     0,
       0,   288,   767,   768,   766,   765,     0,  3025,  3020,   563,
     561,   562,     0,   282,   488,   457,   461,  3022,   404,   402,
     403,   409,     0,   410,   411,   412,   413,   414,   405,   486,
     487,   408,   406,   407,     0,  2246,     0,   551,   473,     0,
     439,   438,   476,     0,     0,   450,   466,   465,   467,   446,
       0,   532,   459,   530,   435,   460,   513,     0,   430,     0,
       0,     0,  3035,  3028,  3032,  3033,     0,   939,   714,     0,
    1382,  1384,  1380,     0,  1389,     0,     0,   390,   385,   393,
     387,   389,   388,   394,   395,   396,   397,   391,   386,   392,
     384,   383,     0,     0,     0,  2940,  1800,     0,  1955,     0,
    1915,  1917,  1288,  1297,     0,  1710,     0,     0,  1930,  1933,
       0,     0,     0,     0,  1950,     0,   351,  2830,     0,     0,
    1725,  1326,  1686,  1702,     0,     0,  1695,  1703,     0,     0,
       0,     0,  1749,  1750,     0,     0,  1753,  1756,  1757,  1721,
    2219,  1823,  1822,  1804,     0,  1319,  1814,  2715,  2714,  2898,
    2728,  2010,   196,  2013,  2006,     0,  1683,     0,     0,     0,
       0,  1653,     0,     0,  1451,     0,     0,     0,  1648,  1650,
    1646,  1601,     0,     0,     0,     0,     0,  1449,     0,  1545,
       0,     0,     0,     0,     0,     0,  1484,  1482,  1483,   956,
    1533,  1532,     0,  1563,  1607,     0,  1613,  1594,  1586,  1585,
       0,  1595,   649,     0,   647,     0,     0,   645,   653,     0,
     660,     0,  1058,  2908,  2897,  2914,  2897,     0,  2915,     0,
    1083,  1084,  1081,     0,  1224,     0,     0,     0,     0,  2153,
       0,     0,  2160,  2162,     0,  1879,  1967,  1828,  1828,   611,
       0,   670,  1117,     0,     0,   782,     0,     0,     0,  1001,
       0,     0,  1024,   770,   773,   943,   942,   946,     0,   945,
     804,   954,     0,  1034,   825,   851,     0,   827,   882,   883,
     884,   814,   879,   881,   961,  1147,   909,   916,   918,   917,
     910,   908,     0,     0,     0,     0,     0,     0,   923,   900,
     924,  2193,     0,     0,   919,   920,   921,   911,   907,   912,
       0,   913,     0,   895,     0,     0,   905,   898,   899,   806,
     810,   812,   797,     0,   798,   799,     0,  1159,  1150,  1134,
    1193,     0,  3081,  3079,  3083,   249,   237,     0,     0,  1097,
    1099,     0,     0,  1100,     0,     0,  1254,   180,     0,   138,
       0,   147,     0,     0,   152,     0,     0,   143,     0,   990,
     624,   623,   600,     0,   996,   215,   216,   218,     0,  2904,
       0,  2905,  3086,     0,     0,     0,     0,   289,   291,     0,
       0,   298,     0,     0,     0,   479,     0,   459,   459,   522,
     464,   519,   518,   505,   557,   306,     0,   440,   436,   475,
       0,     0,     0,   539,   445,   447,  2245,     0,   459,     0,
       0,     0,   286,   433,   511,     0,     0,     0,  3034,   201,
     198,  1379,     0,  2097,  2095,  2931,  2934,     0,     0,  2833,
    1837,  1951,  1916,     0,     0,  1960,  1962,  1931,  1934,  1935,
    2224,  1948,  1942,  2829,     0,  1718,  1697,  1696,  1689,     0,
    1691,     0,  1745,  1745,  1754,  1824,     0,  1820,     0,  1815,
    1816,  1318,  2012,  1492,   887,   885,   888,   886,   874,     0,
    1495,  1496,  1520,     0,  1578,  1518,     0,  1472,  1546,     0,
       0,  1525,  1502,  1505,  1503,  1508,  1509,     0,     0,     0,
       0,  1615,  1599,  1600,     0,   662,     0,   652,   666,   644,
    3071,  2912,  2916,  2897,  1075,  1080,  2157,  2158,     0,  2155,
       0,     0,  2161,  2166,  1848,  1848,   990,     0,   690,   668,
     996,     0,  1023,  1001,  1833,     0,  1946,   776,  1002,  1003,
    1005,  1006,  1009,  1026,     0,   953,   951,   947,     0,   947,
     880,     0,   965,  2195,  2194,     0,   902,   904,   915,   909,
     793,     0,     0,  1129,  1135,     0,   235,   240,   251,   252,
    1049,  3001,  2999,     0,   188,   140,   149,   150,   154,     0,
       0,     0,  1174,   991,   992,   994,     0,  1174,   997,   998,
    1000,     0,  2906,   203,  1001,     0,     0,  3014,     0,   937,
    3012,   301,   299,   300,     0,   294,   296,     0,     0,   489,
     500,   503,   495,     0,     0,   462,   459,     0,   459,     0,
     320,     0,     0,   516,   558,   459,   443,     0,   471,     0,
       0,   468,   470,     0,   469,   536,     0,     0,     0,   308,
     536,   537,   514,   431,   551,   539,  3038,   937,  1381,  2940,
    2932,  2935,  2814,     0,  1708,     0,     0,     0,     0,     0,
       0,     0,  1821,     0,     0,     0,  1649,     0,  1548,  1550,
     957,     0,  1612,     0,  1636,  1635,  1637,  1608,     0,  1589,
       0,     0,     0,     0,  3068,  3069,  2909,  2156,  2164,  2163,
       0,  1965,  1957,   777,     0,     0,  1946,     0,     0,  1946,
    1946,  1946,  1946,   685,   691,   693,     0,   778,     0,     0,
     779,  1029,  1008,     0,  1004,  1833,   831,  1035,   832,     0,
     964,     0,   969,   901,     0,  1160,  1128,   242,  1101,   459,
       0,  3000,  1252,     0,     0,     0,   222,   993,   211,   223,
     999,     0,  1174,  3011,   246,     0,   290,   292,  3026,   298,
     302,     0,     0,     0,   459,   496,     0,     0,   480,     0,
       0,   318,   525,   523,   316,   507,   507,     0,   554,   441,
       0,   449,   451,   540,   533,   534,   535,   543,   528,   309,
     531,     0,   507,     0,   313,  2835,     0,  2941,     0,   929,
       0,  1792,  1690,  1692,     0,  1746,     0,  1758,     0,  1818,
    1817,   872,  1470,  1534,  1614,     0,     0,     0,     0,  1630,
    1617,  1618,     0,     0,     0,     0,  1946,     0,  3072,  1849,
     679,   672,   675,     0,     0,  1946,  1946,     0,     0,     0,
       0,     0,   669,   692,  1946,   780,  1022,  1007,  1025,   962,
       0,   966,   967,   968,     0,   960,     0,     0,   244,   253,
     256,   254,   255,   261,   262,   263,   264,   265,   266,   257,
     260,   258,   259,     0,     0,     0,   144,     0,   995,   217,
     221,   238,   247,     0,   295,   303,   304,     0,     0,   497,
     503,   493,   501,   459,     0,   458,     0,   521,   319,     0,
       0,     0,   459,     0,   506,   508,   510,   307,     0,     0,
     472,   477,   459,   544,   539,     0,   536,   459,   512,  3037,
       0,     0,     0,     0,  1956,  2167,  2514,     0,  1728,     0,
    1726,  1748,  1747,     0,     0,     0,     0,  1625,     0,     0,
       0,  1623,     0,  1619,     0,  1616,  1621,  1620,   663,     0,
       0,  3073,   679,     0,   677,     0,   673,   671,   674,   701,
       0,     0,   697,   698,   696,   694,     0,     0,   687,     0,
     963,     0,     0,   794,   243,     0,   236,     0,  3002,     0,
       0,   250,   937,   305,   937,  3007,     0,   494,     0,     0,
     492,   459,   526,   459,   329,   328,     0,     0,   398,   520,
       0,   321,     0,   553,     0,   459,     0,   545,   542,   541,
     529,   459,   315,   314,  3036,  2723,  2939,  2938,  2936,     0,
    2151,     0,  1727,     0,     0,   937,  1752,  1751,     0,  1626,
       0,  1628,  1627,     0,     0,  1632,     0,  1633,     0,   657,
     663,  3071,   676,     0,   683,     0,   681,   684,   699,   700,
     690,   686,     0,   695,   975,     0,   974,     0,   971,   970,
     796,   795,   893,   245,  3003,  3004,   145,     0,  3015,   310,
    3005,  3006,     0,  3009,   498,     0,   459,   459,     0,   459,
       0,     0,   937,     0,     0,   317,     0,   478,   454,     0,
       0,     0,     0,  2937,     0,  2159,     0,  1729,  1730,  1733,
       0,  1624,  1622,  1631,  1634,   664,   658,  3070,   678,   680,
       0,   689,   688,   977,   978,   976,     0,     0,   791,   252,
     271,     0,     0,   297,  3008,   459,     0,   490,   459,   483,
       0,     0,   324,   399,   400,     0,   326,   555,   459,   450,
     453,   549,   546,   547,   538,     0,  2169,  1732,  1734,     0,
    1629,   682,     0,     0,   234,  3016,   312,   311,  3010,   459,
     459,   479,   482,   527,   524,     0,     0,   322,   323,   334,
     333,     0,   459,   459,   455,   459,   459,  2168,     0,  2173,
       0,   973,   972,   459,   459,   459,   484,   342,   340,   459,
     330,   338,   332,     0,   339,   401,   327,   459,   459,   459,
       0,     0,  2180,  1735,  3017,     0,   325,   341,     0,     0,
    2171,  2172,  2170,  2175,     0,     0,  2177,  2178,     0,  2139,
       0,  1742,  1743,  1731,  1736,  1737,     0,   331,   550,   548,
    2179,  2174,     0,  2181,  2183,     0,  1744,  1738,     0,  1739,
       0,     0,  2176,     0,     0,     0,     0,  1741,  1740,  2182,
    2184
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4439, -4439, -4439, -4439, -4439, -4439,  1347, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439,  1893, -4439, -4439, -4439,
   -4439, -4439, -4439,  1990,  1998, -4439, -3989, -4439, -4439,  2000,
   -4439,   558,  2004, -4439,   559, -4439,  2009, -4439,   572, -4439,
    -877, -1921, -4439, -4439, -4439, -4439, -4439, -4439,  1416, -4439,
   -4439,   560,  1605,  3413, -4439,   339, -4439,    67, -4439, -4439,
   -4439, -3967,   -34,  -169, -4439, -4439,    36,  3579,  -165, -3088,
   -4439, -4439, -4439, -3581, -4439, -4439,   349, -4439, -4439,   200,
   -4439, -4439, -4439, -1506, -4439, -4439, -4439, -4330, -4439, -4439,
   -4439, -4439, -4439, -4439,  -247,  -174,  1824, -4439, -4439, -4439,
    5066, -4439,  4312, -4439, -2424,  2572, -4439, -4439, -4439, -4439,
   -4439,  2630, -2351, -4439, -4439, -4439,  1346, -4439, -4439, -4439,
   -3368, -3032, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,  -167, -4439,
   -4439, -4439, -4439,   229, -4439, -2854, -4439,   235, -4439,   239,
   -4439, -2674, -2538, -2246, -4439, -1854, -4439, -1777, -4439, -4439,
    -191, -4439, -4439, -4439, -4439,   240, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439,    83, -4439, -4439,   356, -4439, -4439,    90,
     254, -4439, -4438,   257, -4439, -4439, -4439, -4439,   567, -4439,
     262, -4439,   360, -4439,   353, -4439, -4439, -4439, -4439,   900,
   -4439, -4439, -4439, -4395, -4439, -4439, -4439, -4424, -4439,  -114,
   -4439, -4439, -4439, -4439, -4439,   341, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439,  1464,  2933,  4121,
    2934, -2577, -4439,  1975, -4439, -4439,   996, -4439, -4439,  1146,
   -1374, -4439,  2780, -2268, -2273, -2272, -4439, -4439, -4439, -2967,
   -2960, -1060, -4439, -1066, -2270, -2147,   912,  2010,  2016,  2007,
      37, -4439,  1198,   499, -4439, -4439, -4439, -3312,   -20, -4439,
   -3662,   746, -4439, -4439, -4439, -4439, -3031, -4439, -4439,   -89,
   -4439, -4439,   -30,   -24, -4439,   311, -4439,  2799, -2067,  -532,
    2869, -4439, -1670, -1579,   494, -1432, -1409, -4439, -4439, -4439,
    1000,  2033,  1155, -4439,  1156, -1445,  1106, -3479, -4439, -4439,
   -1527, -2509, -4439, -4439, -3844, -4439,  -309,  1653, -4439, -4439,
    -216, -4439, -4439, -4439,  1621,  1623, -1547,  1776, -1468, -4439,
     741,  1205,  -344, -4439,   -18, -4439,  1110, -4439, -4439, -3749,
   -4439,   -38, -2574,   248, -4439, -4439, -2912, -3436, -1407, -4439,
   -4439, -3205, -2797,  1810, -4439, -4439,   330, -4439, -4439, -4439,
   -4439, -3277, -4439, -1511, -2047, -4439, -4439,   513, -4439,   457,
     512, -4439,   456, -4213, -4439,   505, -2220,  2273, -4439,  3529,
    2267, -2262, -4439, -3682, -2356,   775, -2109, -4439,  1151, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -1760, -4439, -4439,  1521,
   -4439,  2403,  2093, -4439,  2406, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439,  2912, -4439,   724, -1717,  2914, -4439,
    2917,   451, -2805,  -968, -4439,  -963, -4439, -1449,  3724, -2181,
   -3595, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439,  3284, -4439, -4439, -4439, -4439, -4439,  4424, -4439,  3296,
   -4439, -4439, -4439, -4439, -4439,  1637, -4439,  2705, -4439, -4439,
   -4439, -4439, -4439,  2299,  3587, -4439, -4439,    61, -4439, -4439,
   -4439, -4439, -4439,  2726, -4439, -4439,  3632,  2189, -4439, -4439,
    2047,  2743, -1565,  1473, -1017,  5202,     4,    43,   223,   787,
   -4439,  3431, -4439, -4439, -2037, -4439, -4439,  4494,  -890, -4439,
    3775, -4439, -4439,  2417, -4439,  4498,  3585,  3149,  1175,  5576,
   -4439, -1627, -4439,   -19, -4439, -4439, -1038, -4439, -4439, -4439,
    -664, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439,  2496, -4439, -4439, -4439,  3186,  1884, -2671, -4439,
   -2456, -2034, -4439, -2560,   463, -4439, -4439, -4439, -4439, -4439,
   -4439,   447, -4439,    99, -4439, -4439, -4439, -1703, -4439, -4439,
   -4439, -4439, -4439, -1161,  2617, -1213, -1241,  2960, -4439, -4439,
    3959, -4439, -4439, -4439, -2824, -4439, -2382, -4439, -4439, -4439,
   -4439, -3036, -2469, -4439,  -969,  2734,  2748,  2750,  2754, -4439,
   -4439,    51, -4439,   132, -4439, -4439,   -67,   -64, -2556,   689,
   -4439,   997, -4439, -4439, -4439,   361,  1698,   364, -2215, -2172,
   -1318,  1580, -4439, -4439, -4439, -1770,  4005, -1793, -1701,  1474,
       6,  4504,  4045, -2878, -4439,   995, -4439,   500,  2062,   669,
   -4439, -4439,  1737,  -998,   -95,   497, -2900, -4439, -1000,   -94,
   -4439, -2133,   646, -1594, -2532, -2085, -2303, -2134, -4439, -4439,
    3158,  4154, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439,  -458, -2027,  -432,  5318,  3616, -4439,  2885,  4322,  4324,
   -4439, -4439,  4202,  2140,  2149, -4439, -3247, -2452, -4439, -4439,
    -778,  5516,  1052, -4439,  1551, -4135, -3510,  4339, -4439, -3373,
    1077,  4349,  4347, -3198,  3863, -4439, -4439, -4439, -4439, -4439,
   -4439,  2735, -4439, -4439, -4439, -4439, -4439, -4439,  3473,  4570,
    -792, -1776, -4439, -4439, -4439,  1029,  3452,  2740, -1152, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439,  2905,  2364, -4439, -4439, -4439, -4439,  3567, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439,  2170,   212, -4439,  1390,   140,
   -4439,   976, -4439, -4439, -4439, -4439, -4439, -4439,     7, -4439,
   -4439,    -7, -4439, -1002, -1001,  1288, -1743, -2681, -4439,  1100,
   -3082, -2783,   766,  -831, -1350, -1324,   954,  2526,  2565, -1811,
   -4439,  2531,  -810, -1461, -2063,  1221,  3705,    -6, -4439, -4439,
    -922, -4439,   327,   119,  2317,   -25,  3544, -3513, -4439,   -17,
       2, -4439,  1498,   583, -4439, -4439,   893, -4439, -4439, -4439,
     232, -4439, -4439, -4439, -4439,  4181, -4439,  2803,  5355, -4439,
   -4439, -4439,  3533,  5362,  -644,  4190,  3556, -4439,  3559, -4439,
   -4439, -4439, -1755, -4439, -4439,   182, -4439,  2889, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -1055,  4654,  5371,  4286, -4439, -4439,  2604,
   -4439, -1698, -1100, -1039, -2324, -4439,  3028,  3968, -4439, -4439,
    2347, -4439,  3021,   820, -4439, -4439,   611, -4439, -4439,  1138,
    4661,  4245, -4439, -4439, -4439, -4439, -4439,  4415, -4439,   -21,
      -3, -4439,  -821, -4439, -4439, -4439,   -36,  4778,  4779,  4780,
   -4439, -1433, -4439, -4439, -4439, -4439, -4439,  3750, -4439, -4439,
    3753, -4439, -4439, -4439, -4439,  3755, -4439, -4439, -4439, -4439,
   -4439, -4439, -4439, -4439, -4439, -4439,  1207, -3885, -4439, -4439,
   -4439,  2001, -4439, -4439, -4439, -4439, -4439, -4439,  -453, -4439,
   -4439, -4439,   251, -4439,  1743, -4439,  1323, -4439,  1267,   903,
    1838
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    63,    64,   986,  2138,    65,    66,    67,    68,    69,
    1794,    70,  1102,    71,  1737,  2466,  2467,    72,   722,    73,
    1641,  1642,  2370,  2371,  3652,  4140,  4141,  3661,  4155,  3655,
    4144,  4145,  3658,  4149,  4150,  2360,  2361,  4136,  4137,  3648,
    2362,  2635,    74,    75,    76,    77,  2378,    78,  3679,  2392,
      79,  2903,  2904,  2403,  4180,  4127,  4887,  4131,  5008,  5126,
    5031,  3037,  4513,  4888,  4889,  5009,  3132,  2208,  3138,  2890,
    3706,  2891,    80,  1047,  4546,  4547,  4548,  4764,  4765,  4766,
    4767,  5037,  4785,  4578,  5273,  5072,  5052,  4776,  4924,  5053,
    5315,  5321,  5146,  5339,  5340,  5341,  5319,  1170,  5342,    81,
     754,   755,  1172,  1821,  2480,  1822,    82,    83,   684,  1756,
    1757,  1758,  1759,  3195,  2481,  3190,  3191,  4270,  5147,  5317,
    4777,  4579,  3721,  3722,  4239,  3723,  3724,  3725,  4220,  4568,
    4787,  3726,  4219,  3727,  4229,  4574,  3728,  4225,  4571,  4572,
    5062,  5238,  5290,  4198,  4555,  4199,  3730,  4200,  4556,  4201,
    4202,  4203,  4204,  4205,  4791,  4206,  4930,  4207,  4224,  5060,
    4773,  4774,  5046,  5279,  5312,  4208,  4209,  4553,  4912,  4210,
    4554,  5040,  4771,  5041,  5136,  5276,  4772,  4913,  5139,  4916,
    4211,  4781,  5054,  4212,  4782,  3736,  4804,  4581,  3737,  4217,
    4213,  4214,  4562,  4780,  4560,  4779,  5050,  5049,  5228,  4234,
    5066,  4580,  4577,  4934,  4935,  4800,  4941,  4792,  4793,  5157,
    5065,  5241,  4795,  5326,  5325,  4564,  4565,  4928,  5059,  5322,
    4783,  3703,  4192,  1672,  2387,  3104,  3105,  3106,  2906,  2907,
    1537,  2454,  2455,  2456,  3666,  3667,  3668,  3477,  3478,  3479,
    2215,  3032,  2895,  1538,  1539,  1540,  3110,  3670,  3671,  3111,
    3112,  1541,  3114,  1542,  1543,  2912,  3148,  3149,  3150,  3151,
    3152,  2132,  2133,  3422,  2787,  3419,  4389,  3959,  5189,  3966,
    4016,  4017,  4688,  5107,  4981,  5103,  4982,  5105,  5195,  5196,
    4992,  5117,  5118,  4863,  4864,  4865,  3091,  2202,  2203,  1057,
    1603,  3153,  2224,  1604,  2990,  1605,  1606,  2206,  3005,  2977,
    4186,  3509,  3510,  3511,  4067,  3512,  2933,  2232,  3502,  3503,
    4084,  3561,  4485,  5212,  3562,  3563,  3564,  3565,  3566,  3567,
    3568,  3879,  3569,  3880,  3875,  3876,  3873,  1313,  4451,  4452,
    4453,  3869,  3870,  4099,  4085,  4086,  4087,  4460,  4477,   945,
    4469,  4042,  1188,  2845,  1211,  1212,  2574,  1840,  1607,  4043,
    4044,  4045,  4093,  3940,  4657,  4089,  4068,  4712,  4879,  4882,
    5005,  5208,  2934,  1633,  2926,  1939,   659,  4742,  4743,  4744,
    4747,  4748,  4749,  4697,  4698,  4699,  4700,  2935,  2396,  4701,
    4702,  3127,  4691,  4024,  4025,  4026,  2936,  3406,  4442,    84,
      85,  1519,    86,  1525,    87,  1521,    88,  1626,  1039,    89,
    2314,    90,    91,    92,    93,    94,  2579,    95,    96,  2817,
    2818,  2819,  2158,  2813,  2814,   991,  3038,  3613,  4730,  1022,
    1608,  1609,  2308,  1610,  1611,  4723,  1612,  2952,  1613,  1614,
    1615,  1616,  3176,  3177,  2941,  3178,  2980,  2234,  1139,  2461,
    4110,  2284,    97,    98,  1950,    99,  1000,  2167,   100,  1269,
    1270,  1271,  1466,  1467,  2169,  2843,  3449,  1264,  1265,  1266,
    1001,  1464,   101,  1646,   102,  2532,  2533,  2534,   103,  4516,
    2320,   104,   105,  1653,  1654,  1655,   106,   192,   107,   108,
    1159,  1157,  1799,  1800,   109,  1043,  1044,  2322,   110,  2515,
    2516,  1634,  1635,  3792,   111,   112,  3155,   114,   946,   116,
     117,  1832,  1833,  2555,  2556,   771,   772,   773,  1492,  1493,
    1494,  2188,  2858,  2859,  2860,  1077,  1078,  1693,  1310,  1636,
    1080,  1081,  2442,  1082,  1694,  1695,  4090,   948,  1706,  2434,
     949,  3888,   950,   951,   952,   953,   954,  3909,  3910,  4359,
    2124,  2125,  2126,   955,   956,   957,  2759,  3951,  3396,  4381,
    3305,  3306,  3390,  4628,  3392,  3945,  3946,  4376,  4661,  4837,
    4969,  5087,  4971,  5088,  5095,  4838,   958,   959,  1408,  2025,
    3902,  3344,  4348,  1970,  3331,  1637,  1638,  1639,  2330,  1335,
    1336,  1301,  2666,  1976,  2557,  3825,  2558,  3257,  3258,  3259,
    3836,  3832,  2536,  2537,  2559,  2560,  2561,  2562,  2563,  2564,
    2565,  4816,  5077,  5078,  5299,  5373,  5374,  5375,  5376,  4820,
    4315,  4316,  4317,  4318,  4319,  3046,  3047,  3048,  3798,  2953,
    2015,  2016,  2023,  1774,   660,  1775,  1971,  2510,  1884,  3845,
     983,   816,   817,  1280,  1954,  4325,  4629,  4630,  3263,  4321,
    4627,  2986,  2987,  1006,  1007,  2176,  2849,  2850,  1479,  1480,
    1484,  1485,  4851,  2991,  2878,  2827,  2913,  2914,  2880,  1471,
    1472,  1003,  1473,   119,   662,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,  2475,  2195,  1036,   661,  1725,  1726,  1727,   136,   137,
     727,   748,  1162,  3227,  3228,  3804,  3229,  3157,  3231,  3810,
    2216,  2217,  3811,  4293,  3783,  3784,  4280,   138,   139,  3800,
    3801,   749,   140,  2870,  1502,  1503,   141,  1952,   809,  1920,
    1921,  1922,  2631,   142,   801,  1254,  3853,  3858,  2617,  1154,
    1544,  1901,  1257,  1258,  1259,  1902,  2602,  3284,  1885,   143,
     144,  1512,   145,  1018,  1513,   146,  1103,  1750,  3188,  3769,
    4255,  1751,  1752,  2476,   147,   751,  1167,  1164,  1168,  1806,
    1805,  2541,  2539,   148,   741,  1155,  2524,   149,   732,   150,
     151,   736,  1787,  1147,  3793,  3158,  3452,  3994,  3995,  3997,
    4412,  4413,  4415,  5170,  5329,  5362,  5352,  5365,  5366,  5369,
    5383,  5384,   960,  1284,   961,  4470,   962,   963,   964,  3805,
    1083,  2177,  4322,   965,  3802,   966,  2566,  2196,   630,  4151,
    4152,   992,  1285,  2171,  1845,  3978,  1696,   968,   712,  3739,
    4216,   791,   994,  1203,   995,  1730,  1204,  2494,   632,   633,
     634,  3741,   635,   636,   716,   796,   637,   152,   797,   153,
    1854,   154,  3278,  3279,  1217,  1221,  1869,  1870,  1871,  1260,
    2102,  1863,  1218,  1872,   800,  1196,  1197,  1852,  1198,  1850,
    1199,  2584,  1880,   155,  1149,   642,  1790,  1791,  3214,   156,
     813,   157,   158,   159,  1028,   160,  1779,  2508,  2509,   161,
    1824,   162,  1761,  1770,  1106,   718,   719,  2497,  2808,  2153,
    2154,  2495,  1731,  1205,  3272,  1452,  1675,   997,  1676,   998,
    1117,  1764,  1455,  4275,  3774,  4947,  4599,   163,   193,   645,
    1055,  1660,  1829,   164,   165,   166,   167,  1478,   969,  2567,
     970,   774,  1680,  1070,  2413,  2404,   186,   187,   188,   189,
    1624,  1625,  4132,  4732,  4891,  5222,  5223,  2406,  5275,  2407,
    2408,  4181,  4905,  5270,  5333,  2409,  2410,  3700,  3139,  3708,
    4188,  4551,  3140,  3745,  3141,  4243,  4244,  4245,  4587,   168,
    1290,  1286,   826,  1965,  1959,  1961,   169,   170,  1142,   171,
     172,  4844,  4845,  3694,  2313,  3604,  3605,  4121,  3035,  3609,
    2463
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     631,  1507,  1189,  1193,   113,   789,   118,  1486,  2172,  1256,
    1489,  2483,   680,  2030,  1495,  1101,   721,  1514,  1663,  2519,
    1010,  1011,  1222,   714,  2303,   740,   792,  1724,  1677,  2647,
    1771,  2075,   756,  1723,  2233,   761,   947,   975,  1337,  2568,
     756,   714,   629,  3206,  1713,   793,   814,   818,  2852,  2853,
    3705,  2482,  2755,  2756,  2260,   976,  2453,  2076,  3277,  1733,
    2764,  2765,  2766,  1979,  1980,  1617,   981,  2879,  3453,  2328,
    1618,   996,  2283,  2918,  2919,  1826,  1895,  3398,  2511,  2433,
     681,  3098,  2802,  4083,  3230,  2580,  2966,  2204,  3593,  3400,
     993,   739,  2032,  4004,   973,  3332,   745,  3260,  2238,  3333,
    2231,  1931,  2242,  3962,  2045,  2046,  2047,  3600,  3720,  2049,
    2205,  2018,  2207,  2598,  3108,  3109,  2261,  3116,  2923,  3107,
    3235,  1827,  1463,  1496,  1066,  1067,  4088,  3672,  2273,  2548,
    3189,  2511,  2624,  3128,  3673,  2881,  1972,  1973,  1974,  1020,
     713,  4147,  4601,  1837,  3806,  4105,  4106,  1984,  2085,  3179,
    1427,  2637,  4606,  1040,  1219,  2947,  2219,  4238,   713,  2638,
    4509,  1012,  2871,  3614,  4526,  2641,  1296,  2864,  1023,  1773,
     631,  3243,  2847,   631,   993,  1032,  1020,  4091,  2038,  2782,
    2784,  2042,  1773,  2928,  1051,  1053,  2982,  2983,  1686,  1687,
    1020,   643,  -715,  2317,  3391,  2634,  1133,  1686,  1687,  2059,
    2060,  1686,  1687,  2064,  3307,  3308,  3309,  2459,  1686,  1687,
    1425,   738,  1025,  1686,  1687,  1030,   744,  4400,  4054,  3837,
    3336,  2078,  2079,   115,  2318,  1425,  2083,  2084,  4778,  1425,
    1898,  1085,  1086,  1087, -1054,  3232,  1090,  1091,  2390,  3143,
    1094,   733,  1096,  1097,  1098,  3352,  2840,  2405,  2414,  3354,
    1928,  1681,  1686,  1687,  3417,  2747,  3273,  1643,  1647,  3143,
    2634,  1175,  1686,  1687,  1773,  3362,  3363,  4003,  2522,  2145,
    3450,  3369,  2529,  5397,  1401,  1402,  1403,  4281,  1561,  1686,
    1687,  2848,  1062,  3183,  1424,   982,  3729,  3381,  3382,  1561,
    1561, -2275,  2147, -1910,  3118,  1831,  3388,  2385,  1686,  1687,
    2867,  1686,  1687,  4386, -1796,  1686,  1687,  3124,  4114, -1039,
    3394,  2443,  3343,  1686,  1687,  4231, -2119, -1796,  1163,   682,
    -702,  -703,  1628,  1121,  4468, -2052, -2062,  -583,  4048,  4052,
    3494,  3610,  4053,  2181,  1686,  1687,  -715,  1186,  1686,  1687,
    4197,  1013,  1281,  2459,  1002,  3501,  1428,  1767,  2820,  5070,
    2828,  4062,  -569,  5063,  1411,  4065,  1374,  4557,  1275,  4588,
    1808,  1882,  1186,  1686,  1687,   734,  1656,  2724,  3699,  1152,
    5271, -2729,  2815,  3136,  1041,  1648,  1686,  1687,   728,  1649,
    3981,  4943,  4036,  3842,  3466,  5023,  3582,  1686,  1687,  5184,
    1035,  1124,  3641,  1650,  4037,  5264,  5024,  1686,  1687,  1054,
      42,  1267,  1963,  1145,  3144,  4940,  1686,  1687,  4038,  4436,
    1546,  -938,  4278,  4232,   194,  1499,   194,  1686,  1687,  4108,
    1224,   776,  4954,  3580,  3824,  3828,  3692,  2254,  4222,  1630,
    1864,  -609,  4695,  1002,  3839,  3840,   746, -1796,  1883,  3081,
    3274,  1868,  1176,  4761,  3459,   810,  3601,  1224,   776,  3090,
    1883,  1903,  -598,  4762,  2496,  3602,  2879,  1631,  2929,  1490,
    4695,  4448,  2847,   190, -2061,  1942,  3731,  1262,  4955,  3144,
     972,  4410,  4455,  1686,  1687,  3590,  3125,  1500,  3430,   977,
    4870,  1026,  1446,  2148,  1686,  1687,  1658,  2788,  5056,  1994,
    1686,  1687,  2779,   640,  3607,  2191,   641,  2192,  5185,  2780,
    3982,  1686,  1687,  1337,  5068,  4411,  2394,  1031,  4498,  3608,
    1644,  1899,  1027,  2664,  3269,  3270,  3242,  2739,   978,  2306,
    4558,  1686,  1687,  3693,  1282,  2530,  1940,  2444,  1426,  2395,
    1651,  4735,  1686,  1687,  2789,  4914, -1796,  2963,  1375,  3922,
    3686,  4902,  1683,  1426,  1686,  1687,  1943,  1426,  2972, -1796,
    1491,  3186,   191,  2445,  1263,  3374,  4288,  1689,  1413,  4449,
    1690,  1134, -1796,  1900,  4914,  1659,  1689,  1768,  2835,  1690,
    1689,  2848,  1447,  1690,  3249,  1686,  1687,  1689,  3012,  2847,
    1690,  -715,  1689,  1627,  5043,  1690,  4286,  2930,  2458,  2180,
    2255,  1014,  5121,  -938,  4223,  1632,  4109,  4763,  4956,  2185,
    2868,   747,  3732,  4450,   715,  1268,  3137,  4083,  2193,  3044,
    4148,  1146,  1793,  1501,  5025,  1964,  3983,  4696,  2121,  2122,
    3233,  1689,   715,  1904,  1690,  2460,   795,  3480,  1652,  3146,
     729,  1689,  3767, -2275,  1690,  1909,  1020,  1020,  3854,  1732,
    5156,  2807,  5265,  5064,   993,  4696,  1064,  2948,  1689,  2950,
    1153,  1690,  2879,  1724,  3249,  5186,  1084,  4390,  2962,  1723,
    1088,  1686,  1687,  5106,  2430,  1093,  4341,  1048,  1735,  2457,
    1689,  5160,   974,  1690,  1689,  2978, -1796,  1690,  1657,  1187,
    4761,  4588,  1689,  1574,  1781,  1690,  4036, -2881,  2848,  2319,
    4762,  3746,  1792,  3495,  3146,  2332,  3009,   811,  4037,  1987,
    3011,  4559,  1802,  1689,  1187,  4759,  1690,  1689,  -785,  2531,
    1690,    42,  4038,  1769,  1248,  3203,   993,  2925,  1158,  2925,
    2446,  1883,  1140,  4716,  1224,   776,  5071,  2182,  3953,  3403,
    3955,    42,  1689,  2093,  2223,  1690,  1156,   993,  3611,  1429,
    1686,  1687,  2675,  4807,  4692,  1689,  3126,  5272,  1690,  2619,
    4893,  4894,   683,  2622,  3230,  1924,  1689,  4233,  2626,  1690,
    2576,  2460,  2120,  1253,  1063,  1084,  1689,  1122,  4602,  1690,
    2204,  2816,  3080,  3395,   993,  1689,  3264,   735,  1690,  4055,
    2151,   792,   993,   993,  2688,  3181,  1689,   714,  3586,  1690,
    2642,  2643,  3676,  2205,  2673,  2207, -1796,  3261,  4304,  4305,
     793,  2483,  4003,  1020,  1274,  2223,  3441,  2511,  2657,   818,
    5398,  5227,  2931,  5229,  2587,  4401, -2062,  3493,  1692,  3496,
    2523,  2879,  2300,  2301,  2302,  3597,  3669,  1692,  3455,  3944,
    3462,  1692,  1321,  3579,  4763,  1131,  4440,  3089,  1692,  4725,
    3154,  2482,  1689,  1692,  1629,  1690,  4444, -1054,  3865,  2223,
     976,  1645,  1645,  1689,  4447,    53,  1690,  2767,  2146,  1689,
    1100,  2418,  1690,  1338,  1686,  1687,  3826,  1645,  2511,  1685,
    1689,  2783,  2785,  1690,  2868,    53,  2700,  1283, -2881,  3892,
    2704,  3893,  1692,  3119,  2391,  3500, -1796,  1010,  1011,  4490,
    1689,  1376,  1692,  1690,  3733,  3911,  5278,  3912,  1686,  1687,
    1135,  1689,  2726, -2275,  1690,  2763, -1910,  3868,  2223,  1692,
    1125,  3986,  3926,  1689,   717,  4431,  1690, -1796,  1497,  1498,
    3956,  1150, -1039,  2484,  4250,  2988,  1645,  1160,  1692, -2119,
   -1796,  1692,   717,  -702,  -703,  1692,   993,  5032,  1410,  4300,
    -583,  2725,  2223,  1692,  1689,  1404,  2204,  1690,  1686,  1687,
    2674,  2076,  3209,  1440, -2061,  2652,  3905,  3275,  2329,  2773,
    4039,  3906,  4014,  1177,  1692,  -569,  2655,  2223,  1692,  2205,
    1645,  2207,  1420,  1421,  1422,  1423,   720,  1061,  1404,  5334,
    5335,  1443,  5187,   974, -2729,  3142,  2223,  4437,  4695,  1686,
    1687,  3999,  4741,  1692,  4301,  1276,   993,  2665,  2932,  1520,
    2748,  4803,  1487,   974,  4032,  2749,  1692,  1686,  1687,  4147,
    2097,  3571,  3572,  1515,  3117,  2098,  1941,  1692,   993,  4770,
    1522,   993,   113,  1524,   118,  2881,  1012,  1692,  1619,  2329,
    1689,  1621,   631,  1690,  3426,  1020,  1692,  1682,  5130,  3571,
    3572,  1674,  1640,  4607,  -609,  2438,  2223,  1692,  5039,  1136,
    3799,  1664,  1665,  1666,  2679,  3688,  1669,  3210,  2680,  1673,
     993,  2097,  1678,  1679,  2577,  -598,  2692,  2223,  4103,   714,
    1015,  5122,  2603,  1697,  1622,  3768,  1925,  1686,  1687,  1715,
     631,  1717,  2728,  1719,   631,   993,  2740,  2729,   631,  1729,
     993,  1020,  1988,  1734,  1765,  3460,  1905,  3442,  1760,  1019,
     714,  5102,  3971,  1692,  2798,  3975,  3855,  1190,  1910,  1689,
    1763,  3923,  1690,   993,  1692,  1208,  1213,  4349,  3574, -2815,
    1692,   993,  1716,  4189,   993,  4279,  1720,  4432,  1778,  1780,
    1728,  1692,   730,   714,  4842,  2745,  1033,   196,  2384,  3976,
    2746,  4355, -2816,  1020,  1020,  2656,   638,  1686,  1687,  1825,
    1045,  1692,  4171,  1020,  1020,  3386,  1020,  1804,  4456,  2685,
    2019,  1165,  1692,  2020,  1405,  3755,  1842,  4977,   993,   993,
    3756,  1686,  1687,  4696,  1692, -2881,  4119,  1838,   760,  1934,
    1486,  1486,   789,  5220,   714,   993,  3250,  4996,  1425,  5132,
    1686,  1687,  3672,  5134,   737,  4487,  3423,   982,  3852,  3673,
    1857,  4182,  1847,   792,  2698,  1692,  1013,  -293,  1865,  3806,
    1296,  1686,  1687,  1686,  1687,  3434,  3435,  3436,  3437,  2596,
    3990,  3897,   793,   993,  3193,  1004,  3898,  1219,  1453,  3576,
    4163,  3991,  3924,  1689,  4190,  5175,  1690,  3925,  4252, -2815,
    5035,   115,  4625,  4253,  3623,  4028,  4029,  3626,  3627,  2668,
     713,  3630,  3631,  3632,  3633,  3634,  3635,  3636,  3637,  5400,
    3454,  3640, -2816,  3642,  4039,  3644,  3159,  1689,  3591,  1409,
    1690,  5204,   818,  1955,  2690,  1945,  3594,  2464,  1926,   806,
    2672,  3598,  3166,  1686,  1687,  1753,  3734,   639,  2838,  4040,
    2452,  1692,  1686,  1687,   644,  4489,  5210,  2691,  4491,  1686,
    1687,  2862,  2863,  5232,  3974,   803,  3487,  4156,  2529,  2879,
    1010,  1011,   819,  4312,  1338,  4397,  1425,  1689,  4330,  1008,
    1690,  3115,  4162,  4907,  3251,  4183,  3376,  3113,  1338,  1474,
    3424,  1042,  2050,  4978,  1404,  3194,  3443,  3444,  3439,  3143,
    3211,  1617,  1617,  1935,  3252, -2052,  1618,  1618,   194,  1686,
    1687,  4289,  4313,  2099,  1523,  2606,  1166,  3253,  1689,   820,
    2879,  1690,  3949,  3735,  1194,  3973,  3954,  5360,   715,  3980,
    1692,  4944,  1686,  1687,  4626,  2077,  1689,  5211,  3729,  1690,
    1476,   795,  1686,  1687,  5036,  1425,  1317,  1724,  4296,  4020,
    1181,  3198,  2105,  1723,  2106,  2107,  2108,  2109,  2110,  2112,
    2114,  2115,  2116,  2117,  2118,  5221,  3504,  4369,  4920,  2147,
    4920,  2134,  3108,  3109,  2694,  3116,  3570,  3107,  1721,   993,
    3189,  2925,  3998,  2794,  1531,  2127,  2100,  2233,  3868,  2155,
     993,  1004,  1020,  3196,   821,  3685,  4388,  1516,  1686,  1687,
    1005,  3254,   993,  4133,  4134,  2303,  1689,  3238,   993,  1690,
    4399,  2767,  4356,  3992,  1766,  4403,  3407,  3408, -2052,  3160,
    3622,   750,  3624,  3625,   993,  1848,  3628,  3629,  4441,  1528,
    2572,  3817,  3288,   731,  -638,  3575,  3638,  3639,  3361,  3761,
    3212,  3643,  3859,  3752,  3646,  3294,  3295,  4373,  4843,  3298,
    3841,  3237,   194,  2706,  1692,  1186,  2197,  2399,  3772,   993,
    1686,  1687,  4876,  2394,  4878,  3310,  1426,  1477,  3847,  3848,
    3205,  2233,  2260,  4184,   640,  4040,  1689,   641,  4286,  1690,
    3860,  3861,  1366,  4327,  4328,  3851,  2395,  1529,  1692,  1191,
    2411,  3265,  3266,  3267,  1454,  4169,  4170,  3754,  1946,  3814,
    1689,   794,  1195,  1690,  1370,  1528,  4798,  4488,  2614,  3144,
    2879,  1686,  1687,  1405,  1129,    42,  1897,  1533,  3731,  1689,
    4120,  2530,  1690,  3255,  1686,  1687,  3410,  3571,  3572,  2305,
    4719,  5361,  1686,  1687,  2261,  5074,  3271,  2231,  1692,  1318,
    1689,  1008,  1689,  1690,  2795,  1690,   807,  3271,  5205,  3773,
    3387,  4164,  4165,  4166,  1506,  4125,  1052,  1052, -2815,   851,
    2148, -2052,  4191,  1529,  1686,  1687,   723,  2667,  3850,  1686,
    1687,  2615,   804,  1686,  1687,  1686,  1687,  2711,  3701,  1692,
     742, -2816,  2323,  1020,  2021,  1999,   808,  2022,  4185,  1531,
     812,  3290,  1686,  1687,  1426,  3256,  2233,  1692,  3993,  1020,
    3702,    25,  2101,  3790,  4706,  1490,  1009,  2307,  4392,  4393,
     715,  2715,  1689,  2265,  4395,  1690,  4398,  4420,  1856,  3440,
    2204,  1689,  4424,  5099,  1690,   856,  4427,  3972,  1689,  4001,
    1533,  1690,  1686,  1687,  1517,  4920,  3161,  1020,   717,  1084,
    1531,   715,  2422,  2205,  5150,  2207,   805,  2437,  2435,  5206,
    3213,  2439,  3162,  1004,  3732,   822,  5218,  2291,  5219,    53,
    1518,  2178,  4854,  1426,   974,   976,  3862,  1692,  2448,  2149,
    4664,  2183,  1020,  2484,   715,  1367,  2879,   823,  1689,   972,
    5207,  1690,    42,  2458,  3729,  4855,  4337,  1008,  3867,  1020,
    1968,  2003, -2815,  4083,  1248,  4314,  1491,  1371,  4126,  5249,
    2800,  1689,  2716,  3480,  1690,  2531,  5001,  1020,  1338,   993,
    2401,  1689,  2119,  4927,  1690, -2816,  1531,  3397,   824,  1130,
    2718,  2511,  1533,  1273,  2493,   715,  1532,   868,  2498,  1686,
    1687,   972,  2525,  2526,  3146,  2142,  1020,  1692,  4479,  1020,
    3884,  3172,  1686,  1687,  4713,  4714,  4474,   993,  4337,  1686,
    1687,   993,   993,  1533,  4871,   984,  5284,  2173,  1686,  1687,
    4475,  1692,  1844,   795,  2616,  2879,  2186,  1689,  4011,  1441,
    1690,    42, -1968,  1533,  1686,  1687,  2266,  1535,  3280,   825,
    1692,  2493,  4543,  2549,   724,  1020,  2974,    62,   976,  3482,
    2719,  1844,  2200,   993,  2879,  3481,  4236,  1187,  4608,  1004,
    2004,  1692,  1532,  1692,  2007,  5209,   792,  1248,  2879,   993,
     883,  2008,  4615,  2879,   792,   714,    36,  1969,   714,  4920,
    4826,  4920,   753,  1623,  4705,   793,    53,  3131,  2612,  1689,
     753,  1968,  1690,   793,   884,  4834,  3807,  1686,  1687,  2150,
    4274,  2623,   631,   631,   631,  1020,   631,   993,  1020,  1533,
    2292,  3669, -1968,    42,  4338,  4644,  2620,  2151,   631,  2076,
     993,  2801,  2076,   631,  3731,  3833,  2975,  5308,  1009,  5370,
    4920,  4394,  2187,  1692,  1686,  1687,   725,  2402,  1192,  4378,
    1689,  4379,  1692,  1690,  2607,  2608,  2609,  4835,  2611,  1692,
    1535,  3729,  2009,  1689,  4118,  2651,  1690,  4896,  3834,  1248,
    2621,  1689,  4899,  2723,  1690,  2625,  5371,  1131,  5002,  5104,
    1686,  1687,  5108,   976,  1844,    53,  4338,  1686,  1687,  1968,
     717,  2681,  1182,  3687,  2741,  5354,  4920,  4920, -1968,  3461,
    1248,  5356,  2457,  1689,  4046,  4998,  1690,  4339,  1689,  1692,
    2129,  1690,  1689,  2130,  1689,  1690,  3733,  1690,  2152,   726,
    1248,   717,  3979,  4476,   974,  1052,  2011,  4159,  1983,  1686,
    1687,  1689,  1692,   173,  1690,  4060,  4061,  1456,  1457,  2976,
    4530,  4531,  1692,  2236,  2458,  1686,  1687,  1686,  1687,  1311,
    1450,   979,  1535,  2226,   717,  5331,  5332,  4138,  3675,  1338,
    2699,  1686,  1687,  1968,  3674,  5011,  2758,    53,  4515,  4343,
    3732,  1689,  4662,  3039,  1690,  2762,  1686,  1687, -1968,  4002,
    4008,  1052,  3903,  1535,  1009,  5233,  3378,  2457,  5003,  4123,
    1661,  1662,  4731,  1936,  1937,  1968,  1248,  4333,  1692,  2483,
    4671,   910,  4672,  1535,  5234,   717,  1686,  1687,   985,  4666,
    1183,  3690,  2485,   974,  1686,  1687,  2037,  -638,  1378,  2223,
    1938,  1686,  1687,  1686,  1687,   987,   993,  5030,  3402,  1046,
    3707,  3778,  3904,  1789,  1052,  2669,  4237, -2246,  4124,  2482,
    1451,  3731,  4541,  1801,  1052,  4540,  1803,  1697,   175,  3384,
    2521,  2457,  4663,  4798,  2822,  3917,  4667,  4836,  1595,  4798,
    1692,  1596,  4251,  2131,  2844,  3928,  1411,  2012,  1689,  3815,
     993,  1690,  2076,   999,  3835,   714,  3385,  1686,  1687,  1535,
    3164,  1689,  1458,  1459,  1690,  2014,  5372,  4973,  1689,  2511,
    2041,  1690,  5258,  1444,  3040,    62,  2575,  1689,   993,  2305,
    1690,  4009,  3579,  4248,  2581,  1487,  1487,  4718,  5179,  1630,
    1116,  1692,  2588,  1689,  2237,  1127,  1690,  3856,  2866,  5093,
    2823,  3929,  2063,  1020,  1692,  2582,   976,  1858,  4340,  1686,
    1687,  1002,  1692,  3780,  4129,  4416,  4417,  1631,  3729,  4241,
    3764,  4418,  2960,  3729,  3763,  5014,  2920,  3705,  3740,  4130,
    2489,  2924,  1686,  1687,  3209,  2490,  1029,  2937,  2939,  2942,
    2943,  2944,  2945,  2854,  1692,  3709,  2949,  2583,  2954,  1692,
    1686,  1687,  2988,  1692,  2779,  1692,  1689,  3732,  2954,  1690,
    2964,  3174,  2954,  4299,  2968,  2969,  2670,   993,  2971,  2954,
    4340,  2332,  1692,  1034,  2981,  2179,  1021,  2984,  2076,  2077,
    1859,  2856,  1411,  2857,  2994,  2184,  4457,  2995,  1020,  3827,
    2649,  1686,  1687,  1689,  5090,  2650,  1690,  3010,  3838,  2954,
    2927,  4798,  2824,   993,  1024,  3017,   794,  2511,  2511,  4458,
    2946,  3729,  1692,  2511,  4646,  1449,  2955,  3729,  4241,  4745,
    1020,  2279,  2682,  1035,  4750,  4798,  4798,  4798,  1450,  1689,
    2954,  3049,  1690,  1686,  1687,  5181,  1689,  1686,  1687,  1690,
    4471,   320,  3733,   322,  4673,  2985,  5096,  1037,  4459,  2993,
    1413,  1038,  2693,  1686,  1687,  4949,  2997,  2998,  4372,  4846,
    4633,  5015,  4535,  4536,  4537,  4538,  5182,  2689,  3329,  4471,
     320,  2702,   322,  2703,  2280,  3329,  1674,  5097,  1689,  1686,
    1687,  1690,  5300,  1020,  2693,  2825,   640,  1020,  3734,   641,
    2707,   175,  4652,  5252,  1689,   993,  1689,  1690,  3731,  1690,
    3759,  1046,  2136,  3731,  3133,   631,   631,  1224,   776,  1692,
    1689,  1686,  1687,  1690,  4817,   631,  4818,  2304,  1451,  1686,
    1687,  4632,  1692,  3163,  1048,  1689,  1049,  2671,  1690,  1692,
    2714,  3167,  2332,  3171,  3169,   743,  1050,  3173,  1692,  2771,
     320,   976,   322,  3182,  3729,  1054,   715,  3134,  3135,   715,
    1404,   976,   851,  3175,  1692,  1689,   795,  3799,  1690,  3799,
    2281,  3330,   993,  1689,   795,  3735,  1690,  5114,  3330,   993,
    1689,  2076,  1689,  1690,  3431,  1690,  4745,  1411,  3729,  3729,
    4750,  3729,  3729,  2803,  4056,  1760,  1413,  4057,  1686,  1687,
    1760,  3731,  4174,  4600,  3197,   993,  1860,  3731,  1686,  1687,
    1056,  3432,  2695,  3729,  3729,  3729,  1059,  2332,  2696,  5090,
    1058,  1474,  3757,  2035,  3758,  1887,  1060,  1692,   856,  4175,
    1686,  1687,  1411,  1068,  1020,  4249,  1689,  2717,  2829,  1690,
    2233,  1020,  1020,  4745,  3732,  1630,  1224,   776,  4750,  3732,
    2720,  3241,  1686,  1687,  1065,   195,  1089,  2732,  1338,  3733,
    2426,   993,  1069,  2708,  1692,  4335,  2750,  1020,  2332,   976,
     976,  2709,   711,  1631,  1686,  1687,  2332,  1404,  1686,  1687,
    2710,   789,  2757,  1092,  1888,  2332,  1686,  1687,  1689,  1074,
     711,  1690,   714,   714,   714,  2511,  4345,  4346,  3030,  3031,
    1692,  1095,   792,  2325,  2830,  1099,   710,  1692,  1686,  1687,
    2970,  1689,  1686,  1687,  1690,  1105,  2826,  1889,  5029,  2372,
    3286,   793,  4361,  4932,   710,  1686,  1687,  1104,   790,  1689,
     868,  2883,  1690,  2712,  3731,  2831,  1107,  3732,  2332,  3115,
     967,   971,  1114,  3732,  2398,  3113,  3015,  2884,  4492,  1692,
    4839,  4494,  4495,  1020,  1020,  1414,  1415,  2419,  3571,  3572,
    1115,  1861,  3156,  5016,  3299,  1692,  1116,  1692,  3731,  3731,
    1689,  3731,  3731,  1690,  1686,  1687,  5255,  1348,  1118,  1405,
    1862,  1692,  2760,   993,  1119,  4354,  1132,   993,  3154,  1686,
    1687,  1413,  2450,  3731,  3731,  3731,  1692,  1365,  3350,  1686,
    1687,  1137,  4153,  4154,  5112,  5113,  2832,  1224,   776,  1052,
    1379,  1380,  1689,   883,  2854,  1690,  1689,  2304,  2781,  1690,
    1686,  1687,  1138,  2753,  1144,  3864,  1692,  1052,  2332,  4334,
    2882,  1148,  1689,  4297,  1692,  1690,  1413,  4979,   794,  5288,
    5289,  1692,  1151,  1692,  3734,  4965,   715,  1661,  1662,  1161,
    3335,  2855,  2856,  2427,  2857,  2332,  2512,  3404,  1689,  2517,
    3490,  1690,  2332,  5310,  5311,  3491,   717,  3896,  3393,   717,
    3732,  1169,  1418,  1419,  1420,  1421,  1422,  1423,  1171,  3156,
    3026,  3029,  3919,  3899,  3414,  3907,  3416,  2332,  2829,  2833,
    1689,  2989,  1181,  1690,  3411,  1206,  1405,  1692,  1689,  3913,
    2399,  1690,  3006,  3007,  3732,  3732,  1020,  3732,  3732,  1174,
    4221,  4030,  3184,  4226,  4227,  4966,  4031,  4230,  2999,  2885,
    3000,  3735,  4247,  4622,  4623,  2256,  1214,  4031,  1220,  3732,
    3732,  3732,  1278,  2400,   851,  2226,  3733,  1890,  5388,  5390,
    1279,  3733,  1287,  1288,  3914,  1291,  1289,  1292,    42,  1692,
    1414,  1415,  3915,  1293,  2830,  4276,  3223,  4290,   993,  3916,
    4277,  3918,  4291,  3001,  1294,  2610,  4382,  1689,  2613,  2197,
    1690,  4383,  1692,  4331,  1295,  2879,  1297,  1689,  4332,  4036,
    1690,  1020,  2197,  3465,   976,  2831,  3002,  4384,  1283,  4422,
    1692,  4037,  4383,  2282,  4423,  1414,  1415,  2886,    42,  1689,
     856,  1298,  1690,  1299,  2896,  4038,  1416,  1417,  1418,  1419,
    1420,  1421,  1422,  1423,  1431,  3921,  1433,  1224,  4049,  4350,
    1411,  1689,  4429,  2887,  1690,  3003,  1302,  4430,  4517,  3733,
    1303,  1692,  1411,  4518,   910,  3733,   993,  1304,   752,  1305,
    2924,  1306,  2924,  1689,  4138,  1307,  1690,  1689,  2937,  1308,
    1690,  3734,  3513,  1309,  2257,  1689,  2832,  4967,  1690,  4519,
    2954,  3807,  1312,  3577,  4520,  3482,  1434,  3927,  2066,  2067,
    2428,  3481,  2872,  1692,   993,  3224,  3225,  1692,  1314,  3585,
    1411,  1689,  2076,  1891,  1690,  2888,  2429,  2076,  2639,  2640,
    3930,  3871,    53,  1692,  1689,  4521,  1630,  1690,  4524,  2954,
    4522,  2484,   868,  4525,  1892,  3886,  1315,  2954,  3932,  4527,
    2834,  2954,  2954,  4529,  4528,  1316,  1190,  2897,  4430,  1692,
    1190,  1411,  1319,  1320,  1631,  3224,  3225,  1020,  3735,  1893,
    4534,  1322,  4592,   993,   993,  4430,  1412,  1647,  2873,  2833,
    1435,  1323,    53,  1689,  4287,  1894,  1690,  4591,  1436,  3934,
    1437,  1692,  2332,  2401,  1324,  5017,   717,  1325,  1689,  1692,
    1326,  1690,  3733,  1327,  2323,  4443,  1328,  1120,  1689,  2908,
    1123,  1690,  1438,  4636,  2879,  1126,  4443,   320,  4639,   322,
    1128,  1010,  1011,  1329,  4831,   883,  1439,  2889,  2256,  1689,
    1475,  3936,  1690,   993,  1448,  3937,  3733,  3733,  2226,  3733,
    3733,  1416,  1417,  1418,  1419,  1420,  1421,  1422,  1423,   884,
     993,  3938,  3961,  3675,  1332,  1333,  1339,  4254,  1340,  3674,
    3226,  3733,  3733,  3733,  1413,  2809,  2810,  1341,  1692,  4647,
    2811,  2812,  5018,   993,  2332,  1342,  1413,  4366,  1692,  1343,
    2909,  1344,   714,  1020,  3696,   631,  1416,  1417,  1418,  1419,
    1420,  1421,  1422,  1423,  1648,  1345,  1442,  1346,  1649,  1020,
    1692,  3513,  2258,  1347,  1349,  1350,  1623,  1351,  2865,  4367,
     974,  1404,  1650,   715,   715,   715,  4668,  4368,  3004,  2259,
    4686,  4423,  1692,  1352,  1413,  4430,  1353,  3697,  3411,  1354,
    2898,  1190,  4595,  4035,  1404,  2829,  1008,  1355,  3008,  1356,
    2899,  5080,   795,  1357,  1692,  1358,  1359,  2900,  1692,  4726,
    2493,  1527,  4966,  3797,  3777,   993,  1692,  2257,  4613,  2872,
    2402,  1020,  3985,  2910,  4690,  1413,  1360,  4059,  3734,  4430,
    1528,   851,   993,  3734,  4693,  4064,  2954,  2077,  1738,  4430,
    3808,  1361,  1692,  4096,  1411,  1108,  4425,   967,  2829,  2872,
    1404,  2493,  4402,   993,  1362,  1692,  4642,   747,  2996,  1630,
    2834,  2830,  1020,  1020,   967,   976,   976,  1363,  1505,  3492,
    1364,  1020,  1020,  1020,   976,   976,   976,  4707,  4645,  1368,
    1141,  4709,  4708,  1414,  1415,  2873,  4708,  1631,  1529,  4754,
    3041,  1369,  2831,  4808,  4430,  1414,  1415,   856,  2332,  4997,
    4651,   993,  1135,  2872,  1692,  3735,   910,  1190,  4868,  1651,
    3735,  2901,  1372,  4869,  2830,  2873,  2874,   967,  4886,  1692,
    1373,  3734,  4653,  4423,  4480,  1465,  4654,  3734,  1109,  1692,
    3740,  1377,  1381,  1110,  4655,  4898,   711,   762,  1382,  1383,
    3491,  1384,  5158,  1414,  1415,  2831,  2874,  1385,  1530,  1386,
    1692,  1387,  2713,  3093,  5085,  1526,   967,  3097,  1620,  4999,
    4656,  1739,  1141,  2832,  5000,  1740,  2575,  1190,  1388,  2873,
     710,  3250,  5172,  4694,  5177,  5190,  1111,  5173,  1623,  3619,
    4383,   794,  1389,   790,  1414,  1415,  3156,  2875,  5192,   794,
     982,  1390,  1112,  5193,  1391,  3156,  3156,  5201,  3735,   868,
    2874,  3156,  5202,  3393,  3735,  1741,  5259,  1652,  2902,  4968,
    1392,  5260,  1393,  1405,  1394,   967,  2832,  2875,  1113,  3957,
     967,  3967,  4883,  4676,  4677,  1742,  4679,  3960,  1395,  3960,
    5381,  1667,  4683,   831,  1396,  5382,  1668,  4885,  1397,  4684,
    4685,  1531,  2259,  3677,  2911,    42,  2833,  4962,  1413,  3156,
     967,  1398,  1411,  3785,  3734,  1399,  1400,  4039,  1430,  1432,
    1445,  1670,   173,  1671,   763,  1718,  3689,  1685,  5123,   982,
    2876,  2875,  1714,  1020,  1722,  4000,   976,  1736,  4050,  3558,
    2077,  1411,   883,   717,   717,   717,  1762,  1784,  3734,  3734,
    1743,  3734,  3734,  1783,  1789,  1785,  1786,  1788,  1796,  2833,
    2876,  1801,  3220,  1797,  1798,  1807,   884,  1823,  1828,  3251,
    1839,  4462,  2924,  3734,  3734,  3734,  1843,  5158,   851,  1844,
    4027,  1846,  1849,   967,   967,   967,   967,  1532,  1851,  3252,
    1853,  3735,  1855,   967,  1416,  1417,  1418,  1419,  1420,  1421,
    1422,  1423,  3253,  1856,   764,  3963,  1416,  1417,  1418,  1419,
    1420,  1421,  1422,  1423,  2876,  1881,  1411,  4387,   174,  1183,
    3908,  1906,  1456,  1457,  1886,  3735,  3735,  1908,  3735,  3735,
    1907,  1923,  3224,  3225,  1533,   855,  5155,   175,  1927,  1929,
    1930,  5161,  1932,  1933,   856,  1944,  1744,  2872,   831,    53,
    3735,  3735,  3735,  4104,  1416,  1417,  1418,  1419,  1420,  1421,
    1422,  1423,  1947,  1948,  1949,  5098,  2077,  1414,  1415,  4112,
    4113,  1951,  1956,  3296,  3297,   861,  1958,  1957,   711,  1960,
    4812,  1962,  1745,  1425,  1968,  1411,  3254,  1975,  2024,  2954,
    2954,   967,  1986,  3049,  2034,  1416,  1417,  1418,  1419,  1420,
    1421,  1422,  1423,  1989,  2076,  2035,  1746,  2057,  2036,   711,
     176,  2074,   710,  2873,  2086,  1534,  1413,  2087,  3100,  5191,
     967,  2094,  2095,  2096,  1440,  4142,  4462,  2834,  4146,  2103,
    2135,  1747,  2137,   851,  2139,  2140,  3740,  4027,  2141,  2143,
    2144,  2157,   711,   710,  2908,  1413,   868,  2159,  1141,  2160,
    2161,  2877,  4027,   177,  4167,  2162,  4847,  2163,  4848,  4849,
    2164,  2165,  1795,   910,  2166,  2168,  2170,  1458,  1459,  2174,
    2189,  5320,  2201,  1561,  2209,  1748,   710,  3226,  2210,  2211,
    2834,  2877,  2213,   715,  4218,  2214,  4877,  2222,  2225,  2239,
     855,  4228,  2226,   711,  2244,  2245,   178,  2250,  2251,   856,
    2253,  5320,  2262,  3743,  2264,  2267,  1749,  2274,  3255,  2275,
    2278,  1248,   879,  2285,   113,  2909,   118,  2286,  2295,  2297,
    1413,  2298,  1020,  2309,   881,  2310,  3425,   710,   882,   883,
     861,  2311,  2312,  2315,   967,  2877,  1707,  2316,  2326,  2327,
    2332,  5320,  2331,  2373,  2375,  1760,  1460,  1461,  1462,  2376,
    2377,  2379,  2380,  2381,  5183,  2382,  4933,  2383,  2386,  2077,
    2388,  2389,  5323,  2436,  2393,   790,  5086,   967,  2363,  2364,
    2365,  2366,  2367,  2368,  2369,  1414,  1415,  2440,  1531,  2441,
    3256,  2449,  2458,  2462,  2465,  2468,  1338,   993,  2469,  1413,
    2470,  2487,  1020,  2471,  1535,   976,  5347,  2472,  2910,  5348,
    5349,   868,  2473,  2474,  1414,  1415,  2486,  2488,  2491,  2518,
    1883,   765,   766,  2520,   767,   768,   769,  4972,  1416,  1417,
    1418,  1419,  1420,  1421,  1422,  1423,  1645,  2527,  2528,  1486,
     179,  2535,  2538,   770,  2540,  2543,  2544,  2545,   967,   967,
    5250,  2546,  2547,  3740,  1411,  1831,  2570,   967,   967,   967,
     967,   967,   967,  4936,  2578,  2571,  1194,  1195,  4936,  2590,
     967,   967,  2591,   967,   967,  2592,  2599,   879,   967,   967,
    2593,  2594,   967,   967,   967,   967,  4866,   967,   967,  1414,
    1415,  2601,  2595,   882,   883,   967,   967,  2605,   967,   967,
     967,   967,   967,  2627,   967,   967,   967,   967,   967,   967,
     967,   967,   967,  2628,   967,  3103,  2629,   967,   967,   180,
    2630,  1533,   967,  2632,  2634,  2636,   967,   967,   967,  2648,
    2645,  2653,  2654,  2658,  2660,  2661,  2662,  2676,   902,   967,
     967,   967,  4463,   115,   967,  4464,  2678,   967,   967,   967,
     967,   967,   967,  3960,  5089,   908,  2683,  1052,  1414,  1415,
     910,  2684,  1708,   911,  2686,   967,   967,  2687,   967,   967,
     967,   967,   967,   967,   967,   967,   967,   967,   967,  3100,
    2693,   967,  2697,  2754,   181,   967,   182,   967,  1709,  4438,
    3664,  5367,  2701,  5055,  5055,  2705,  2721,  4027,  2730,  4421,
    2722,  2786,  4027,   717,  2727,  2742,  4027,  2731,  5385,  2743,
    5055,  2744,  2752,  2751,  1423,  3513,  3156,  2076,  2793,  2768,
     183,  2769,  5367,  3744,  5168,  1528,   993,  2777,  2770,  2911,
     967,  2778,   184,  5385,  2076,  2790,  1416,  1417,  1418,  1419,
    1420,  1421,  1422,  1423,  2792,  2841,  2804,  2799,  2076,  2805,
    1020,  3250,  2806,  2842,   993,  2851,  2861,  2869,  1413,  2076,
   -2052,  2893,  4866,  2894,  2892,  1416,  1417,  1418,  1419,  1420,
    1421,  1422,  1423,  3695,  2965,  4856,  3100,  2967,  3034,  1661,
    1662,  3021,  3013,  1529,  3036,  3042,  3043,   794,  3050,  3747,
    3314,  1020,  4500,   902,  3053,  3054,  3055,  4463,  1248,  3056,
    4464,  3057,  1528,  3058,  3059,  3060,  3061,  3062,  3063,  4857,
     908,  3095,   631,  3064,  3065,   910,  3066,  3315,   911,  3067,
    1773,  3068,  3069,  4465,  4466,  1698,  1699,  3070,   185,  3071,
    3740,  4467,  3072,  3073,  4936,  3740,  3074,  4142,  3075,  1531,
    4069,  1417,  1418,  1419,  1420,  1421,  1422,  1423,  3076,  3077,
    3665,  3789,  3078,  3100,  4510,  1710, -2052, -2052,  3099,  3096,
    1529,  3079,  4027,  3082,  3083,  4549,  1700,  3316,  3084,  5089,
    3317,  3085,  3086,  3087,  3088,  1453,  3101,  -783,  3318,  1701,
    3129,  1535,   646,  3102,  4482,  3120,  3130, -1426,  4071,  3251,
    4072,  1317,  3168,  3170,  2499,  3185,  1366,  3319,  1370, -1796,
    3201,  3199,  2227,  3202, -2262,  3200,  3204,  3207,  4570,  3252,
    3218,  1418,  1419,  1420,  1421,  1422,  1423,  1414,  1415,  1702,
    2500,  3222,  3253,  3740,  3239,  3236,  3248,  3240,  3249,  3740,
    1711,  3262,  1703,  4858,  3268,  2501,  1531,  3271,  4073,  3276,
     967,  3283,  3285,  3289,  3320,  3287,  3293,   967,  2502,   967,
     967,  3301,  3300,  3101,  3304, -1796,   993,  3707,  3313,  1704,
    3102,   967,   967,  3338,   967,   967,  3103,  5343,  1911,  3339,
    2077,  3412,  1533,   647,  2780,  3808,  4610,  3418,  4465,  4466,
    3421,  3743,   993,  5327,  3337,  3743,  4496,  3405,  3743,  3743,
    3351, -1796,  3743, -1796,  5346,  3353,  3368,  3413,  1912,  3399,
    2503,  2504,  3321,  3401,  2513,  2514,  3254,  5343,  3393,  -988,
    3415, -1796,  3420,  1531,  3427,  3322, -1796,  3428,  3429,  3447,
    4859,  3451,  1532,  -783,  1705,  3448,  3456,  3458,  2505,  4308,
   -1796,  3497,  3469,  2226,  3470,  3474,  3471, -1796,  4860,  3506,
    3472,  3664,  3473,  3498,  3475, -1796,  3499,  3507,  2227,  1913,
    3508,  3501,  3584,  1914,  -783,  3579,  3740, -1796,  3587,  1190,
     648,  3588,  4861,  3103,  2226,  3595,  3596,  4665,  3592,  1533,
   -1796,  3612,  3615,  3603,   711, -1796,  -958,   711,  3617,  2227,
    3616,  3618,  3680,  3621, -1796,  3651,  1574,  2575,  3654,  3250,
    3740,  3740,  3619,  3740,  3740,  1546,  3657,  2506,  4866,  1532,
    3660,  3663,  1248,  3678,  3698,  3770,  3775,  3779,   710,  3323,
    4027,   710,  3324,  3791,  4027,  3740,  3740,  3740,   790,   967,
    3771,  3795,   993,   967,  3796,  3809,   790,  3812,  3255,   967,
    3813,  3819,  3818,  3820,  3821,  1712,  3822,  3829,   967,  3823,
    3103,  3830,  3831,  3843,  3844,  3849,  1533,  3878,  3857,  1248,
    3868,  2507,  -783,  3872, -1796,  -937,  3874,  3883,  2228,  3882,
    3156,  4069,  3885,  3887,   649,  3889,   993,  3890,  1416,  1417,
    1418,  1419,  1420,  1421,  1422,  1423,  3900, -1796,  3891,  1661,
    4074,  3939,  3901,  -783,  3943,  4075,  3942, -1796,  1738,  2228,
    3325,  4076,  3947,  3948,  1630,  3950,  3964,  3958,  -783,  3965,
    3256,  3665,  3969,  3156,  4142,  4070,  4146,  4737,  1915,  4071,
    3968,  4072,  3970,  3877,  3984,  3881,  3987,  3989,  3996,  2868,
    4006,  4002,  1631,  2227,  4007,  1630,   967,  3251,  4010,  4015,
     967,  4077,  1535,  4013,  4018,  4022,  1020,  4047,   967,  4058,
     967,  4066,  4021,  4101,  4097,  1248,  1248,  3252,  4784,  4102,
    4116,  4117,  4161,  1631,  4128,  4173,  4107,  4794,  4178,  4073,
    3253,  4796,  4862,  4811,  3326,  4179,  4309,  4193,  4240,  4256,
    4273,  4279,  4283,   650,  4272,  4187, -1796,  4284,  4298,  4285,
     967,  4303,   993,  4306,  4302,  4307,  4324,  1916,  1020,  4286,
    4295,  3744,  4292,   651,  4329,  3744,  4342,  5394,  3744,  3744,
   -1796, -1688,  3744,  2954, -1687,  2954,  4375,  4344,  4351,  4380,
    4078,  1739,  4357,  4370,  4358,  1740,  4371,   663,  4374,  4391,
    2129,  4396,  4405,  1248,   967,   967,   967,  4406,  3742,  1535,
    4407,  4408,  4414,  3464,  3327,  4426,  4435,  -937,   652,  4439,
   -1907,  4445,  -786,   653,  3254,  4472,  4473,  4478, -1796,  2929,
    4484,  1917,  4486,   967,  4091,  1741,  4493,  4501,   967,  4502,
    4079,  4504,  3328,  4505,   711,  4508,   967,  4310,   967,  4511,
    4512,  4514,  2883,  4523,   654,  1742,   664,  -783,   655,  4545,
    2821,  4533,  2821,  4550,  2836,  2837,   656,  2839,  2884,  4552,
    -491,  2229,  4246,  4561,  4563,  4880,  4567,  -958,   710,  4569,
    4573,  4576, -1796,  4584,  4586,  4593,  1535,  4594,  -783,   665,
    4033,  4034,  4598, -1796, -1796,  4041,  4589,  4080,  4596,  4603,
    4597,  4604,  4616,  4142,  4142,  4617,  4611,  3156,   657,  3704,
    4634,  4649,  4648,  4619, -1796,  2905, -1796,  4650,  4659,  2916,
    1743,  4277,  4549,  4660,   666,  4621,  4643,  4635,  4636,  4637,
    4658,  4910,  4063,  4674,  4675,  1190,  4678,  4680,  4681,  4092,
    4094,  4095,  4638,  4640,  3877,  1004,  3255,  2956,  2957,  2958,
    2959,  4641,  2915,  1918,  4687,  2915,  2915,  1773,  2230,  4704,
    4383,  4711,   658,  4669,   881,  4717,  4720,   113,  4721,  4727,
    4729,  4639,  3610,  4733,  1809,   667,  4739, -1796,  2992,  2575,
    1661,  4074,  4740,  4751,  1810,  3743,  4075,  4752,  3393,  2230,
    4755,  4974,  4076,  4757,  1811,  1919,  4756,  4758,  4770,  4081,
    -509,  3016,  4788,  3018,  4789,  4810,  4799,  4805,  1812,  1813,
    1814,  4813,  4806,  3174,  1487,  4815,  1744,  4819,  3256,  4823,
    4824,  4825,  4828,  -785,  1815,  4829,  4833,  4830,  4875,  4840,
    4881,  4082,  4077,  4027,  1686,  1687, -1796,  4850,  4884,  4890,
    2885,  4892,  4901,  -783,  4908, -1796,  4909,  4895, -1796,  4911,
   -1796,  4917,  1745,  4937,  4921, -1796,  4931,  4939,  4938,  4946,
    4951,  4948,  4950,  4957,   967,  4952,  4953,   967,  4958,  3389,
    4976,  4961,  4963,  4626,  -783,  4975,  1746,  4980,  4983,  4985,
    4986,  2844,  4991,  4994,  4311,  5004,  5007,  5026,  5033,  5027,
    5038,  5039, -1796,  4257,  5061,  5045,  5048,  5047, -2667,  5044,
    5051,  1747,  5057,  4258,  -110,  5058,  5069,  5067,  5073,   668,
    5081,  4078,  2077,  4259,  5079,  5082,  5091,  5094,  2886,  5101,
    5102,  3049,  3049,  5093,  5096,  5097,  5116,  4260,  4261,  4262,
   -1796,  5128,  1995,  1996,  1997,  1998,  1999,  5125,  5127,  3960,
    5129,  1661,  1662,  4263,  2887,  1748,  5135,  5140, -1796,  5141,
    5133,  5143,  5151, -1796,  5115,  5152,  5153,  5154,  5164,  5169,
    5176,  4079,  5171,  5180,  5120,  5188,  5216,  5214,  5215,  5225,
    5226,   967,  5230,  5235, -1796,   967,  1749,  5236,   967,  5248,
     967,   967, -1796,  5239,  5244,  5252,   115,  5240,   669,  5253,
    4454,  4142,  4843,  5263, -1796,  5254,   640,  5266,  5267,   641,
    5269,  5277,  5280,  5282,  5285,  5286,  2888, -1796,   670,  5287,
    5295,  5291, -1796,  5293,  5294,  5148,  5298,  5303,  4080,  5302,
    5309, -1796,  5313,  5314,  3217,  5316,  5328,  5330,  5357,  5159,
    5350,  4499,  5368,  5393,  5391,  5397,  5395,  5351,  5378,  2000,
    2001,  2002,  2003,  5398,  5379,   714,  5396,  4235,  3766,  3662,
    4736,  3653,  1816,   671,  4738,  3656,  5197,   967,   653,  3650,
    4734,  3659,  4160,  4746,  2412,  4904,  4012,  5217,  5131,  1817,
    5304,   711,   711,   711,  2212,  5305,   672,  4906,  5377,  5034,
     993,  5318,   802,   993,  1261,  3234,  3192,  4271,  5010,   673,
    5336, -1796,  5324,  5137,  5012,  3744,  5292,  4915,  5013,  5019,
    5138,   674,  3282,  4786,  4925,   710,   710,   710,  2889,  4583,
    3743,  3743,  4926,  5020, -1796,  4942,  5021,   675,  5237,  4172,
    4081,  5022,  2917,  1536, -1796,  4532,  3765,  4419,  2921,  4590,
    3094,  3743,  4385,  3751,   790,  3753,  4841,  5079,  3750,  4689,
    5256,  5301,  5262,   676,  -785,  4993,  5261,  3092,  3024,  4544,
    3749,  2004,  4082,  2005,  2006,  2007,  4433,  4051,  4434,  4481,
    4100,  4098,  2008,  4710,  5268,  3941,  4483,  5075,  4995,  4853,
    4897,  4264,  4867,  4874,  4900,  4703,  3742,  3505,  2397,  4446,
    3742,  3573,  4176,  3742,  3742,  3691,   993,  3742,  4265,  3438,
     967,  3445,  3027,  4724,  3028,  5283,  3025,   677,  2199,   967,
     967,  1272,  2646,  1689,  5159,  4115,  1690,  1818,  3221,  3620,
    2644,  5197,  2374, -1796,  1995,  1996,  1997,  1998,  1999,   967,
     967,  3578,   967,  3219,  3788,   967,   967,   967,   967,   967,
    3208,  2324,   967,  4282,   980,  2569,  1180, -1796,  2190,  1179,
    2420,   967,  2776,  2009,  3409,  3457,   967,  2761,   967,  5251,
     967,   967,  3952,   967,   967,  4970,  4959,  3244,   967,   967,
     967,  3334,  3052,  2033,   967,   967,   967,  5297,   967,  1819,
     967,  3245,   967,  3246,   967,  5247,   967,  3247,  5389,  5344,
    5387,   967,  4821,  1985,  4624, -1796,  1820,  4135,  5083,  1277,
    4326,  4631,  5084,  1953,  4960,   113,  3846,   967,  4832,  4111,
    4964,  4852,  2846,  1834,   678,  2451,  2010,  2011,  3180,  4266,
    1508,  1782,  1509,   967,   967,  2077,  3786,  4612,   967,  5344,
     967,  2000,  2001,  2002,  2003,  3787,  4267,  1510,   993,  3743,
    4294,  3743,  2077,  4605,  1504,  1511,  2198,  3291,  3743, -1796,
    2618,  1255,  3446,  3292,  2542,  2633,  2077,  3599,  3743,  3187,
    3794, -1796,  5245,  3743,  4409,  5296,  5399,  2077,  4682,  5392,
    4497,  4609,  4822,  2421,  3463,  4539,  3649,  5243,   798,  1867,
    2589, -1796,  3281, -1796,  2600,   799,  1866,  2586,  2585,  3215,
     759,  1173,  3433,  3122,  3468,  4809,   967,  1772,  4268,  3121,
    4945,  1178,  2156,  1830,  1488,  3476,  4566,  3483,  3484,  3485,
    3486,  2415,  3488,  3489,  2416,  4269,  2417,  4177,  1071,  1072,
    1073,  4503,  5257,  5200,  4542,  4753,  5203,  4122,     0,     0,
    3744,  3744,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2004, -1796,  2005,  2006,  2007,     0,     0,
       0,  3744,  3743,     0,  2008,     0,     0,     0,  2012,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3583,     0,  1692,  2013,  2014,  3743,     0,     0,
       0,     0,     0,     0,  3589,     0,  4768,     0,  3743,  3743,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3743,     0,     0,     0,     0,
       0, -1796, -1796,     0,     0, -1796,     0, -1796,     0,     0,
       0,     0, -1796,     0,   115,     0,     0,     0,     0,  5274,
       0,     0,     0,     0,     0,  2009,     0,     0,  4814,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2821,     0,     0,  2821,
    2821,     0,     0,  2821,  2821,  2821,  2821,  2821,  2821,  2821,
    2821,     0,     0,  2821,     0,  2821,     0,  2821,  3645,     0,
       0,     0,     0,     0,     0,  1773,     0,     0,  2010,  2011,
       0,     0,     0,     0,     0,     0,  3743,     0,     0,     0,
       0,     0,     0,     0,     0,  3743,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3743,     0,     0,     0,  3743,
    3743,   711,     0,     0,     0,     0,   715,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3744,
       0,  3744,     0,     0,     0,     0,     0,     0,  3744,     0,
       0,     0,     0,     0,     0,   710,     0,     0,  3744,     0,
       0,  5380,     0,  3744, -1796,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3738,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3743,     0,  3743,     0,     0,   967,
    3742,   967,     0,   967,     0,   967,     0,     0,  3743,     0,
       0,     0,     0,     0,  3743,     0,     0,     0,     0,     0,
   -1796,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2012,     0,     0,     0,     0,     0,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,     0,  2013,  2014,     0,
       0,     0,  3744,     0,     0,     0,     0,     0, -1796,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   967, -1796,  3744,     0,  3743,
    3743, -1796,  3743,     0,     0,     0,     0,     0,  3744,  3744,
       0,     0,     0,     0,  2821,     0,     0,     0,     0,     0,
       0,     0, -1796,     0,     0,  3744,     0,     0,     0,     0,
   -1796,     0,     0,     0,     0,   967,     0,     0,     0,     0,
       0,     0, -1796,     0,     0,     0,     0,     0,  3743,     0,
       0,  3743,     0,     0,     0, -1796,     0,   967,     0,     0,
   -1796,  3743,     0,     0,     0,   967,     0,  1549,  1550, -1796,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3743,  3743,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   967,   967,  3743,  3743,     0,  3743,  3743,
       0,  -939,  -939,  1552,     0,     0,  3743,  3743,  3743,     0,
       0,  -939,  3743,     0,     0,     0,     0,  1555,     0,   967,
    3743,  3743,  3743,  1556,  1557,     0,  3744,  1558,     0,   967,
       0,   967,     0,   967,     0,  3744,  2333,     0,     0, -1796,
       0,     0,     0,     0,     0,  3744,     0,     0,     0,  3744,
    3744,  1560,  3977,     0,     0,     0,   717,     0,     0,     0,
       0,     0, -1796,     0,     0,  1561,     0,     0,  3988,  1562,
       0,     0, -1796,     0,     0,   967,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4005,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1567,  2334,
    2335,  2336,  2337,  2338,  1456,  1457,  2339,  2340,  2341,     0,
    2342,  2343,  2344,  2345,  2346,  2347,  2348,  2349,  2350,  2351,
       0,  2352,  2353,     0,  3744,     0,  3744,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3744,     0,
       0,     0,     0,     0,  3744,  3742,  3742,     0,     0,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
       0, -1796,     0,     0,     0,     0,  3742,     0,     0,     0,
       0,     0,     0,     0,     0,  1571,     0,     0,     0,     0,
       0,     0,  1572,     0,     0, -1796,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1573,     0,     0,     0,     0,     0,     0,  3744,
    3744,     0,  3744,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1796,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1458,
    1459,     0,     0,     0,     0,     0,     0,     0,  3744,     0,
       0,  3744,  1575,     0,     0,     0,     0,     0,     0,     0,
       0,  3744,     0,     0,     0,     0,     0,     0,  2821,     0,
    1576,     0,     0,     0,     0,     0,     0, -1796,     0,     0,
       0,     0,  3744,  3744,     0,     0,     0,     0,     0, -1796,
       0,     0,  4168,     0,     0,  3744,  3744,     0,  3744,  3744,
       0,     0,     0,     0,     0,     0,  3744,  3744,  3744, -1796,
       0, -1796,  3744,     0,     0,     0,     0,     0,  1079,     0,
    3744,  3744,  3744,     0,     0,  1580,     0,  2915,  2915,     0,
       0,     0,     0,     0,  1581,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4215,  3742,     0,  3742,  4215,     0,     0,
    4215,  4215,     0,  3742,  4215,     0,     0,     0,     0,     0,
       0,     0, -1796,  3742,     0,     0,     0,     0,  3742,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1143,     0,
    4242,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   967,     0,     0,   967,     0,   967,     0,     0,     0,
       0,     0,     0,  1586,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1079,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1796,     0,     0, -1796,     0, -1796,     0,     0,     0,     0,
   -1796,     0,     0,     0,   967,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3742,     0,     0,
    1587,  1588,  1589,     0,     0,     0,     0,  1590,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   967,   967,
       0,  1300,  3742,     0,  1591,     0,     0,  1592,     0,     0,
       0,     0,     0,  3742,  3742,  2354,  2355,     0,     0,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
    3742,  1331,     0,     0,     0,     0,  2356,     0,  2357,  2358,
    2359,     0,     0,  1594,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   967,     0,   967,     0,     0,   967,   967,
       0,   967,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   967,     0,     0,     0,     0,   967,     0,     0,
     967,     0,     0,   967,   967,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   967,     0,  1406,     0,     0,
    4404,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3742,     0,     0,     0,     0,     0,     0,     0,     0,
    3742,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3742,     0,     0,     0,  3742,  3742,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1597,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   967,  1600,
    1601,  1602,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1549,  1550,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3742,
       0,  3742,     0,     0,     0,     0,     0,     0,     0,     0,
    1552,  1684,     0,  3742,     0,     0,     0,     0,     0,  3742,
       0,     0,     0,     0,  1555,     0,     0,     0,     0,     0,
    1556,  1557,     0,     0,  1558,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     967,   967,     0,     0,  2821,  2821,  2821,  2821,  1560,     0,
       0,     0,     0,     0,     0,  3977,     0,     0,     0,     0,
       0,     0,  1561,     0,     0,     0,  1562,     0,     0,     0,
       0,     0,  2915,  2915,  3742,  3742,     0,  3742,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1567,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1841,     0,     0,     0,     0,
       0,     0,     0,  3742,     0,     0,  3742,     0,     0,     0,
       0,     0,     0,     0,  4242,     0,  3742,     0,     0,     0,
       0,     0,     0,     0,   967,     0,     0,  3738,  1879,     0,
       0,     0,  4582,     0,     0,     0,  4585,  3742,  3742,  4242,
       0,     0,     0,     0,     0,     0,     0,     0,   967,     0,
    3742,  3742,  1571,  3742,  3742,     0,     0,     0,     0,  1572,
    4614,  3742,  3742,  3742,     0,     0,     0,  3742,     0,     0,
       0,     0,   967,     0,     0,  3742,  3742,  3742,     0,  1573,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1966,
    1967,     0,     0,   967,     0,   967,     0,     0,  1977,  1978,
       0,     0,  1981,  1982,     0,     0,     0,     0,     0,     0,
       0,  1990,  1991,     0,  1992,  1993,     0,     0,     0,  2017,
       0,     0,     0,  2026,  2027,  2028,  2029,     0,  2031,  1575,
       0,     0,     0,     0,     0,     0,  2039,  2040,     0,  2043,
    2044,     0,  4670,     0,     0,  2048,     0,  1576,  2051,  2052,
    2053,  2054,  2055,  2056,     0,  2058,     0,     0,  2061,  2062,
       0,     0,     0,  2065,     0,     0,     0,  2068,  2072,  2073,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2080,  2081,  2082,     0,     0,     0,     0,     0,  2088,  2089,
    2090,  2091,  2092,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1580,     0,     0,     0,  2104,     0,     0,     0,
       0,  1581,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2123,     0,  2128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4728,     0,  2218,     0,  2220,  2221,     0,
       0,  2175,     0,     0,     0,     0,  2821,     0,     0,     0,
       0,   967,  2235,     0,     0,  2240,  2241,     0,  2243,     0,
    1586,  2246,  2247,  2248,  2249,     0,     0,     0,  2252,     0,
       0,  4760,     0,  2263,     0,     0,     0,     0,  2268,  2269,
    2270,  2271,  2272,     0,     0,     0,  2276,  2277,     0,     0,
       0,     0,  2287,  2288,  2289,  2290,     0,  2293,  2294,     0,
    2296,     0,     0,  2299,     0,     0,     0,     0,   967,     0,
       0,   967,  4215,  4215,     0,     0,     0,  1587,  1588,  1589,
       0,  4242,     0,     0,  1590,     0,     0,   967,     0,     0,
       0,     0,     0,  3738,     0,   967,   967,     0,     0,     0,
       0,  1591,     0,     0,  1592,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1594,   967,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   967,     0,
       0,   967,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   967,     0,  4872,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1079,     0,     0,     0,     0,     0,     0,  2423,     0,
    2424,  2425,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4903,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1597,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1600,  1601,  1602,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   967,
       0,  4215,     0,  4215,   967,     0,     0,     0,     0,     0,
    3738,     0,   967,     0,     0,     0,     0,     0,     0,     0,
    4215,     0,     0,     0,     0,  4215,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,   967,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2597,     0,     0,     0,  1879,     0,     0,     0,     0,   967,
       0,     0,     0,     0,  4215,     0,     0,     0,     0,  2604,
    5028,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   967,  4215,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4215,  4215,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4215,     0,     0,
       0,     0,     0,     0,     0,  5109,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2659,     0,     0,
       0,  2663,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2659,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   967,     0,     1,     0,     0,     2,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     3,     0,     0,     0,     4,     0,     0,     0,
       0,     0,     0,     0,   711,     0,     0,     0,  4215,     0,
       5,     6,     0,     0,   967,     0,     0,  4215,     7,     0,
       0,     0,     0,     8,     9,     0,     0,  3738,     0,     0,
       0,  4215,  3738,     0,     0,   967,   967,     0,   710,    10,
       0,  5198,  5199,     0,     0,  2734,  2736,  2738,     0,     0,
     967,  2791,     0,     0,     0,     0,     0,     0,     0,    11,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     967,     0,     0,     0,     0,     0,     0,     0,     0,  2772,
       0,    12,     0,     0,     0,     0,     0,  2774,     0,  2775,
     967,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,   967,  5246,    15,    16,     0,  4215,     0,  4215,     0,
       0,     0,     0,     0,     0,     0,    17,     0,     0,     0,
    3738,     0,     0,     0,     0,     0,  3738,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2922,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2961,    20,     0,
      21,     0,     0,     0,     0,    22,     0,     0,    23,     0,
       0,     0,     0,  2973,     0,     0,     0,     0,     0,     0,
       0,  4215,  4215,    24,  4215,     0,     0,     0,     0,     0,
       0,    25,     0,     0,    26,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3019,  3020,     0,     0,    27,   967,     0,     0,  3033,     0,
       0,     0,     0,     0,     0,     0,   967,   967,     0,     0,
    4215,    28,     0,  4215,     0,    29,     0,     0,     0,     0,
       0,     0,     0,  3738,     0,     0,     0,     0,     0,     0,
       0,  5353,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4215,  4215,     0,     0,     0,     0,
       0,   967,     0,     0,     0,     0,     0,  3738,  3738,     0,
    3738,  3738,     0,     0,     0,     0,     0,     0,  4215,  4215,
    4215,  5386,     0,     0,  4215,  3051,     0,     0,     0,  3123,
       0,     0,  3738,  3738,  3738,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     1,     0,    32,     2,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     4,     0,    33,     0,
       0,    34,  3165,    35,     0,     0,    36,     0,     0,     0,
       5,     6,     0,     0,     0,     0,    37,    38,     7,     0,
       0,     0,     0,     8,     9,     0,    39,     0,    40,     0,
       0,     0,     0,     0,     0,     0,     0,    41,     0,    10,
       0,     0,     0,    42,     0,     0,     0,     0,     0,     0,
       0,    43,     0,     0,     0,     0,    44,    45,    46,    11,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    12,     0,     0,     0,     0,     0,     0,  3216,    47,
       0,    13,    14,     0,     0,     0,    48,     0,     0,  3143,
       0,     0,     0,    15,    16,  1549,  1550,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      49,  1552,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,    50,     0,     0,  1555,    51,     0,     0,     0,
       0,  1556,  1557,     0,    52,  1558,     0,     0,    20,     0,
      21,     0,     0,     0,     0,    22,     0,     0,    23,     0,
       0,     0,     0,     0,     0,     0,     0,    53,     0,  1560,
       0,     0,     0,    24,     0,    54,     0,     0,     0,     0,
       0,    25,     0,  1561,    26,     0,     0,  1562,     0,     0,
       0,    55,    56,    57,    58,     0,     0,     0,     0,     0,
       0,  3303,     0,     0,    27,     0,    59,     0,     0,     0,
    3311,  3312,     0,     0,  -638,     0,  1567,     0,     0,     0,
       0,    28,     0,     0,     0,    29,     0,     0,     0,     0,
    3340,  3341,     0,  3342,     0,     0,  3345,  3346,  3347,  3348,
    3349,     0,     0,    60,     0,     0,     0,     0,     0,     0,
       0,     0,  3355,     0,     0,     0,     0,  3356,     0,  3357,
       0,  3358,  3359,     0,  3360,     0,     0,     0,     0,  3365,
    3366,  3367,     0,     0,    61,  3370,  3371,  3372,     0,  3373,
       0,  3375,     0,  3377,     0,  3379,     0,  3380,     0,  3144,
       0,     0,  3383,  1571,     0,    62,     0,     0,     0,     0,
    1572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1573,     0,    30,     0,  2123,     0,     0,     0,     0,     0,
       0,     0,     0,  3145,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    32,     0,  3467,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1575,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,    34,     0,    35,     0,     0,    36,  2175,  1576,     0,
       0,     0,     0,     0,     0,     0,    37,    38,     0,     0,
       0,     0,     0,     0,     0,     0,    39,     0,    40,     0,
       0,     0,     0,     0,     0,     0,     0,    41,  3143,     0,
       0,     0,     0,    42,  1549,  1550,     0,     0,     0,     0,
       0,    43,     0,     0,     0,     0,    44,    45,    46,     0,
       0,     0,     0,  1580,     0,     0,     0,     0,     0,   972,
       0,     0,  1581,     0,     0,     0,     0,     0,     0,     0,
    1552,     0,     0,     0,     0,     0,     0,     0,     0,    47,
       0,     0,     0,     0,  1555,     0,    48,     0,     0,     0,
    1556,  1557,     0,     0,  1558,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3146,     0,     0,     0,  1560,     0,
    3606,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      49,     0,  1561,     0,     0,     0,  1562,     0,     0,  3514,
    3515,  1586,    50,     0,     0,  3516,    51,  3517,     0,  3518,
    3519,    42,     0,     0,    52,     0,     0,     0,     0,     0,
       0,     0,     0,  -638,     0,  1567,     0,  3520,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    53,     0,     0,
       0,     0,     0,     0,     0,    54,  3681,  3682,  3683,  3684,
       0,     0,     0,     0,     0,     0,     0,     0,  1587,  1588,
    1589,     0,     0,     0,     0,  1590,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    59,  3521,     0,     0,
    3522,     0,  1591,     0,     0,  1592,     0,     0,  3523,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3144,     0,
       0,     0,  1571,     0,     0,     0,     0,  3319,     0,  1572,
       0,     0,     0,    60,     0,     0,     0,     0,     0,     0,
       0,  1594,     0,     0,  3524,     0,     0,     0,     0,  1573,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    61,     0,     0,     0,     0,     0,
       0,     0,  3525,     0,  3526,    53,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    62,     0,     0,     0,     0,
    3527,  3528,     0,     0,     0,     0,  3760,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1575,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1576,     0,     0,
    3782,     0,  3529,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3530,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1597,  3531,     0,  3816,     0,     0,     0,
       0,     0,     0,  3532,  3533,     0,  3534,  1600,  1601,  1602,
       0,     0,  1580,     0,     0,     0,     0,     0,   972,     0,
       0,  1581,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3147,     0,     0,  1879,  -638,     0,     0,
       0,     0,     0,  3535,  3536,  3537,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3863,     0,
       0,     0,  3538,  3539,  3540,     0,  3866,     0,     0,  3541,
       0,     0,  3542,  3146,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3543,
    3544,  3545,     0,     0,  3894,  3895,     0,     0,     0,     0,
    1586,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3920,     0,     0,     0,  3546,  3547,     0,     0,     0,     0,
    3931,     0,  3933,     0,  3935,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3325,     0,     0,     0,     0,     0,     0,  1587,  1588,  1589,
       0,     0,     0,     0,  1590,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1591,  1545,     0,  1592,     0,     0,  1546,     0,  1547,
       0,     0,  1548,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1549,  1550,     0,     0,     0,     0,     0,     0,
       0,     0,  3548,     0,     0,     0,  3549,     0,     0,     0,
    1594,     0,     0,     0,     0,     0,     0,     0,  3550,     0,
       0,     0,     0,  1551,     0,     0,  -939,  -939,  1552,  1553,
       0,     0,     0,     0,  1554,     0,  -939,     0,     0,     0,
       0,     0,  1555,  4019,    53,     0,     0,     0,  1556,  1557,
       0,     0,  1558,     0,     0,     0,     0,     0,     0,     0,
       0,  1559,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1560,     0,  3551,     0,
       0,  3552,     0,     0,  3553,  3554,  3555,  3556,     0,     0,
    1561,     0,     0,     0,  1562,     0,     0,     0,     0,     0,
       0,     0,  1563,  1564,     0,     0,     0,     0,     0,  1565,
       0,     0,     0,     0,     0,     0,     0,  1566,     0,     0,
       0,     0,     0,  1567,     0,     0,     0,  3557,  3558,     0,
       0,     0,  1597,     0,  1568,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1600,  1601,  1602,     0,
    4157,  4158,     0,     0,     0,  3559,     0,  1569,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   974,     0,     0,     0,  -638,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1570,     0,
    1571,     0,     0,     0,     0,     0,     0,  1572,     0,     0,
       0,     0,  1545,     0,     0,     0,     0,  1546,     0,  1547,
       0,     0,  1548,     0,     0,     0,     0,  1573,     0,     0,
       0,     0,  1549,  1550,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1574,     0,     0,     0,  3560,     0,     0,     0,     0,     0,
       0,     0,     0,  1551,     0,     0,     0,     0,  1552,  1553,
       0,     0,     0,     0,  1554,     0,  5231,     0,     0,     0,
       0,     0,  1555,     0,     0,     0,     0,  1575,  1556,  1557,
       0,     0,  1558,     0,     0,     0,     0,     0,     0,     0,
       0,  1559,     0,     0,     0,  1576,     0,     0,     0,  1577,
       0,     0,     0,     0,     0,     0,  1560,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1561,     0,     0,     0,  1562,     0,     0,     0,     0,     0,
       0,     0,  1563,  1564,     0,     0,     0,  1578,     0,  1565,
       0,     0,     0,  1579,     0,  3782,     0,  1566,     0,     0,
    1580,     0,     0,  1567,     0,     0,     0,     0,     0,  1581,
       0,     0,     0,     0,  1568,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4320,
    4323,     0,     0,     0,     0,     0,     0,  1569,     0,     0,
       0,  1582,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4336,     0,     0,  1583,  1584,  1585,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1570,     0,
    1571,     0,     0,     0,  4347,     0,  2175,  1572,  1586,  4352,
    4353,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4360,     0,     0,     0,  1573,  4362,     0,
       0,  4363,     0,     0,  4364,  4365,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1574,     0,     0,     0,     0,  3022,  4377,     0,     0,     0,
    1546,     0,  1547,     0,     0,  1587,  1588,  1589,     0,     0,
       0,     0,  1590,     0,     0,  1549,  1550,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1575,     0,  1591,
       0,     0,  1592,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1576,  1551,     0,     0,  1577,
       0,  1552,     0,     0,     0,  1593,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1555,     0,     0,  1594,  4428,
       0,  1556,  1557,     0,     0,  1558,     0,     0,     0,     0,
       0,     0,     0,     0,  1559,     0,     0,  1578,     0,     0,
       0,     0,     0,  1579,     0,     0,     0,     0,     0,  1560,
    1580,     0,  1595,     0,     0,  1596,     0,     0,     0,  1581,
       0,     0,     0,  1561,     0,     0,     0,  1562,     0,     0,
       0,     0,     0,     0,     0,  1563,     0,     0,     0,     0,
       0,     0,  3023,     0,     0,     0,     0,     0,     0,     0,
    1566,  1582,     0,     0,     0,     0,  1567,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1583,  1584,  1585,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4506,  4507,     0,     0,     0,     0,     0,     0,     0,
    1569,     0,     0,     0,     0,     0,     0,     0,  1586,     0,
    1597,  1598,  1599,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1600,  1601,  1602,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1571,     0,     0,     0,     0,     0,     0,
    1572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1587,  1588,  1589,     0,     0,
    1573,     0,  1590,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1591,
    3514,  3515,  1592,  1574,     0,  4575,  3516,     0,  3517,     0,
    3518,  3519,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1593,     0,     0,  3520,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1594,     0,
    1575,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3782,     0,     0,     0,     0,  1576,     0,
       0,     0,  1577,  3782,     0,     0,     0,     0,     0,     0,
       0,     0,  1595,     0,     0,  1596,     0,     0,  3521,     0,
       0,  3522,     0,     0,  4618,     0,  4620,     0,     0,  3523,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1579,     0,  3319,     0,
       0,     0,     0,  1580,     0,     0,     0,     0,     0,     0,
       0,     0,  1581,     0,     0,  3524,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3525,     0,  3526,     0,     0,     0,     0,
    1597,  1598,  1599,     0,     0,     0,     0,     0,     0,  1583,
       0,  3527,  3528,     0,  1600,  1601,  1602,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3514,  3515,     0,     0,     0,     0,  3516,     0,
    3517,  1586,  3518,  3519,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3529,     0,     0,     0,     0,     0,     0,
    3520,     0,     0,     0,     0,     0,  3530,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4715,     0,  3531,     0,     0,     0,     0,
       0,     0,     0,     0,  3532,  3533,     0,  3534,  1587,  1588,
    1589,     0,     0,     0,     0,  1590,     0,     0,     0,     0,
    3521,     0,  4722,  3522,     0,     0,     0,     0,     0,     0,
       0,  3523,  1591,     0,     0,  1592,     0,     0,     0,     0,
       0,     0,     0,     0,  3535,  3536,  3537,     0,     0,     0,
    3319,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3538,  3539,  3540,     0,  3524,     0,     0,
    3541,  1594,     0,  3542,     0,     0,     0,     0,     0,  4769,
       0,     0,  4775,     0,     0,     0,     0,     0,     0,     0,
    3543,  3544,  3545,     0,     0,  3525,     0,  3526,  4790,     0,
       0,     0,  5174,     0,     0,  1595,  4801,  4802,  1596,     0,
       0,     0,     0,  3527,  3528,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3546,  3547,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3325,  4320,     0,     0,  3529,     0,     0,     0,     0,
       0,     0,  4873,     0,     0,     0,     0,     0,  3530,  2175,
       0,     0,  4827,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4320,     0,  3531,     0,     0,
       0,     0,     0,  1597,     0,     0,  3532,  3533,     0,  3534,
       0,     0,     0,     0,     0,     0,     0,  1600,  1601,  1602,
       0,     0,     0,  3548,     0,     0,     0,  3549,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3550,
       0,     0,     0,     0,     0,     0,  3535,  3536,  3537,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3538,  3539,  3540,     0,     0,
       0,     0,  3541,     0,     0,  3542,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3543,  3544,  3545,     0,     0,     0,     0,  3551,
       0,     0,  3552,     0,     0,  3553,  3554,  3555,  3556,     0,
    4918,     0,     0,     0,     0,  4923,     0,     0,     0,     0,
       0,     0,     0,  4929,     0,     0,     0,  3546,  3547,     0,
       0,     0,  4984,     0,     0,  4987,  4988,  4989,  4990,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3557,  3558,
       0,     0,     0,  3325,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2175,
       0,     0,     0,     0,     0,     0,  3559,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3548,     0,     0,     0,  3549,
    5006,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3550,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5042,
       0,     0,  5100,     0,     0,     0,     0,     0,     0,     0,
       0,  5110,  5111,     0,     0,     0,     0,     0,     0,     0,
    5119,     0,     0,     0,     0,  3560,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3551,     0,     0,  3552,     0,     0,  3553,  3554,  3555,
    3556,     0,     0,  5092,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3557,  3558,     0,  5124,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3559,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5142,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5162,  5163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5178,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5213,     0,     0,     0,     0,     0,  3560,     0,     0,
       0,     0,  5224,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   197,   198,     0,   827,
     200,   201,   202,   203,  1873,     0,   204,     0,     0,     0,
       0,   205,     0,     0,   828,     0,   207,   208,   209,   210,
     829,   212,     0,   213,     0,     0,  1874,   214,   831,   832,
     833,   215,   834,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,   835,   836,   223,   224,     0,
     225,   226,   837,   838,   228,     0,   229,   230,   231,   232,
     839,   234,     0,   840,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,   841,   842,   255,
       0,     0,     0,   843,   256,   844,     0,   257,   845,   846,
       0,   258,   259,   260,   847,   848,   849,  5306,  5307,     0,
       0,   850,   263,   851,     0,     0,  1875,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,  5345,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   853,     0,   290,   291,   292,   293,   294,   854,
     855,   295,   296,     0,   297,   298,   299,   300,   301,   856,
       0,   302,   303,     0,     0,     0,   857,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   858,   310,   859,     0,
     312,     0,   313,     0,   860,     0,   314,   315,     0,   316,
     861,     0,   317,   318,     0,     0,     0,   862,   320,   321,
     322,   863,     0,   323,   324,   325,     0,     0,   326,     0,
    3782,     0,   864,   327,   328,   329,   865,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,   866,   340,   341,     0,     0,     0,     0,     0,
     867,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,   868,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
     869,   370,   371,   372,   373,   870,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   871,   381,     0,     0,
     872,   383,   873,   384,     0,   385,   874,   875,   876,   877,
     878,   390,   391,   392,   393,   394,     0,   879,   395,   396,
       0,     0,   397,   398,   399,   400,   401,   880,  1075,   881,
     402,   403,     0,   882,   883,   404,     0,   405,   406,  1876,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,   884,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     885,   886,   425,   887,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   888,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,   889,   890,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   891,     0,   892,   469,
     470,   471,   472,     0,   473,  1877,   894,   475,   476,   477,
     478,     0,   895,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,   896,   897,   509,   510,     0,
       0,   511,   512,   898,   514,   515,   516,   899,   900,   517,
     518,   519,   520,   901,   521,   522,     0,     0,   523,   524,
     525,   526,     0,   902,   527,   528,     0,   903,   904,   905,
     906,     0,     0,     0,     0,     0,   533,   534,     0,   907,
     908,   909,   536,   537,     0,   910,   538,   539,   911,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   912,   548,     0,     0,   913,   914,   915,
     549,   916,   550,     0,     0,   551,   917,     0,   918,   552,
       0,   553,   554,   919,   920,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   921,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,   922,   923,     0,   571,
     572,   573,   924,   574,   575,   576,     0,   577,   925,   926,
     578,   927,   579,     0,   928,   929,   930,   931,   932,   580,
     581,     0,   933,   582,   934,   583,   935,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,   593,
    1878,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,   936,   937,     0,     0,     0,   938,   939,
       0,     0,     0,     0,   940,     0,   941,     0,     0,     0,
       0,   942,     0,     0,     0,   943,   944,   197,   198,     0,
     827,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,   828,     0,   207,   208,   209,
     210,   829,   212,     0,   213,     0,     0,   830,   214,   831,
     832,   833,   215,   834,     0,   216,   217,   218,  2069,   219,
       0,   220,   221,     0,     0,   222,   835,   836,   223,   224,
       0,   225,   226,   837,   838,   228,     0,   229,   230,   231,
     232,   839,   234,     0,   840,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,   253,   254,     0,   841,   842,
     255,     0,     0,     0,   843,   256,   844,     0,   257,   845,
     846,     0,   258,   259,   260,   847,   848,   849,     0,     0,
       0,     0,   850,   263,   851,     0,     0,   852,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,   272,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,   277,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   853,     0,   290,   291,   292,   293,   294,
     854,   855,   295,   296,     0,   297,   298,   299,   300,   301,
     856,     0,   302,   303,     0,     0,     0,   857,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   858,   310,   859,
       0,   312,     0,   313,     0,   860,     0,   314,   315,     0,
     316,   861,     0,   317,   318,     0,     0,     0,   862,   320,
     321,   322,   863,     0,   323,   324,   325,     0,     0,   326,
       0,     0,     0,   864,   327,   328,   329,   865,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,     0,
       0,     0,   335,     0,   336,     0,     0,   337,   338,     0,
    2070,   339,     0,   866,   340,   341,     0,     0,     0,     0,
       0,   867,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,   868,     0,     0,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,   869,   370,   371,   372,   373,   870,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   871,   381,     0,
       0,   872,   383,   873,   384,     0,   385,   874,   875,   876,
     877,   878,   390,   391,   392,   393,   394,     0,   879,   395,
     396,     0,     0,   397,   398,   399,   400,   401,   880,  1075,
     881,   402,   403,     0,   882,   883,   404,     0,   405,   406,
       0,   407,   408,   409,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,   884,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   885,   886,   425,   887,   426,     0,   427,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   888,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,   452,   453,   889,   890,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   462,     0,
     463,   464,     0,   465,   466,   467,     0,   891,     0,   892,
     469,   470,   471,   472,     0,   473,   893,   894,   475,   476,
     477,   478,     0,   895,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,   486,
       0,   487,   488,   489,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,   504,   505,   506,   507,   508,   896,   897,   509,   510,
       0,     0,   511,   512,   898,   514,   515,   516,   899,   900,
     517,   518,   519,   520,   901,   521,   522,     0,     0,   523,
     524,   525,   526,     0,   902,   527,   528,     0,   903,   904,
     905,   906,     0,     0,     0,     0,  2071,   533,   534,     0,
     907,   908,   909,   536,   537,     0,   910,   538,   539,   911,
     540,   541,     0,   542,   543,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   912,   548,     0,     0,   913,   914,
     915,   549,   916,   550,     0,     0,   551,   917,     0,   918,
     552,     0,   553,   554,   919,   920,     0,     0,     0,     0,
       0,     0,   557,   558,   559,     0,   560,   561,   562,   563,
       0,     0,   921,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,   922,   923,     0,
     571,   572,   573,   924,   574,   575,   576,     0,   577,   925,
     926,   578,   927,   579,     0,   928,   929,   930,   931,   932,
     580,   581,     0,   933,   582,   934,   583,   935,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,     0,
       0,     0,   627,   628,   936,   937,     0,     0,     0,   938,
     939,     0,     0,     0,     0,   940,     0,   941,     0,     0,
       0,     0,   942,     0,     0,     0,   943,   944,   197,   198,
       0,   827,   200,   201,   202,   203,     0,     0,   204,     0,
       0,     0,     0,   205,     0,     0,   828,     0,   207,   208,
     209,   210,   829,   212,     0,   213,     0,     0,   830,   214,
     831,   832,   833,   215,   834,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,   835,   836,   223,
     224,     0,   225,   226,   837,   838,   228,     0,   229,   230,
     231,   232,   839,   234,     0,   840,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,   841,
     842,   255,     0,     0,     0,   843,   256,   844,     0,   257,
     845,   846,     0,   258,   259,   260,   847,   848,   849,     0,
       0,     0,     0,   850,   263,   851,     0,     0,   852,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   853,     0,   290,   291,   292,   293,
     294,   854,   855,   295,   296,     0,   297,   298,   299,   300,
     301,   856,     0,   302,   303,     0,     0,     0,   857,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   858,   310,
     859,     0,   312,     0,   313,     0,   860,     0,   314,   315,
       0,   316,   861,     0,   317,   318,     0,     0,     0,   862,
     320,   321,   322,   863,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,   864,   327,   328,   329,   865,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,   866,   340,   341,     0,     0,     0,
       0,     0,   867,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,   868,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,   869,   370,   371,   372,   373,   870,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   871,   381,
       0,     0,   872,   383,   873,   384,     0,   385,   874,   875,
     876,   877,   878,   390,   391,   392,   393,   394,     0,   879,
     395,   396,     0,     0,   397,   398,   399,   400,   401,   880,
    1075,   881,   402,   403,     0,   882,   883,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
     884,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   885,   886,   425,   887,   426,     0,   427,   428,
     429,     0,   430,     0,   431,   432,   433,   434,   435,     0,
     888,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,   449,   450,     0,   451,   452,   453,   889,   890,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   891,     0,
     892,   469,   470,   471,   472,     0,   473,   893,   894,   475,
     476,   477,   478,     0,   895,   480,    42,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
     486,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,   896,   897,   509,
     510,     0,     0,   511,   512,   898,   514,   515,   516,   899,
     900,   517,   518,   519,   520,   901,   521,   522,     0,     0,
     523,   524,   525,   526,     0,   902,   527,   528,     0,   903,
     904,   905,   906,     0,     0,     0,     0,     0,   533,   534,
       0,   907,   908,   909,   536,   537,     0,   910,   538,   539,
     911,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   912,   548,     0,     0,   913,
     914,   915,   549,   916,   550,     0,     0,   551,   917,     0,
     918,   552,     0,   553,   554,   919,   920,     0,     0,     0,
      53,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   921,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,   922,   923,
       0,   571,   572,   573,   924,   574,   575,   576,     0,   577,
     925,   926,   578,   927,   579,     0,   928,   929,   930,   931,
     932,   580,   581,     0,   933,   582,   934,   583,   935,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,   593,     0,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,   936,   937,     0,     0,     0,
     938,   939,     0,     0,     0,     0,   940,     0,   941,     0,
       0,     0,     0,   942,     0,     0,     0,   943,   944,   197,
     198,     0,   827,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,   828,     0,   207,
     208,   209,   210,   829,   212,     0,   213,     0,     0,   830,
     214,   831,   832,   833,   215,   834,     0,   216,   217,   218,
       0,   219,     0,   220,   221,     0,     0,   222,   835,   836,
     223,   224,     0,   225,   226,   837,   838,   228,     0,   229,
     230,   231,   232,   839,   234,     0,   840,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,   253,   254,     0,
     841,   842,   255,     0,     0,     0,   843,   256,   844,     0,
     257,   845,   846,     0,   258,   259,   260,   847,   848,   849,
       0,     0,     0,     0,   850,   263,   851,     0,     0,   852,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,   272,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,   277,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   853,     0,   290,   291,   292,
     293,   294,   854,   855,   295,   296,     0,   297,   298,   299,
     300,   301,   856,     0,   302,   303,     0,     0,     0,   857,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   858,
     310,   859,     0,   312,     0,   313,     0,   860,     0,   314,
     315,     0,   316,   861,     0,   317,   318,     0,     0,     0,
     862,   320,   321,   322,   863,     0,   323,   324,   325,     0,
       0,   326,     0,     0,     0,   864,   327,   328,   329,   865,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,     0,     0,     0,   335,     0,   336,     0,     0,   337,
     338,     0,     0,   339,     0,   866,   340,   341,     0,     0,
       0,     0,     0,   867,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,   868,     0,     0,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,   869,   370,   371,   372,   373,   870,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   871,
     381,     0,     0,   872,   383,   873,   384,     0,   385,   874,
     875,   876,   877,   878,   390,   391,   392,   393,   394,     0,
     879,   395,   396,     0,     0,   397,   398,   399,   400,   401,
     880,  1075,   881,   402,   403,     0,   882,   883,   404,     0,
     405,   406,     0,   407,   408,   409,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,   884,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   885,   886,   425,   887,   426,     0,   427,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   888,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,   452,   453,   889,
     890,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     462,     0,   463,   464,     0,   465,   466,   467,     0,   891,
       0,   892,   469,   470,   471,   472,     0,   473,   893,   894,
     475,   476,   477,   478,     0,   895,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,   486,     0,   487,   488,   489,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,   504,   505,   506,   507,   508,   896,   897,
     509,   510,     0,     0,   511,   512,   898,   514,   515,   516,
     899,   900,   517,   518,   519,   520,   901,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   902,   527,   528,     0,
     903,   904,   905,   906,     0,     0,     0,     0,     0,   533,
     534,     0,   907,   908,   909,   536,   537,     0,   910,   538,
     539,   911,   540,   541,     0,   542,   543,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   912,   548,     0,     0,
     913,   914,   915,   549,   916,   550,     0,     0,   551,   917,
       0,   918,   552,     0,   553,   554,   919,   920,     0,     0,
       0,     0,     0,     0,   557,   558,   559,     0,   560,   561,
     562,   563,     0,     0,   921,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,   922,
     923,     0,   571,   572,   573,   924,   574,   575,   576,     0,
     577,   925,   926,   578,   927,   579,     0,   928,   929,   930,
     931,   932,   580,   581,     0,   933,   582,   934,   583,   935,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,     0,     0,     0,   627,   628,   936,   937,     0,     0,
       0,   938,   939,  1076,     0,     0,     0,   940,     0,   941,
       0,     0,     0,     0,   942,     0,     0,     0,   943,   944,
     197,   198,     0,   827,   200,   201,   202,   203,     0,     0,
     204,     0,     0,     0,     0,   205,     0,     0,   828,     0,
     207,   208,   209,   210,   829,   212,     0,   213,     0,     0,
     830,   214,   831,   832,   833,   215,   834,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,   835,
     836,   223,   224,     0,   225,   226,   837,   838,   228,     0,
     229,   230,   231,   232,   839,   234,     0,   840,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,   249,     0,   250,   251,   252,   253,   254,
       0,   841,   842,   255,     0,     0,     0,   843,   256,   844,
       0,   257,   845,   846,     0,   258,   259,   260,   847,   848,
     849,     0,     0,     0,     0,   850,   263,   851,     0,     0,
     852,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   853,     0,   290,   291,
     292,   293,   294,   854,   855,   295,   296,     0,   297,   298,
     299,   300,   301,   856,     0,   302,   303,     0,     0,     0,
     857,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     858,   310,   859,     0,   312,     0,   313,     0,   860,     0,
     314,   315,     0,   316,   861,     0,   317,   318,     0,     0,
       0,   862,   320,   321,   322,   863,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,   864,   327,   328,   329,
     865,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,   866,   340,   341,     0,
       0,     0,     0,     0,   867,   343,     0,   344,     0,   345,
       0,   346,   347,     0,     0,   868,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,   869,   370,   371,   372,   373,   870,
     374,   375,     0,     0,     0,     0,   376,   377,   378,   379,
     871,   381,     0,     0,   872,   383,   873,   384,     0,   385,
     874,   875,   876,   877,   878,   390,   391,   392,   393,   394,
       0,   879,   395,   396,     0,     0,   397,   398,   399,   400,
     401,   880,  1075,   881,   402,   403,     0,   882,   883,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   411,
     412,   413,   884,   414,     0,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   885,   886,   425,   887,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   888,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
     889,   890,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     891,     0,   892,   469,   470,   471,   472,     0,   473,   893,
     894,   475,   476,   477,   478,     0,   895,   480,     0,     0,
       0,   481,   482,   483,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,   896,
     897,   509,   510,     0,     0,   511,   512,   898,   514,   515,
     516,   899,   900,   517,   518,   519,   520,   901,   521,   522,
       0,     0,   523,   524,   525,   526,     0,   902,   527,   528,
       0,   903,   904,   905,   906,     0,     0,     0,     0,     0,
     533,   534,     0,   907,   908,   909,   536,   537,     0,   910,
     538,   539,   911,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   912,   548,     0,
       0,   913,   914,   915,   549,   916,   550,     0,     0,   551,
     917,     0,   918,   552,     0,   553,   554,   919,   920,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,     0,     0,   921,     0,     0,   565,   566,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
     922,   923,     0,   571,   572,   573,   924,   574,   575,   576,
       0,   577,   925,   926,   578,   927,   579,     0,   928,   929,
     930,   931,   932,   580,   581,     0,   933,   582,   934,   583,
     935,   584,   585,     0,     0,     0,   586,   587,   588,   589,
     590,   591,   592,   593,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,     0,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,   936,   937,     0,
       0,     0,   938,   939,  2677,     0,     0,     0,   940,     0,
     941,     0,     0,     0,     0,   942,     0,     0,     0,   943,
     944,   197,   198,     0,   827,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,   828,
       0,   207,   208,   209,   210,   829,   212,     0,   213,     0,
       0,   830,   214,   831,   832,   833,   215,   834,     0,   216,
     217,   218,     0,   219,     0,   220,   221,     0,     0,   222,
     835,   836,   223,   224,     0,   225,   226,   837,   838,   228,
       0,   229,   230,   231,   232,   839,   234,     0,   840,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,   253,
     254,     0,   841,   842,   255,     0,     0,     0,   843,   256,
     844,     0,   257,   845,   846,     0,   258,   259,   260,   847,
     848,   849,     0,     0,     0,     0,   850,   263,   851,     0,
       0,   852,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,   272,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
     277,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   853,     0,   290,
     291,   292,   293,   294,   854,   855,   295,   296,     0,   297,
     298,   299,   300,   301,   856,     0,   302,   303,     0,     0,
       0,   857,   305,  2733,   306,     0,     0,     0,   307,     0,
     308,   858,   310,   859,     0,   312,     0,   313,     0,   860,
       0,   314,   315,     0,   316,   861,     0,   317,   318,     0,
       0,     0,   862,   320,   321,   322,   863,     0,   323,   324,
     325,     0,     0,   326,     0,     0,     0,   864,   327,   328,
     329,   865,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,     0,     0,     0,   335,     0,   336,     0,
       0,   337,   338,     0,     0,   339,     0,   866,   340,   341,
       0,     0,     0,     0,     0,   867,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,   868,     0,     0,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,   869,   370,   371,   372,   373,
     870,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   871,   381,     0,     0,   872,   383,   873,   384,     0,
     385,   874,   875,   876,   877,   878,   390,   391,   392,   393,
     394,     0,   879,   395,   396,     0,     0,   397,   398,   399,
     400,   401,   880,  1075,   881,   402,   403,     0,   882,   883,
     404,     0,   405,   406,     0,   407,   408,   409,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,   884,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   885,   886,   425,   887,   426,
       0,   427,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   888,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,   452,
     453,   889,   890,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   462,     0,   463,   464,     0,   465,   466,   467,
       0,   891,     0,   892,   469,   470,   471,   472,     0,   473,
     893,   894,   475,   476,   477,   478,     0,   895,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,   486,     0,   487,   488,   489,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,   504,   505,   506,   507,   508,
     896,   897,   509,   510,     0,     0,   511,   512,   898,   514,
     515,   516,   899,   900,   517,   518,   519,   520,   901,   521,
     522,     0,     0,   523,   524,   525,   526,     0,   902,   527,
     528,     0,   903,   904,   905,   906,     0,     0,     0,     0,
       0,   533,   534,     0,   907,   908,   909,   536,   537,     0,
     910,   538,   539,   911,   540,   541,     0,   542,   543,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   912,   548,
       0,     0,   913,   914,   915,   549,   916,   550,     0,     0,
     551,   917,     0,   918,   552,     0,   553,   554,   919,   920,
       0,     0,     0,     0,     0,     0,   557,   558,   559,     0,
     560,   561,   562,   563,     0,     0,   921,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,   922,   923,     0,   571,   572,   573,   924,   574,   575,
     576,     0,   577,   925,   926,   578,   927,   579,     0,   928,
     929,   930,   931,   932,   580,   581,     0,   933,   582,   934,
     583,   935,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,     0,     0,     0,   627,   628,   936,   937,
       0,     0,     0,   938,   939,     0,     0,     0,     0,   940,
       0,   941,     0,     0,     0,     0,   942,     0,     0,     0,
     943,   944,   197,   198,     0,   827,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,     0,
     828,     0,   207,   208,   209,   210,   829,   212,     0,   213,
       0,     0,   830,   214,   831,   832,   833,   215,   834,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,   835,   836,   223,   224,     0,   225,   226,   837,   838,
     228,     0,   229,   230,   231,   232,   839,   234,     0,   840,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,   841,   842,   255,     0,     0,     0,   843,
     256,   844,     0,   257,   845,   846,     0,   258,   259,   260,
     847,   848,   849,     0,     0,     0,     0,   850,   263,   851,
       0,     0,   852,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   853,     0,
     290,   291,   292,   293,   294,   854,   855,   295,   296,     0,
     297,   298,   299,   300,   301,   856,     0,   302,   303,     0,
       0,     0,   857,   305,  2735,   306,     0,     0,     0,   307,
       0,   308,   858,   310,   859,     0,   312,     0,   313,     0,
     860,     0,   314,   315,     0,   316,   861,     0,   317,   318,
       0,     0,     0,   862,   320,   321,   322,   863,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,   864,   327,
     328,   329,   865,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,   866,   340,
     341,     0,     0,     0,     0,     0,   867,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,   868,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,   869,   370,   371,   372,
     373,   870,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   871,   381,     0,     0,   872,   383,   873,   384,
       0,   385,   874,   875,   876,   877,   878,   390,   391,   392,
     393,   394,     0,   879,   395,   396,     0,     0,   397,   398,
     399,   400,   401,   880,  1075,   881,   402,   403,     0,   882,
     883,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,   884,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   885,   886,   425,   887,
     426,     0,   427,   428,   429,     0,   430,     0,   431,   432,
     433,   434,   435,     0,   888,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,   449,   450,     0,   451,
     452,   453,   889,   890,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   891,     0,   892,   469,   470,   471,   472,     0,
     473,   893,   894,   475,   476,   477,   478,     0,   895,   480,
       0,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,   486,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,   896,   897,   509,   510,     0,     0,   511,   512,   898,
     514,   515,   516,   899,   900,   517,   518,   519,   520,   901,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   902,
     527,   528,     0,   903,   904,   905,   906,     0,     0,     0,
       0,     0,   533,   534,     0,   907,   908,   909,   536,   537,
       0,   910,   538,   539,   911,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   912,
     548,     0,     0,   913,   914,   915,   549,   916,   550,     0,
       0,   551,   917,     0,   918,   552,     0,   553,   554,   919,
     920,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   921,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,   922,   923,     0,   571,   572,   573,   924,   574,
     575,   576,     0,   577,   925,   926,   578,   927,   579,     0,
     928,   929,   930,   931,   932,   580,   581,     0,   933,   582,
     934,   583,   935,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,   593,     0,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,   936,
     937,     0,     0,     0,   938,   939,     0,     0,     0,     0,
     940,     0,   941,     0,     0,     0,     0,   942,     0,     0,
       0,   943,   944,   197,   198,     0,   827,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,   828,     0,   207,   208,   209,   210,   829,   212,     0,
     213,     0,     0,   830,   214,   831,   832,   833,   215,   834,
       0,   216,   217,   218,     0,   219,     0,   220,   221,     0,
       0,   222,   835,   836,   223,   224,     0,   225,   226,   837,
     838,   228,     0,   229,   230,   231,   232,   839,   234,     0,
     840,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,   253,   254,     0,   841,   842,   255,     0,     0,     0,
     843,   256,   844,     0,   257,   845,   846,     0,   258,   259,
     260,   847,   848,   849,     0,     0,     0,     0,   850,   263,
     851,     0,     0,   852,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,   272,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,   277,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   853,
       0,   290,   291,   292,   293,   294,   854,   855,   295,   296,
       0,   297,   298,   299,   300,   301,   856,     0,   302,   303,
       0,     0,     0,   857,   305,  2737,   306,     0,     0,     0,
     307,     0,   308,   858,   310,   859,     0,   312,     0,   313,
       0,   860,     0,   314,   315,     0,   316,   861,     0,   317,
     318,     0,     0,     0,   862,   320,   321,   322,   863,     0,
     323,   324,   325,     0,     0,   326,     0,     0,     0,   864,
     327,   328,   329,   865,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,     0,     0,     0,   335,     0,
     336,     0,     0,   337,   338,     0,     0,   339,     0,   866,
     340,   341,     0,     0,     0,     0,     0,   867,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,   868,     0,
       0,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,   869,   370,   371,
     372,   373,   870,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   871,   381,     0,     0,   872,   383,   873,
     384,     0,   385,   874,   875,   876,   877,   878,   390,   391,
     392,   393,   394,     0,   879,   395,   396,     0,     0,   397,
     398,   399,   400,   401,   880,  1075,   881,   402,   403,     0,
     882,   883,   404,     0,   405,   406,     0,   407,   408,   409,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,   884,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   885,   886,   425,
     887,   426,     0,   427,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   888,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,   452,   453,   889,   890,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   462,     0,   463,   464,     0,   465,
     466,   467,     0,   891,     0,   892,   469,   470,   471,   472,
       0,   473,   893,   894,   475,   476,   477,   478,     0,   895,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,   486,     0,   487,   488,   489,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,   504,   505,   506,
     507,   508,   896,   897,   509,   510,     0,     0,   511,   512,
     898,   514,   515,   516,   899,   900,   517,   518,   519,   520,
     901,   521,   522,     0,     0,   523,   524,   525,   526,     0,
     902,   527,   528,     0,   903,   904,   905,   906,     0,     0,
       0,     0,     0,   533,   534,     0,   907,   908,   909,   536,
     537,     0,   910,   538,   539,   911,   540,   541,     0,   542,
     543,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     912,   548,     0,     0,   913,   914,   915,   549,   916,   550,
       0,     0,   551,   917,     0,   918,   552,     0,   553,   554,
     919,   920,     0,     0,     0,     0,     0,     0,   557,   558,
     559,     0,   560,   561,   562,   563,     0,     0,   921,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,   922,   923,     0,   571,   572,   573,   924,
     574,   575,   576,     0,   577,   925,   926,   578,   927,   579,
       0,   928,   929,   930,   931,   932,   580,   581,     0,   933,
     582,   934,   583,   935,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,     0,     0,     0,   627,   628,
     936,   937,     0,     0,     0,   938,   939,     0,     0,     0,
       0,   940,     0,   941,     0,     0,     0,     0,   942,     0,
       0,     0,   943,   944,   197,   198,     0,   827,   200,   201,
     202,   203,     0,     0,   204,     0,     0,     0,     0,   205,
       0,     0,   828,     0,   207,   208,   209,   210,   829,   212,
       0,   213,     0,     0,   830,   214,   831,   832,   833,   215,
     834,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,   835,   836,   223,   224,     0,   225,   226,
     837,   838,   228,     0,   229,   230,   231,   232,   839,   234,
       0,   840,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,   841,   842,   255,     0,     0,
       0,   843,   256,   844,     0,   257,   845,   846,     0,   258,
     259,   260,   847,   848,   849,     0,     0,     0,     0,   850,
     263,   851,     0,     0,   852,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     853,     0,   290,   291,   292,   293,   294,   854,   855,   295,
     296,     0,   297,   298,   299,   300,   301,   856,     0,   302,
     303,     0,     0,     0,   857,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   858,   310,   859,     0,   312,     0,
     313,     0,   860,     0,   314,   315,     0,   316,   861,     0,
     317,   318,     0,     0,     0,   862,   320,   321,   322,   863,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
     864,   327,   328,   329,   865,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
     866,   340,   341,     0,     0,     0,     0,     0,   867,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,   868,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,   869,   370,
     371,   372,   373,   870,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   871,   381,     0,     0,   872,   383,
     873,   384,     0,   385,   874,   875,   876,   877,   878,   390,
     391,   392,   393,   394,     0,   879,   395,   396,     0,     0,
     397,   398,   399,   400,   401,   880,  1075,   881,   402,   403,
       0,   882,   883,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,   884,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   885,   886,
     425,   887,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   888,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,   889,   890,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   891,     0,   892,   469,   470,   471,
     472,     0,   473,   893,   894,   475,   476,   477,   478,     0,
     895,   480,     0,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,   896,   897,   509,   510,     0,     0,   511,
     512,   898,   514,   515,   516,   899,   900,   517,   518,   519,
     520,   901,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   902,   527,   528,     0,   903,   904,   905,   906,     0,
       0,     0,     0,     0,   533,   534,     0,   907,   908,   909,
     536,   537,     0,   910,   538,   539,   911,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   912,   548,     0,     0,   913,   914,   915,   549,   916,
     550,     0,     0,   551,   917,     0,   918,   552,     0,   553,
     554,   919,   920,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   921,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,   922,   923,     0,   571,   572,   573,
     924,   574,   575,   576,     0,   577,   925,   926,   578,   927,
     579,     0,   928,   929,   930,   931,   932,   580,   581,     0,
     933,   582,   934,   583,   935,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,   936,   937,     0,     0,     0,   938,   939,     0,     0,
       0,     0,   940,     0,   941,     0,     0,     0,     0,   942,
       0,     0,     0,   943,   944,   197,   198,     0,   827,   200,
     201,   202,   203,     0,     0,   204,     0,     0,     0,     0,
     205,     0,     0,   828,     0,   207,   208,   209,   210,   829,
     212,     0,   213,     0,     0,   830,   214,   831,   832,   833,
     215,   834,     0,   216,   217,   218,     0,   219,     0,   220,
     221,     0,     0,   222,   835,   836,   223,   224,     0,   225,
     226,   837,   838,   228,     0,   229,   230,   231,   232,   839,
     234,     0,   840,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,   253,   254,     0,   841,   842,   255,     0,
       0,     0,   843,   256,   844,     0,   257,   845,   846,     0,
     258,   259,   260,   847,   848,   849,     0,     0,     0,     0,
     850,   263,   851,     0,     0,   852,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,   272,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,   277,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   853,     0,   290,   291,   292,   293,   294,   854,   855,
     295,   296,     0,   297,   298,   299,   300,   301,   856,     0,
     302,   303,     0,     0,     0,   857,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   858,   310,   859,     0,   312,
       0,   313,     0,   860,     0,   314,   315,     0,   316,   861,
       0,   317,   318,     0,     0,     0,   862,   320,   321,   322,
     863,     0,   323,   324,   325,     0,     0,   326,     0,     0,
       0,   864,   327,   328,   329,   865,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,   337,   338,     0,     0,   339,
       0,   866,   340,   341,     0,     0,     0,     0,     0,   867,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
     868,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,   869,
     370,   371,   372,   373,   870,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   871,   381,     0,     0,   872,
     383,   873,   384,     0,   385,   874,   875,   876,   877,   878,
     390,   391,   392,   393,   394,     0,   879,   395,   396,     0,
       0,   397,   398,   399,   400,   401,   880,  1075,   881,   402,
     403,     0,   882,   883,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,   884,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   885,
     886,   425,   887,   426,     0,   427,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   888,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,   452,   453,   889,   890,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   462,     0,   463,   464,
       0,   465,   466,   467,     0,   891,     0,   892,   469,   470,
     471,   472,     0,   473,   893,   894,   475,   476,   477,   478,
       0,   895,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,   486,     0,   487,
     488,   489,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,   504,
     505,   506,   507,   508,   896,   897,   509,   510,     0,     0,
     511,   512,   898,   514,   515,   516,   899,   900,   517,   518,
     519,   520,   901,   521,   522,     0,     0,   523,   524,   525,
     526,     0,   902,   527,   528,     0,   903,   904,   905,   906,
       0,     0,     0,     0,     0,   533,   534,     0,   907,   908,
     909,   536,   537,     0,   910,   538,   539,   911,   540,   541,
       0,   542,   543,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   912,   548,     0,     0,   913,   914,   915,   549,
     916,   550,     0,     0,   551,   917,     0,   918,   552,     0,
     553,   554,   919,   920,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,   561,   562,   563,     0,     0,
     921,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,   922,   923,     0,   571,   572,
     573,   924,   574,   575,   576,     0,   577,   925,   926,   578,
     927,   579,     0,   928,   929,   930,   931,   932,   580,   581,
       0,   933,   582,   934,   583,   935,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,     0,     0,     0,
     627,   628,   936,   937,     0,     0,     0,   938,   939,     0,
       0,     0,     0,   940,     0,  1330,     0,     0,     0,     0,
     942,     0,     0,     0,   943,   944,   197,   198,     0,   827,
     200,   201,   202,   203,  2431,     0,   204,     0,     0,     0,
       0,  2432,     0,     0,   828,     0,   207,   208,   209,   210,
     829,   212,     0,   213,     0,     0,   830,   214,   831,   832,
     833,   215,   834,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,   835,   836,   223,   224,     0,
     225,   226,   837,   838,   228,     0,   229,   230,   231,   232,
     839,   234,     0,   840,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,   841,   842,   255,
       0,     0,     0,   843,   256,   844,     0,   257,   845,   846,
       0,   258,   259,   260,   847,   848,   849,     0,     0,     0,
       0,   850,   263,   851,     0,     0,   852,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   853,     0,   290,   291,   292,   293,   294,   854,
     855,   295,   296,     0,   297,   298,   299,   300,   301,   856,
       0,   302,   303,     0,     0,     0,   857,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   858,   310,   859,     0,
     312,     0,   313,     0,   860,     0,   314,   315,     0,   316,
     861,     0,   317,   318,     0,     0,     0,   862,   320,   321,
     322,   863,     0,   323,   324,   325,     0,     0,   326,     0,
       0,     0,   864,   327,   328,   329,   865,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,   866,   340,   341,     0,     0,     0,     0,     0,
     867,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,   868,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
     869,   370,   371,   372,   373,   870,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   871,   381,     0,     0,
     872,   383,   873,   384,     0,   385,   874,   875,   876,   877,
     878,   390,   391,   392,   393,   394,     0,   879,   395,   396,
       0,     0,   397,   398,   399,   400,   401,   880,     0,   881,
     402,   403,     0,   882,   883,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,   884,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     885,   886,   425,   887,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   888,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,   889,   890,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   891,     0,   892,   469,
     470,   471,   472,     0,   473,   893,   894,   475,   476,   477,
     478,     0,   895,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,   896,   897,   509,   510,     0,
       0,   511,   512,   898,   514,   515,   516,   899,   900,   517,
     518,   519,   520,   901,   521,   522,     0,     0,   523,   524,
     525,   526,     0,   902,   527,   528,     0,   903,   904,   905,
     906,     0,     0,     0,     0,     0,   533,   534,     0,   907,
     908,   909,   536,   537,     0,   910,   538,   539,   911,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   912,   548,     0,     0,   913,   914,   915,
     549,   916,   550,     0,     0,   551,   917,     0,   918,   552,
       0,   553,   554,   919,   920,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   921,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,   922,   923,     0,   571,
     572,   573,   924,   574,   575,   576,     0,   577,   925,   926,
     578,   927,   579,     0,   928,   929,   930,   931,   932,   580,
     581,     0,   933,   582,   934,   583,   935,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,   593,
       0,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,   936,   937,     0,     0,     0,   938,   939,
       0,     0,     0,     0,   940,     0,   941,     0,     0,     0,
       0,   942,     0,     0,     0,   943,   944,   197,   198,     0,
     827,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,   828,     0,   207,   208,   209,
     210,   829,   212,     0,   213,     0,     0,   830,   214,   831,
     832,   833,   215,   834,     0,   216,   217,   218,     0,   219,
       0,   220,   221,     0,     0,   222,   835,   836,   223,   224,
       0,   225,   226,   837,   838,   228,     0,   229,   230,   231,
     232,   839,   234,     0,   840,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,   253,   254,     0,   841,   842,
     255,     0,     0,     0,   843,   256,   844,     0,   257,   845,
     846,     0,   258,   259,   260,   847,   848,   849,     0,     0,
       0,     0,   850,   263,   851,     0,     0,   852,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,   272,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,   277,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   853,     0,   290,   291,   292,   293,   294,
     854,   855,   295,   296,     0,   297,   298,   299,   300,   301,
     856,     0,   302,   303,     0,     0,     0,   857,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   858,   310,   859,
       0,   312,     0,   313,     0,   860,     0,   314,   315,     0,
     316,   861,     0,   317,   318,     0,     0,     0,   862,   320,
     321,   322,   863,     0,   323,   324,   325,     0,     0,   326,
       0,     0,     0,   864,   327,   328,   329,  3302,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,     0,
       0,     0,   335,     0,   336,     0,     0,   337,   338,     0,
       0,   339,     0,   866,   340,   341,     0,     0,     0,     0,
       0,   867,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,   868,     0,     0,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,   869,   370,   371,   372,   373,   870,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   871,   381,     0,
       0,   872,   383,   873,   384,     0,   385,   874,   875,   876,
     877,   878,   390,   391,   392,   393,   394,     0,   879,   395,
     396,     0,     0,   397,   398,   399,   400,   401,   880,  1075,
     881,   402,   403,     0,   882,   883,   404,     0,   405,   406,
       0,   407,   408,   409,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,   884,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   885,   886,   425,   887,   426,     0,   427,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   888,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,   452,   453,   889,   890,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   462,     0,
     463,   464,     0,   465,   466,   467,     0,   891,     0,   892,
     469,   470,   471,   472,     0,   473,   893,   894,   475,   476,
     477,   478,     0,   895,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,   486,
       0,   487,   488,   489,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,   504,   505,   506,   507,   508,   896,   897,   509,   510,
       0,     0,   511,   512,   898,   514,   515,   516,   899,   900,
     517,   518,   519,   520,   901,   521,   522,     0,     0,   523,
     524,   525,   526,     0,   902,   527,   528,     0,   903,   904,
     905,   906,     0,     0,     0,     0,     0,   533,   534,     0,
     907,   908,   909,   536,   537,     0,   910,   538,   539,   911,
     540,   541,     0,   542,   543,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   912,   548,     0,     0,   913,   914,
     915,   549,   916,   550,     0,     0,   551,   917,     0,   918,
     552,     0,   553,   554,   919,   920,     0,     0,     0,     0,
       0,     0,   557,   558,   559,     0,   560,   561,   562,   563,
       0,     0,   921,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,   922,   923,     0,
     571,   572,   573,   924,   574,   575,   576,     0,   577,   925,
     926,   578,   927,   579,     0,   928,   929,   930,   931,   932,
     580,   581,     0,   933,   582,   934,   583,   935,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,     0,
       0,     0,   627,   628,   936,   937,     0,     0,     0,   938,
     939,     0,     0,     0,     0,   940,     0,   941,     0,     0,
       0,     0,   942,     0,     0,     0,   943,   944,   197,   198,
       0,   827,   200,   201,   202,   203,     0,     0,   204,     0,
       0,     0,     0,   205,     0,     0,   828,     0,   207,   208,
     209,   210,   829,   212,     0,   213,     0,     0,   830,   214,
     831,   832,   833,   215,   834,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,   835,   836,   223,
     224,     0,   225,   226,   837,   838,   228,     0,   229,   230,
     231,   232,   839,   234,     0,   840,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,   841,
     842,   255,     0,     0,     0,   843,   256,   844,     0,   257,
     845,   846,     0,   258,   259,   260,   847,   848,   849,     0,
       0,     0,     0,   850,   263,   851,     0,     0,   852,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   853,     0,   290,   291,   292,   293,
     294,   854,   855,   295,   296,     0,   297,   298,   299,   300,
     301,   856,     0,   302,   303,     0,     0,     0,   857,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   858,   310,
     859,     0,   312,     0,   313,     0,   860,     0,   314,   315,
       0,   316,   861,     0,   317,   318,     0,     0,     0,   862,
     320,   321,   322,   863,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,   864,   327,   328,   329,  3364,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,   866,   340,   341,     0,     0,     0,
       0,     0,   867,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,   868,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,   869,   370,   371,   372,   373,   870,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   871,   381,
       0,     0,   872,   383,   873,   384,     0,   385,   874,   875,
     876,   877,   878,   390,   391,   392,   393,   394,     0,   879,
     395,   396,     0,     0,   397,   398,   399,   400,   401,   880,
    1075,   881,   402,   403,     0,   882,   883,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
     884,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   885,   886,   425,   887,   426,     0,   427,   428,
     429,     0,   430,     0,   431,   432,   433,   434,   435,     0,
     888,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,   449,   450,     0,   451,   452,   453,   889,   890,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   891,     0,
     892,   469,   470,   471,   472,     0,   473,   893,   894,   475,
     476,   477,   478,     0,   895,   480,     0,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
     486,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,   896,   897,   509,
     510,     0,     0,   511,   512,   898,   514,   515,   516,   899,
     900,   517,   518,   519,   520,   901,   521,   522,     0,     0,
     523,   524,   525,   526,     0,   902,   527,   528,     0,   903,
     904,   905,   906,     0,     0,     0,     0,     0,   533,   534,
       0,   907,   908,   909,   536,   537,     0,   910,   538,   539,
     911,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   912,   548,     0,     0,   913,
     914,   915,   549,   916,   550,     0,     0,   551,   917,     0,
     918,   552,     0,   553,   554,   919,   920,     0,     0,     0,
       0,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   921,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,   922,   923,
       0,   571,   572,   573,   924,   574,   575,   576,     0,   577,
     925,   926,   578,   927,   579,     0,   928,   929,   930,   931,
     932,   580,   581,     0,   933,   582,   934,   583,   935,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,   593,     0,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,   936,   937,     0,     0,     0,
     938,   939,     0,     0,     0,     0,   940,     0,   941,     0,
       0,     0,     0,   942,     0,     0,     0,   943,   944,   197,
     198,     0,   827,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,   828,     0,   207,
     208,   209,   210,   829,   212,     0,   213,     0,     0,   830,
     214,   831,   832,   833,   215,   834,     0,   216,   217,   218,
       0,   219,     0,   220,   221,     0,     0,   222,   835,   836,
     223,   224,     0,   225,   226,   837,   838,   228,     0,   229,
     230,   231,   232,   839,   234,     0,   840,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,   253,   254,     0,
     841,   842,   255,     0,     0,     0,   843,   256,   844,     0,
     257,   845,   846,     0,   258,   259,   260,   847,   848,   849,
       0,     0,     0,     0,   850,   263,   851,     0,     0,  3781,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,   272,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,   277,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   853,     0,   290,   291,   292,
     293,   294,   854,   855,   295,   296,     0,   297,   298,   299,
     300,   301,   856,     0,   302,   303,     0,     0,     0,   857,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   858,
     310,   859,     0,   312,     0,   313,     0,   860,     0,   314,
     315,     0,   316,   861,     0,   317,   318,     0,     0,     0,
     862,   320,   321,   322,   863,     0,   323,   324,   325,     0,
       0,   326,     0,     0,     0,   864,   327,   328,   329,   865,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,     0,     0,     0,   335,     0,   336,     0,     0,   337,
     338,     0,     0,   339,     0,   866,   340,   341,     0,     0,
       0,     0,     0,   867,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,   868,     0,     0,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,   869,   370,   371,   372,   373,   870,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   871,
     381,     0,     0,   872,   383,   873,   384,     0,   385,   874,
     875,   876,   877,   878,   390,   391,   392,   393,   394,     0,
     879,   395,   396,     0,     0,   397,   398,   399,   400,   401,
     880,  1075,   881,   402,   403,     0,   882,   883,   404,     0,
     405,   406,     0,   407,   408,   409,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,   884,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   885,   886,   425,   887,   426,     0,   427,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   888,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,   452,   453,   889,
     890,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     462,     0,   463,   464,     0,   465,   466,   467,     0,   891,
       0,   892,   469,   470,   471,   472,     0,   473,   893,   894,
     475,   476,   477,   478,     0,   895,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,   486,     0,   487,   488,   489,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,   504,   505,   506,   507,   508,   896,   897,
     509,   510,     0,     0,   511,   512,   898,   514,   515,   516,
     899,   900,   517,   518,   519,   520,   901,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   902,   527,   528,     0,
     903,   904,   905,   906,     0,     0,     0,     0,     0,   533,
     534,     0,   907,   908,   909,   536,   537,     0,   910,   538,
     539,   911,   540,   541,     0,   542,   543,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   912,   548,     0,     0,
     913,   914,   915,   549,   916,   550,     0,     0,   551,   917,
       0,   918,   552,     0,   553,   554,   919,   920,     0,     0,
       0,     0,     0,     0,   557,   558,   559,     0,   560,   561,
     562,   563,     0,     0,   921,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,   922,
     923,     0,   571,   572,   573,   924,   574,   575,   576,     0,
     577,   925,   926,   578,   927,   579,     0,   928,   929,   930,
     931,   932,   580,   581,     0,   933,   582,   934,   583,   935,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,     0,     0,     0,   627,   628,   936,   937,     0,     0,
       0,   938,   939,     0,     0,     0,     0,   940,     0,   941,
       0,     0,     0,     0,   942,     0,     0,     0,   943,   944,
     197,   198,     0,   827,   200,   201,   202,   203,     0,     0,
     204,     0,     0,     0,     0,   205,     0,     0,   828,     0,
     207,   208,   209,   210,   829,   212,     0,   213,     0,     0,
     830,   214,   831,   832,   833,   215,   834,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,   835,
     836,   223,   224,     0,   225,   226,   837,   838,   228,     0,
     229,   230,   231,   232,   839,   234,     0,   840,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,   249,     0,   250,   251,   252,   253,   254,
       0,   841,   842,   255,     0,     0,     0,   843,   256,   844,
       0,   257,   845,   846,     0,   258,   259,   260,   847,   848,
     849,     0,     0,     0,     0,   850,   263,   851,     0,     0,
     852,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   853,     0,   290,   291,
     292,   293,   294,   854,   855,   295,   296,     0,   297,   298,
     299,   300,   301,   856,     0,   302,   303,     0,     0,     0,
     857,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     858,   310,   859,     0,   312,     0,   313,     0,   860,     0,
     314,   315,     0,   316,   861,     0,   317,   318,     0,     0,
       0,   862,   320,   321,   322,   863,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,   864,   327,   328,   329,
     865,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,   866,   340,   341,     0,
       0,     0,     0,     0,   867,   343,     0,   344,     0,   345,
       0,   346,   347,     0,     0,   868,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,   869,   370,   371,   372,   373,   870,
     374,   375,  5194,     0,     0,     0,   376,   377,   378,   379,
     871,   381,     0,     0,   872,   383,   873,   384,     0,   385,
     874,   875,   876,   877,   878,   390,   391,   392,   393,   394,
       0,   879,   395,   396,     0,     0,   397,   398,   399,   400,
     401,   880,     0,   881,   402,   403,     0,   882,   883,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   411,
     412,   413,   884,   414,     0,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   885,   886,   425,   887,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   888,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
     889,   890,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     891,     0,   892,   469,   470,   471,   472,     0,   473,   893,
     894,   475,   476,   477,   478,     0,   895,   480,     0,     0,
       0,   481,   482,   483,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,   896,
     897,   509,   510,     0,     0,   511,   512,   898,   514,   515,
     516,   899,   900,   517,   518,   519,   520,   901,   521,   522,
       0,     0,   523,   524,   525,   526,     0,   902,   527,   528,
       0,   903,   904,   905,   906,     0,     0,     0,     0,     0,
     533,   534,     0,   907,   908,   909,   536,   537,     0,   910,
     538,   539,   911,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   912,   548,     0,
       0,   913,   914,   915,   549,   916,   550,     0,     0,   551,
     917,     0,   918,   552,     0,   553,   554,   919,   920,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,     0,     0,   921,     0,     0,   565,   566,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
     922,   923,     0,   571,   572,   573,   924,   574,   575,   576,
       0,   577,   925,   926,   578,   927,   579,     0,   928,   929,
     930,   931,   932,   580,   581,     0,   933,   582,   934,   583,
     935,   584,   585,     0,     0,     0,   586,   587,   588,   589,
     590,   591,   592,   593,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,     0,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,   936,   937,     0,
       0,     0,   938,   939,     0,     0,     0,     0,   940,     0,
     941,     0,     0,     0,     0,   942,     0,     0,     0,   943,
     944,   197,   198,     0,   827,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,   828,
       0,   207,   208,   209,   210,   829,   212,     0,   213,     0,
       0,   830,   214,   831,   832,   833,   215,   834,     0,   216,
     217,   218,     0,   219,     0,   220,   221,     0,     0,   222,
     835,   836,   223,   224,     0,   225,   226,   837,   838,   228,
       0,   229,   230,   231,   232,   839,   234,     0,   840,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,   253,
     254,     0,   841,   842,   255,     0,     0,     0,   843,   256,
     844,     0,   257,   845,   846,     0,   258,   259,   260,   847,
     848,   849,     0,     0,     0,     0,   850,   263,   851,     0,
       0,   852,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,   272,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
     277,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   853,     0,   290,
     291,   292,   293,   294,   854,   855,   295,   296,     0,   297,
     298,   299,   300,   301,   856,     0,   302,   303,     0,     0,
       0,   857,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   858,   310,   859,     0,   312,     0,   313,     0,   860,
       0,   314,   315,     0,   316,   861,     0,   317,   318,     0,
       0,     0,   862,   320,   321,   322,   863,     0,   323,   324,
     325,     0,     0,   326,     0,     0,     0,   864,   327,   328,
     329,   865,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,     0,     0,     0,   335,     0,   336,     0,
       0,   337,   338,     0,     0,   339,     0,   866,   340,   341,
       0,     0,     0,     0,     0,   867,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,   868,     0,     0,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,   869,   370,   371,   372,   373,
     870,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   871,   381,     0,     0,   872,   383,   873,   384,     0,
     385,   874,   875,   876,   877,   878,   390,   391,   392,   393,
     394,     0,   879,   395,   396,     0,     0,   397,   398,   399,
     400,   401,   880,     0,   881,   402,   403,     0,   882,   883,
     404,     0,   405,   406,     0,   407,   408,   409,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,   884,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   885,   886,   425,   887,   426,
       0,   427,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   888,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,   452,
     453,   889,   890,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   462,     0,   463,   464,     0,   465,   466,   467,
       0,   891,     0,   892,   469,   470,   471,   472,     0,   473,
     893,   894,   475,   476,   477,   478,     0,   895,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,   486,     0,   487,   488,   489,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,   504,   505,   506,   507,   508,
     896,   897,   509,   510,     0,     0,   511,   512,   898,   514,
     515,   516,   899,   900,   517,   518,   519,   520,   901,   521,
     522,     0,     0,   523,   524,   525,   526,     0,   902,   527,
     528,     0,   903,   904,   905,   906,     0,     0,     0,     0,
       0,   533,   534,     0,   907,   908,   909,   536,   537,     0,
     910,   538,   539,   911,   540,   541,     0,   542,   543,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   912,   548,
       0,     0,   913,   914,   915,   549,   916,   550,     0,     0,
     551,   917,     0,   918,   552,     0,   553,   554,   919,   920,
       0,     0,     0,     0,     0,     0,   557,   558,   559,     0,
     560,   561,   562,   563,     0,     0,   921,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,   922,   923,     0,   571,   572,   573,   924,   574,   575,
     576,     0,   577,   925,   926,   578,   927,   579,     0,   928,
     929,   930,   931,   932,   580,   581,     0,   933,   582,   934,
     583,   935,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,     0,     0,     0,   627,   628,   936,   937,
       0,     0,     0,   938,   939,     0,     0,     0,     0,   940,
       0,   941,     0,     0,     0,     0,   942,     0,     0,     0,
     943,   944,   197,   198,     0,   827,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,     0,
     828,     0,   207,   208,   209,   210,   829,   212,     0,   213,
       0,     0,   830,   214,   831,   832,   833,   215,   834,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,   835,   836,   223,   224,     0,   225,   226,   837,   838,
     228,     0,   229,   230,   231,   232,   839,   234,     0,   840,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,   841,   842,   255,     0,     0,     0,   843,
     256,   844,     0,   257,   845,   846,     0,   258,   259,   260,
     847,   848,   849,     0,     0,     0,     0,   850,   263,   851,
       0,     0,   852,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   853,     0,
     290,   291,   292,   293,   294,   854,   855,   295,   296,     0,
     297,   298,   299,   300,   301,   856,     0,   302,   303,     0,
       0,     0,   857,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   858,   310,   859,     0,   312,     0,   313,     0,
     860,     0,   314,   315,     0,   316,   861,     0,   317,   318,
       0,     0,     0,   862,   320,   321,   322,   863,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,   864,   327,
     328,   329,  2111,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,   866,   340,
     341,     0,     0,     0,     0,     0,   867,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,   868,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,   869,   370,   371,   372,
     373,   870,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   871,   381,     0,     0,   872,   383,   873,   384,
       0,   385,   874,   875,   876,   877,   878,   390,   391,   392,
     393,   394,     0,   879,   395,   396,     0,     0,   397,   398,
     399,   400,   401,   880,     0,   881,   402,   403,     0,   882,
     883,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,   884,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   885,   886,   425,   887,
     426,     0,   427,   428,   429,     0,   430,     0,   431,   432,
     433,   434,   435,     0,   888,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,   449,   450,     0,   451,
     452,   453,   889,   890,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   891,     0,   892,   469,   470,   471,   472,     0,
     473,   893,   894,   475,   476,   477,   478,     0,   895,   480,
       0,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,   486,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,   896,   897,   509,   510,     0,     0,   511,   512,   898,
     514,   515,   516,   899,   900,   517,   518,   519,   520,   901,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   902,
     527,   528,     0,   903,   904,   905,   906,     0,     0,     0,
       0,     0,   533,   534,     0,   907,   908,   909,   536,   537,
       0,   910,   538,   539,   911,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   912,
     548,     0,     0,   913,   914,   915,   549,   916,   550,     0,
       0,   551,   917,     0,   918,   552,     0,   553,   554,   919,
     920,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   921,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,   922,   923,     0,   571,   572,   573,   924,   574,
     575,   576,     0,   577,   925,   926,   578,   927,   579,     0,
     928,   929,   930,   931,   932,   580,   581,     0,   933,   582,
     934,   583,   935,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,   593,     0,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,   936,
     937,     0,     0,     0,   938,   939,     0,     0,     0,     0,
     940,     0,   941,     0,     0,     0,     0,   942,     0,     0,
       0,   943,   944,   197,   198,     0,   827,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,   828,     0,   207,   208,   209,   210,   829,   212,     0,
     213,     0,     0,   830,   214,   831,   832,   833,   215,   834,
       0,   216,   217,   218,     0,   219,     0,   220,   221,     0,
       0,   222,   835,   836,   223,   224,     0,   225,   226,   837,
     838,   228,     0,   229,   230,   231,   232,   839,   234,     0,
     840,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,   253,   254,     0,   841,   842,   255,     0,     0,     0,
     843,   256,   844,     0,   257,   845,   846,     0,   258,   259,
     260,   847,   848,   849,     0,     0,     0,     0,   850,   263,
     851,     0,     0,   852,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,   272,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,   277,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   853,
       0,   290,   291,   292,   293,   294,   854,   855,   295,   296,
       0,   297,   298,   299,   300,   301,   856,     0,   302,   303,
       0,     0,     0,   857,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   858,   310,   859,     0,   312,     0,   313,
       0,   860,     0,   314,   315,     0,   316,   861,     0,   317,
     318,     0,     0,     0,   862,   320,   321,   322,   863,     0,
     323,   324,   325,     0,     0,   326,     0,     0,     0,   864,
     327,   328,   329,  2113,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,     0,     0,     0,   335,     0,
     336,     0,     0,   337,   338,     0,     0,   339,     0,   866,
     340,   341,     0,     0,     0,     0,     0,   867,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,   868,     0,
       0,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,   869,   370,   371,
     372,   373,   870,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   871,   381,     0,     0,   872,   383,   873,
     384,     0,   385,   874,   875,   876,   877,   878,   390,   391,
     392,   393,   394,     0,   879,   395,   396,     0,     0,   397,
     398,   399,   400,   401,   880,     0,   881,   402,   403,     0,
     882,   883,   404,     0,   405,   406,     0,   407,   408,   409,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,   884,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   885,   886,   425,
     887,   426,     0,   427,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   888,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,   452,   453,   889,   890,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   462,     0,   463,   464,     0,   465,
     466,   467,     0,   891,     0,   892,   469,   470,   471,   472,
       0,   473,   893,   894,   475,   476,   477,   478,     0,   895,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,   486,     0,   487,   488,   489,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,   504,   505,   506,
     507,   508,   896,   897,   509,   510,     0,     0,   511,   512,
     898,   514,   515,   516,   899,   900,   517,   518,   519,   520,
     901,   521,   522,     0,     0,   523,   524,   525,   526,     0,
     902,   527,   528,     0,   903,   904,   905,   906,     0,     0,
       0,     0,     0,   533,   534,     0,   907,   908,   909,   536,
     537,     0,   910,   538,   539,   911,   540,   541,     0,   542,
     543,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     912,   548,     0,     0,   913,   914,   915,   549,   916,   550,
       0,     0,   551,   917,     0,   918,   552,     0,   553,   554,
     919,   920,     0,     0,     0,     0,     0,     0,   557,   558,
     559,     0,   560,   561,   562,   563,     0,     0,   921,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,   922,   923,     0,   571,   572,   573,   924,
     574,   575,   576,     0,   577,   925,   926,   578,   927,   579,
       0,   928,   929,   930,   931,   932,   580,   581,     0,   933,
     582,   934,   583,   935,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,     0,     0,     0,   627,   628,
     936,   937,     0,     0,     0,   938,   939,     0,     0,     0,
       0,   940,     0,   941,     0,     0,     0,     0,   942,     0,
       0,     0,   943,   944,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,   204,     0,     0,     0,     0,   205,
       0,     0,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,     0,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   312,     0,
     313,     0,     0,     0,   314,   315,     0,   316,     0,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,     0,     0,     0,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,     0,
     397,   398,   399,   400,   401,     0,     0,     0,   402,   403,
       0,     0,     0,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,    42,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,     0,   527,   528,     0,   529,   530,   531,   532,     0,
       0,     0,     0,     0,   533,   534,     0,     0,     0,   535,
     536,   537,     0,     0,   538,   539,     0,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,    53,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   574,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,  2551,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,  2552,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,     0,     0,     0,     0,   197,   198,     0,   199,   200,
     201,   202,   203,     0,  2553,   204,     0,     0,     0,     0,
     205,     0,     0,   206,  2554,   207,   208,   209,   210,   211,
     212,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,   220,
     221,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,   227,     0,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,   253,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,   272,     0,  2550,   273,   274,   275,     0,
       0,     0,   276,     0,   277,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
     302,   303,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,   314,   315,     0,   316,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
       0,     0,   323,   324,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,   337,   338,     0,     0,   339,
       0,     0,   340,   341,     0,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,   402,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   427,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,   452,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   462,     0,   463,   464,
       0,   465,   466,   467,     0,   468,     0,     0,   469,   470,
     471,   472,     0,   473,     0,   474,   475,   476,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,   486,     0,   487,
     488,   489,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,   504,
     505,   506,   507,   508,     0,     0,   509,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,     0,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
     535,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,   542,   543,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,   561,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,   577,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
    2551,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
    2552,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,     0,     0,     0,
     627,   628,     0,     0,     0,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,  2553,   204,     0,     0,     0,
       0,   205,     0,     0,   206,  2554,   207,   208,   209,   210,
     211,   212,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,     0,     0,   223,   224,     0,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,     0,     0,   255,
       0,     0,     0,     0,   256,     0,     0,   257,     0,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,     0,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,   302,   303,     0,     0,     0,   304,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   309,   310,   311,     0,
     312,     0,   313,     0,     0,     0,   314,   315,     0,   316,
       0,     0,   317,   318,     0,     0,     0,   319,   320,   321,
     322,     0,     0,   323,   324,   325,     0,     0,   326,     0,
       0,     0,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,     0,   340,   341,     0,     0,     0,     0,     0,
     342,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,   370,   371,   372,   373,     0,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   380,   381,     0,     0,
     382,   383,     0,   384,     0,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,     0,   397,   398,   399,   400,   401,     0,     0,     0,
     402,   403,     0,     0,     0,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,     0,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   436,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   468,     0,     0,   469,
     470,   471,   472,     0,   473,     0,   474,   475,   476,   477,
     478,     0,   479,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,     0,     0,   509,   510,     0,
       0,   511,   512,   513,   514,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   521,   522,     0,     0,   523,   524,
     525,   526,     0,     0,   527,   528,     0,   529,   530,   531,
     532,     0,     0,     0,     0,     0,   533,   534,     0,     0,
       0,   535,   536,   537,     0,     0,   538,   539,     0,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   547,   548,     0,     0,     0,     0,     0,
     549,     0,   550,     0,     0,   551,     0,     0,     0,   552,
       0,   553,   554,   555,   556,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   564,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,   571,
     572,   573,     0,   574,   575,   576,     0,   577,     0,     0,
     578,     0,   579,     0,     0,     0,     0,     0,     0,   580,
     581,     0,     0,   582,     0,   583,     0,   584,   585,     0,
       0,  2551,   586,   587,   588,   589,   590,   591,   592,   593,
       0,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,  2552,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,     0,     0,     0,     0,   197,   198,     0,
     199,   200,   201,   202,   203,     0,  2553,   204,     0,     0,
       0,     0,   205,     0,     0,     0,  2554,   207,   208,   209,
     210,   211,   212,     0,  -517,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,     0,     0,     0,     0,   222,  4194,     0,   223,   224,
       0,   225,   226,     0,     0,     0,     0,   229,   230,   231,
    3710,   233,   234,     0,   235,   236,     0,   237,   238,     0,
     240,     0,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,     0,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,     0,     0,     0,     0,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,     0,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,     0,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,     0,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,  3713,   297,   298,   299,   300,   301,
       0,     0,     0,     0,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,     0,   315,     0,
       0,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,  4195,     0,   323,     0,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,     0,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,  3715,
       0,     0,   335,     0,   336,     0,     0,     0,   338,     0,
       0,   339,  3716,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,  -463,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,     0,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,  3717,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,     0,     0,     0,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,     0,   453,  -463,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,     0,     0,
     463,   464,     0,   465,   466,   467,  4196,   468,     0,     0,
       0,   470,   471,   472,     0,   473,     0,   474,   475,     0,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,     0,
       0,     0,   488,     0,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,     0,   505,   506,   507,   508,     0,     0,     0,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,     0,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,     0,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,     0,     0,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,  -463,     0,
       0,     0,   557,   558,   559,     0,   560,     0,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,     0,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,     0,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,     0,
     619,   620,   621,   622,   623,   624,     0,   626,     0,     0,
       0,     0,     0,   628,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,   204,     0,     0,     0,     0,   205,
       0,     0,   206,  5355,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,     0,   214,   831,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,  2477,     0,     0,     0,     0,   262,
     263,   851,     0,     0,     0,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,     0,   855,   295,
     296,     0,   297,   298,   299,   300,   301,   856,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   312,     0,
     313,     0,     0,     0,   314,   315,     0,   316,   861,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,     0,     0,     0,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,   868,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,   879,   395,   396,     0,     0,
     397,   398,   399,   400,   401,     0,     0,     0,   402,   403,
       0,   882,   883,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,     0,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   902,   527,   528,     0,  2478,   530,   531,  2479,     0,
       0,     0,     0,     0,   533,   534,     0,     0,   908,   535,
     536,   537,     0,   910,   538,   539,   911,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   574,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,   942,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,     0,     0,   223,   224,     0,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,     0,     0,   255,     0,     0,     0,     0,
     256,     0,     0,   257,     0,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,     0,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,  1468,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,     0,     0,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,   302,   303,     0,
       0,     0,   304,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   309,   310,   311,     0,   312,     0,   313,     0,
       0,     0,   314,   315,     0,   316,     0,     0,   317,   318,
       0,     0,     0,   319,   320,   321,   322,     0,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,     0,   340,
     341,   989,     0,     0,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,   370,   371,   372,
     373,     0,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   380,   381,     0,     0,   382,   383,     0,   384,
       0,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,     0,   397,   398,
     399,   400,   401,     0,     0,     0,   402,   403,     0,     0,
       0,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,  1469,
       0,   411,   412,   413,     0,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   427,   428,   429,     0,   430,     0,   431,   432,
     433,   434,   435,     0,   436,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,   449,   450,     0,   451,
     452,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   468,     0,     0,   469,   470,   471,   472,     0,
     473,     0,   474,   475,   476,   477,   478,     0,   479,   480,
       0,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,   486,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,     0,     0,   509,   510,     0,     0,   511,   512,   513,
     514,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   194,
     527,   528,     0,   529,   530,   531,   532,     0,     0,     0,
       0,     0,   533,   534,     0,     0,     0,   535,   536,   537,
       0,     0,   538,   539,     0,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   547,
     548,     0,     0,     0,     0,     0,   549,     0,   550,     0,
       0,   551,     0,     0,     0,   552,     0,   553,   554,   555,
     556,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   564,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,   571,   572,   573,     0,   574,
     575,   576,     0,   577,     0,     0,   578,     0,   579,     0,
       0,     0,     0,     0,     0,   580,   581,     0,     0,   582,
       0,   583,     0,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,   593,     0,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
     204,     0,     0,     0,     0,   205,     0,  1470,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,     0,
       0,   223,   224,     0,   225,   226,   775,   776,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,   249,     0,   250,   251,   252,   253,   254,
       0,     0,     0,   255,     0,     0,     0,     0,   256,     0,
       0,   257,     0,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
     777,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,     0,     0,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,   302,   303,     0,     0,     0,
     304,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     309,   310,   311,     0,   778,     0,   313,     0,     0,     0,
     314,   315,     0,   316,     0,     0,   317,   318,     0,     0,
       0,   319,   320,   321,   322,     0,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,     0,   340,   341,     0,
       0,     0,     0,     0,   342,   343,     0,   779,     0,   345,
       0,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,   370,   371,   372,   373,     0,
     374,   375,     0,     0,     0,     0,   376,   377,   378,   379,
     380,   381,     0,     0,   382,   383,     0,   384,     0,   385,
       0,   386,   387,   388,   389,   390,   391,   780,   393,   394,
       0,     0,   395,   396,     0,     0,   397,   398,   399,   400,
     401,     0,     0,     0,   402,   403,     0,     0,     0,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   411,
     412,   413,     0,   414,     0,   415,     0,   416,   417,   781,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   436,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     468,     0,     0,   469,   470,   471,   472,     0,   473,     0,
     474,   475,   476,   477,   478,     0,   479,   480,     0,     0,
       0,   481,   482,   782,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,     0,
       0,   509,   510,     0,     0,   511,   512,   513,   514,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   521,   522,
       0,     0,   523,   524,   525,   526,     0,     0,   527,   528,
       0,   529,   530,   531,   532,     0,     0,     0,     0,     0,
     783,   534,     0,     0,     0,   535,   536,   537,     0,     0,
     538,   539,     0,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   547,   548,     0,
       0,     0,     0,     0,   549,     0,   550,     0,     0,   551,
       0,     0,     0,   552,     0,   553,   554,   555,   556,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,     0,     0,   564,     0,     0,   784,   785,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,   571,   572,   573,     0,   786,   575,   576,
       0,   577,     0,     0,   578,     0,   579,     0,     0,     0,
       0,     0,     0,   580,   581,     0,     0,   582,     0,   583,
       0,   584,   585,     0,     0,     0,   586,   587,   588,   589,
     590,   591,   592,   787,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,     0,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,   204,     0,
       0,     0,     0,   205,     0,   788,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,     0,     0,   223,
     224,     0,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,     0,
       0,   255,     0,     0,     0,     0,   256,     0,     0,   257,
       0,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,     0,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,     0,     0,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,   302,   303,     0,     0,     0,   304,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   309,   310,
     311,     0,   312,     0,   313,     0,     0,     0,   314,   315,
       0,   316,     0,     0,   317,   318,     0,     0,     0,   319,
     320,   321,   322,     0,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,     0,   340,   341,   989,     0,     0,
       0,     0,   342,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,   370,   371,   372,   373,     0,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   380,   381,
       0,     0,   382,   383,     0,   384,     0,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,     0,   397,   398,   399,   400,   401,     0,
       0,     0,   402,   403,     0,     0,     0,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
       0,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   427,   428,
     429,     0,   430,     0,   431,   432,   433,   434,   435,     0,
     436,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,   449,   450,     0,   451,   452,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   468,     0,
       0,   469,   470,   471,   472,     0,   473,     0,   474,   475,
     476,   477,   478,     0,   479,   480,     0,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
     486,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,     0,     0,   509,
     510,     0,     0,   511,   512,   513,   514,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   521,   522,     0,     0,
     523,   524,   525,   526,     0,   194,   527,   528,     0,   529,
     530,   531,   532,     0,     0,     0,     0,     0,   533,   534,
       0,     0,     0,   535,   536,   537,     0,     0,   538,   539,
       0,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   547,   548,     0,     0,     0,
       0,     0,   549,     0,   550,     0,     0,   551,     0,     0,
       0,   552,     0,   553,   554,   555,   556,     0,     0,     0,
       0,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   564,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,     0,     0,
       0,   571,   572,   573,     0,   574,   575,   576,     0,   577,
       0,     0,   578,     0,   579,     0,     0,     0,     0,     0,
       0,   580,   581,     0,     0,   582,     0,   583,     0,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,   593,     0,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,   204,     0,     0,     0,
       0,   205,     0,  1207,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,     0,     0,   223,   224,     0,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,     0,     0,   255,
       0,     0,     0,     0,   256,     0,     0,   257,     0,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,     0,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,   302,   303,     0,     0,     0,   304,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   309,   310,   311,     0,
     312,     0,   313,     0,     0,     0,   314,   315,     0,   316,
       0,     0,   317,   318,     0,     0,     0,   319,   320,   321,
     322,     0,     0,   323,   324,   325,     0,     0,   326,     0,
       0,     0,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,     0,   340,   341,   989,     0,     0,     0,     0,
     342,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,   370,   371,   372,   373,     0,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   380,   381,     0,     0,
     382,   383,     0,   384,     0,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,     0,   397,   398,   399,   400,   401,     0,     0,     0,
     402,   403,     0,     0,     0,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,     0,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   436,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   468,     0,     0,   469,
     470,   471,   472,     0,   473,     0,   474,   475,   476,   477,
     478,     0,   479,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,     0,     0,   509,   510,     0,
       0,   511,   512,   513,   514,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   521,   522,     0,     0,   523,   524,
     525,   526,     0,   194,   527,   528,     0,   529,   530,   531,
     532,     0,     0,     0,     0,     0,   533,   534,     0,     0,
       0,   535,   536,   537,     0,     0,   538,   539,     0,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   547,   548,     0,     0,     0,     0,     0,
     549,     0,   550,     0,     0,   551,     0,     0,     0,   552,
       0,   553,   554,   555,   556,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   564,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,   571,
     572,   573,     0,   574,   575,   576,     0,   577,     0,     0,
     578,     0,   579,     0,     0,     0,     0,     0,     0,   580,
     581,     0,     0,   582,     0,   583,     0,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,   593,
       0,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,   204,     0,     0,     0,     0,   205,
       0,  1407,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     775,   776,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,  1215,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   778,     0,
     313,     0,     0,     0,   314,   315,     0,   316,     0,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,     0,     0,     0,     0,     0,   342,   343,
       0,   779,     0,   345,     0,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   780,   393,   394,     0,     0,   395,   396,     0,     0,
     397,   398,   399,   400,   401,     0,     0,     0,   402,   403,
       0,     0,     0,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,     0,     0,     0,   481,   482,   782,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,     0,   527,   528,     0,   529,   530,   531,   532,     0,
       0,     0,     0,     0,   533,   534,     0,     0,     0,   535,
     536,   537,     0,     0,   538,   539,     0,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   784,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   786,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,   788,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,     0,     0,   223,   224,     0,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,     0,     0,   255,     0,     0,     0,     0,
     256,     0,     0,   257,     0,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,     0,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,     0,     0,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,   302,   303,     0,
       0,     0,   304,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   309,   310,   311,     0,   312,     0,   313,     0,
       0,     0,   314,   315,     0,   316,     0,     0,   317,   318,
       0,     0,     0,   319,   320,   321,   322,     0,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,     0,   340,
     341,   989,     0,     0,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,   370,   371,   372,
     373,     0,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   380,   381,     0,     0,   382,   383,     0,   384,
       0,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,     0,   397,   398,
     399,   400,   401,     0,     0,     0,   402,   403,     0,     0,
       0,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,     0,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   427,   428,   429,     0,   430,     0,   431,   432,
     433,   434,   435,     0,   436,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,   449,   450,     0,   451,
     452,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   468,     0,     0,   469,   470,   471,   472,     0,
     473,     0,   474,   475,   476,   477,   478,     0,   479,   480,
       0,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,   486,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,     0,     0,   509,   510,     0,     0,   511,   512,   513,
     514,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   194,
     527,   528,     0,   529,   530,   531,   532,     0,     0,     0,
       0,     0,   533,   534,     0,     0,     0,   535,   536,   537,
       0,     0,   538,   539,     0,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   547,
     548,     0,     0,     0,     0,     0,   549,     0,   550,     0,
       0,   551,     0,     0,     0,   552,     0,   553,   554,   555,
     556,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   564,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,   571,   572,   573,     0,   574,
     575,   576,     0,   577,     0,     0,   578,     0,   579,     0,
       0,     0,     0,     0,     0,   580,   581,     0,     0,   582,
       0,   583,     0,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,   593,     0,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,     0,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
     204,     0,     0,     0,     0,   205,     0,  1470,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,     0,
       0,   223,   224,     0,   225,   226,   227,     0,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,  1754,   248,   249,     0,   250,   251,   252,   253,   254,
       0,     0,     0,   255,     0,     0,     0,     0,   256,     0,
       0,   257,     0,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
       0,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,     0,     0,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,   302,   303,     0,     0,     0,
     304,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     309,   310,   311,     0,   312,     0,   313,     0,     0,     0,
     314,   315,     0,   316,     0,     0,   317,   318,     0,     0,
       0,   319,   320,   321,   322,     0,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,     0,   340,   341,     0,
       0,     0,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,   370,   371,   372,   373,     0,
     374,   375,     0,     0,     0,     0,   376,   377,   378,   379,
     380,   381,     0,     0,   382,   383,     0,   384,     0,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,     0,   397,   398,   399,   400,
     401,     0,     0,     0,   402,   403,     0,     0,     0,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   411,
     412,   413,     0,   414,     0,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   436,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     468,     0,     0,   469,   470,   471,   472,     0,   473,     0,
     474,   475,   476,   477,   478,     0,   479,   480,     0,     0,
       0,   481,   482,   483,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,     0,
       0,   509,   510,     0,     0,   511,   512,   513,   514,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   521,   522,
       0,     0,   523,   524,   525,   526,     0,     0,   527,   528,
       0,   529,   530,   531,   532,     0,     0,     0,     0,     0,
     533,   534,     0,     0,     0,   535,   536,   537,     0,     0,
     538,   539,     0,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   547,   548,     0,
       0,     0,     0,     0,   549,     0,   550,     0,     0,   551,
       0,     0,     0,   552,     0,   553,   554,   555,   556,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,     0,     0,   564,     0,     0,   565,   566,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,   571,   572,   573,     0,   574,   575,   576,
       0,   577,     0,     0,   578,     0,   579,     0,     0,     0,
       0,     0,     0,   580,   581,     0,     0,   582,     0,   583,
       0,   584,   585,     0,     0,     0,   586,   587,   588,   589,
     590,   591,   592,   593,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,     0,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,     0,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,   204,     0,
       0,     0,     0,   205,     0,  1755,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,     0,     0,   223,
     224,     0,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,     0,
       0,   255,     0,     0,     0,     0,   256,     0,     0,   257,
       0,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,     0,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,     0,     0,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,   302,   303,     0,     0,     0,   304,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   309,   310,
     311,     0,   312,     0,   313,     0,     0,     0,   314,   315,
       0,   316,     0,     0,   317,   318,     0,     0,     0,   319,
     320,   321,   322,     0,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,     0,   340,   341,     0,     0,     0,
       0,     0,   342,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,   370,   371,   372,   373,     0,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   380,   381,
       0,     0,   382,   383,     0,   384,     0,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,     0,   397,   398,   399,   400,   401,     0,
       0,     0,   402,   403,     0,     0,     0,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
       0,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   427,   428,
     429,     0,   430,     0,   431,   432,   433,   434,   435,     0,
     436,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,   449,   450,     0,   451,   452,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   468,     0,
       0,   469,   470,   471,   472,     0,   473,     0,   474,   475,
     476,   477,   478,     0,   479,   480,     0,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
     486,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,     0,     0,   509,
     510,     0,     0,   511,   512,   513,   514,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   521,   522,     0,     0,
     523,   524,   525,   526,     0,     0,   527,   528,     0,   529,
     530,   531,   532,     0,     0,     0,     0,     0,   533,   534,
       0,     0,     0,   535,   536,   537,     0,     0,   538,   539,
       0,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   547,   548,     0,     0,     0,
       0,     0,   549,     0,   550,     0,     0,   551,     0,     0,
       0,   552,     0,   553,   554,   555,   556,     0,     0,     0,
       0,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   564,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,     0,     0,
       0,   571,   572,   573,     0,   574,   575,   576,     0,   577,
       0,     0,   578,     0,   579,     0,     0,     0,     0,     0,
       0,   580,   581,     0,     0,   582,     0,   583,     0,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,   593,     0,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,     0,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,   204,     0,     0,  5363,
       0,   205,     0,  5364,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,     0,     0,   223,   224,     0,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,     0,     0,   255,
       0,     0,     0,     0,   256,     0,     0,   257,     0,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,     0,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,   302,   303,     0,     0,     0,   304,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   309,   310,   311,     0,
     312,     0,   313,     0,     0,     0,   314,   315,     0,   316,
       0,     0,   317,   318,     0,     0,     0,   319,   320,   321,
     322,     0,     0,   323,   324,   325,     0,     0,   326,     0,
       0,     0,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,     0,   340,   341,     0,     0,     0,     0,     0,
     342,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,   370,   371,   372,   373,     0,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   380,   381,     0,     0,
     382,   383,     0,   384,     0,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,     0,   397,   398,   399,   400,   401,     0,     0,     0,
     402,   403,     0,     0,     0,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,     0,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   436,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   468,     0,     0,   469,
     470,   471,   472,     0,   473,     0,   474,   475,   476,   477,
     478,     0,   479,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,     0,     0,   509,   510,     0,
       0,   511,   512,   513,   514,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   521,   522,     0,     0,   523,   524,
     525,   526,     0,     0,   527,   528,     0,   529,   530,   531,
     532,     0,     0,     0,     0,     0,   533,   534,     0,     0,
       0,   535,   536,   537,     0,     0,   538,   539,     0,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   547,   548,     0,     0,     0,     0,     0,
     549,     0,   550,     0,     0,   551,     0,     0,     0,   552,
       0,   553,   554,   555,   556,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   564,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,   571,
     572,   573,     0,   574,   575,   576,     0,   577,     0,     0,
     578,     0,   579,     0,     0,     0,     0,     0,     0,   580,
     581,     0,     0,   582,     0,   583,     0,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,   593,
       0,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,     0,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,   204,     0,     0,     0,     0,   205,
       0,  1755,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,     0,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   312,     0,
     313,     0,     0,     0,   314,   315,     0,   316,     0,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,     0,     0,     0,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,     0,
     397,   398,   399,   400,   401,     0,     0,     0,   402,   403,
       0,     0,     0,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,     0,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,     0,   527,   528,     0,   529,   530,   531,   532,     0,
       0,     0,     0,     0,   533,   534,     0,     0,     0,   535,
     536,   537,     0,     0,   538,   539,     0,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   574,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,     0,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,  5364,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,     0,     0,   223,   224,     0,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,     0,     0,   255,     0,     0,     0,     0,
     256,     0,     0,   257,     0,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,     0,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,     0,     0,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,   302,   303,     0,
       0,     0,   304,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   309,   310,   311,     0,   312,     0,   313,     0,
       0,     0,   314,   315,     0,   316,     0,     0,   317,   318,
       0,     0,     0,   319,   320,   321,   322,     0,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,     0,   340,
     341,     0,     0,     0,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,   370,   371,   372,
     373,     0,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   380,   381,     0,     0,   382,   383,     0,   384,
       0,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,     0,   397,   398,
     399,   400,   401,     0,     0,     0,   402,   403,     0,     0,
       0,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,     0,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   427,   428,   429,     0,   430,     0,   431,   432,
     433,   434,   435,     0,   436,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,   449,   450,     0,   451,
     452,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   468,     0,     0,   469,   470,   471,   472,     0,
     473,     0,   474,   475,   476,   477,   478,     0,   479,   480,
      42,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,   486,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,     0,     0,   509,   510,     0,     0,   511,   512,   513,
     514,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     521,   522,     0,     0,   523,   524,   525,   526,     0,     0,
     527,   528,     0,   529,   530,   531,   532,     0,     0,     0,
       0,     0,   533,   534,     0,     0,     0,   535,   536,   537,
       0,     0,   538,   539,     0,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   547,
     548,     0,     0,     0,     0,     0,   549,     0,   550,     0,
       0,   551,     0,     0,     0,   552,     0,   553,   554,   555,
     556,     0,     0,     0,    53,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   564,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,   571,   572,   573,     0,   574,
     575,   576,     0,   577,     0,     0,   578,     0,   579,     0,
       0,     0,     0,     0,     0,   580,   581,     0,     0,   582,
       0,   583,     0,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,   593,     0,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,   974,  3803,   205,     0,     0,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,   220,   221,     0,     0,   222,     0,     0,
     223,   224,     0,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,   253,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,   272,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,   277,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,     0,     0,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,   302,   303,     0,     0,     0,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,   314,
     315,     0,   316,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,     0,     0,   323,   324,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,     0,     0,     0,   335,     0,   336,     0,     0,   337,
     338,     0,     0,   339,     0,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,   402,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,   409,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   427,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,   452,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     462,     0,   463,   464,     0,   465,   466,   467,     0,   468,
       0,     0,   469,   470,   471,   472,     0,   473,     0,   474,
     475,   476,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,   486,     0,   487,   488,   489,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,   504,   505,   506,   507,   508,     0,     0,
     509,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,     0,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,   535,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,   542,   543,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
       0,     0,     0,     0,   557,   558,   559,     0,   560,   561,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
     577,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,     0,     0,     0,   627,   628,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,   204,     0,     0,     0,
    4139,   205,     0,     0,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,     0,     0,   223,   224,     0,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,     0,     0,   255,
       0,     0,     0,     0,   256,     0,     0,   257,     0,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,     0,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,   302,   303,     0,     0,     0,   304,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   309,   310,   311,     0,
     312,     0,   313,     0,     0,     0,   314,   315,     0,   316,
       0,     0,   317,   318,     0,     0,     0,   319,   320,   321,
     322,     0,     0,   323,   324,   325,     0,     0,   326,     0,
       0,     0,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,     0,   340,   341,     0,     0,     0,     0,     0,
     342,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,   370,   371,   372,   373,     0,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   380,   381,     0,     0,
     382,   383,     0,   384,     0,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,     0,   397,   398,   399,   400,   401,     0,     0,     0,
     402,   403,     0,     0,     0,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,     0,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   436,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   468,     0,     0,   469,
     470,   471,   472,     0,   473,     0,   474,   475,   476,   477,
     478,     0,   479,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,     0,     0,   509,   510,     0,
       0,   511,   512,   513,   514,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   521,   522,     0,     0,   523,   524,
     525,   526,     0,     0,   527,   528,     0,   529,   530,   531,
     532,     0,     0,     0,     0,     0,   533,   534,     0,     0,
       0,   535,   536,   537,     0,     0,   538,   539,     0,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   547,   548,     0,     0,     0,     0,     0,
     549,     0,   550,     0,     0,   551,     0,     0,     0,   552,
       0,   553,   554,   555,   556,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   564,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,   571,
     572,   573,     0,   574,   575,   576,     0,   577,     0,     0,
     578,     0,   579,     0,     0,     0,     0,     0,     0,   580,
     581,     0,     0,   582,     0,   583,     0,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,   593,
       0,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,  4143,   205,     0,
       0,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,   220,   221,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,   227,
       0,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,   249,  2227,   250,   251,
     252,   253,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,   272,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,   277,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,   302,   303,
       0,     0,     0,   304,   305,     0,   306,  2228,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,   314,   315,     0,   316,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,     0,     0,
     323,   324,   325,  1630,     0,   326,     0,     0,     0,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,     0,     0,     0,   335,     0,
     336,  1631,     0,   337,   338,     0,     0,   339,     0,     0,
     340,   341,     0,  3748,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,   402,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,   409,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   427,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,   452,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   462,     0,   463,   464,     0,   465,
     466,   467,     0,   468,     0,     0,   469,   470,   471,   472,
       0,   473,     0,   474,   475,   476,   477,   478,     0,   479,
     480,    42,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,   486,     0,   487,   488,   489,
     490,     0,   491,   492,   493,   494,   495,  2230,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,   504,   505,   506,
     507,   508,     0,     0,   509,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,   535,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,   542,
     543,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,     0,    53,     0,     0,   557,   558,
     559,     0,   560,   561,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,   577,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,     0,     0,     0,   627,   628,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
     204,     0,     0,   974,     0,   205,     0,     0,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,     0,
       0,   223,   224,     0,   225,   226,   227,     0,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,   249,     0,   250,   251,   252,   253,   254,
       0,     0,     0,   255,     0,     0,     0,     0,   256,     0,
       0,   257,     0,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
       0,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,     0,     0,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,   302,   303,     0,     0,     0,
     304,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     309,   310,   311,     0,   312,     0,   313,     0,     0,     0,
     314,   315,     0,   316,     0,     0,   317,   318,     0,     0,
       0,   319,   320,   321,   322,     0,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,     0,   340,   341,     0,
       0,     0,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,   370,   371,   372,   373,     0,
     374,   375,     0,     0,     0,     0,   376,   377,   378,   379,
     380,   381,     0,     0,   382,   383,     0,   384,     0,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,     0,   397,   398,   399,   400,
     401,     0,     0,     0,   402,   403,     0,     0,     0,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   411,
     412,   413,     0,   414,     0,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   436,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     468,     0,     0,   469,   470,   471,   472,     0,   473,     0,
     474,   475,   476,   477,   478,     0,   479,   480,     0,     0,
       0,   481,   482,   483,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,     0,
       0,   509,   510,     0,     0,   511,   512,   513,   514,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   521,   522,
       0,     0,   523,   524,   525,   526,     0,     0,   527,   528,
       0,   529,   530,   531,   532,     0,     0,     0,     0,     0,
     533,   534,     0,     0,     0,   535,   536,   537,     0,     0,
     538,   539,     0,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   547,   548,     0,
       0,     0,     0,     0,   549,     0,   550,     0,     0,   551,
       0,     0,     0,   552,     0,   553,   554,   555,   556,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,     0,     0,   564,     0,     0,   565,   566,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,   571,   572,   573,     0,   574,   575,   576,
       0,   577,     0,     0,   578,     0,   579,     0,     0,     0,
       0,     0,     0,   580,   581,     0,     0,   582,     0,   583,
       0,   584,   585,     0,     0,  2551,   586,   587,   588,   589,
     590,   591,   592,   593,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,  2552,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
    2553,     0,   205,     0,     0,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,   220,   221,     0,     0,   222,     0,     0,   223,   224,
       0,   225,   226,   227,     0,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,   253,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,   272,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,   277,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,   302,   303,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,   314,   315,     0,
     316,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,     0,     0,   323,   324,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,     0,
       0,     0,   335,     0,   336,     0,     0,   337,   338,     0,
       0,   339,     0,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,   402,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,   409,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   427,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,   452,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   462,     0,
     463,   464,     0,   465,   466,   467,     0,   468,     0,     0,
     469,   470,   471,   472,     0,   473,     0,   474,   475,   476,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,   486,
       0,   487,   488,   489,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,   504,   505,   506,   507,   508,     0,     0,   509,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,     0,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,   535,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,   542,   543,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,     0,     0,
       0,     0,   557,   558,   559,     0,   560,   561,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,   577,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,     0,
       0,     0,   627,   628,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,   204,     0,     0,  1334,     0,   205,
       0,     0,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,     0,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   312,     0,
     313,     0,     0,     0,   314,   315,     0,   316,     0,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,     0,     0,     0,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,     0,
     397,   398,   399,   400,   401,     0,     0,     0,   402,   403,
       0,     0,     0,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,     0,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,     0,   527,   528,     0,   529,   530,   531,   532,     0,
       0,     0,     0,     0,   533,   534,     0,     0,     0,   535,
     536,   537,     0,     0,   538,   539,     0,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   574,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,   204,     0,     0,  2938,     0,   205,     0,     0,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,   220,   221,     0,     0,   222,
       0,     0,   223,   224,     0,   225,   226,   227,     0,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,   253,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,     0,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,   272,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
     277,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,     0,     0,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,   302,   303,     0,     0,
       0,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,   314,   315,     0,   316,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,     0,     0,   323,   324,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,     0,     0,     0,   335,     0,   336,     0,
       0,   337,   338,     0,     0,   339,     0,     0,   340,   341,
       0,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,   402,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,   409,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   427,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,   452,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   462,     0,   463,   464,     0,   465,   466,   467,
       0,   468,     0,     0,   469,   470,   471,   472,     0,   473,
       0,   474,   475,   476,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,   486,     0,   487,   488,   489,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,   504,   505,   506,   507,   508,
       0,     0,   509,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,     0,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,   535,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,   542,   543,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,     0,     0,     0,     0,   557,   558,   559,     0,
     560,   561,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,   577,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,     0,     0,     0,   627,   628,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,   204,     0,
       0,  3389,     0,   205,     0,     0,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,     0,     0,   223,
     224,     0,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,     0,
       0,   255,     0,     0,     0,     0,   256,     0,     0,   257,
       0,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,     0,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,     0,     0,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,   302,   303,     0,     0,     0,   304,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   309,   310,
     311,     0,   312,     0,   313,     0,     0,     0,   314,   315,
       0,   316,     0,     0,   317,   318,     0,     0,     0,   319,
     320,   321,   322,     0,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,     0,   340,   341,     0,     0,     0,
       0,     0,   342,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,   370,   371,   372,   373,     0,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   380,   381,
       0,     0,   382,   383,     0,   384,     0,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,     0,   397,   398,   399,   400,   401,     0,
       0,     0,   402,   403,     0,     0,     0,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
       0,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   427,   428,
     429,     0,   430,     0,   431,   432,   433,   434,   435,     0,
     436,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,   449,   450,     0,   451,   452,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   468,     0,
       0,   469,   470,   471,   472,     0,   473,     0,   474,   475,
     476,   477,   478,     0,   479,   480,     0,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
     486,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,     0,     0,   509,
     510,     0,     0,   511,   512,   513,   514,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   521,   522,     0,     0,
     523,   524,   525,   526,     0,     0,   527,   528,     0,   529,
     530,   531,   532,     0,     0,     0,     0,     0,   533,   534,
       0,     0,     0,   535,   536,   537,     0,     0,   538,   539,
       0,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   547,   548,     0,     0,     0,
       0,     0,   549,     0,   550,     0,     0,   551,     0,     0,
       0,   552,     0,   553,   554,   555,   556,     0,     0,     0,
       0,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   564,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,     0,     0,
       0,   571,   572,   573,     0,   574,   575,   576,     0,   577,
       0,     0,   578,     0,   579,     0,     0,     0,     0,     0,
       0,   580,   581,     0,     0,   582,     0,   583,     0,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,   593,     0,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,   204,     0,     0,  4023,     0,
     205,     0,     0,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,   220,
     221,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,   227,     0,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,   253,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,   272,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,   277,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
     302,   303,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,   314,   315,     0,   316,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
       0,     0,   323,   324,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,   337,   338,     0,     0,   339,
       0,     0,   340,   341,     0,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,   402,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   427,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,   452,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   462,     0,   463,   464,
       0,   465,   466,   467,     0,   468,     0,     0,   469,   470,
     471,   472,     0,   473,     0,   474,   475,   476,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,   486,     0,   487,
     488,   489,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,   504,
     505,   506,   507,   508,     0,     0,   509,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,     0,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
     535,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,   542,   543,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,   561,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,   577,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,     0,     0,     0,
     627,   628,     0,     0,     0,     0,     0,   197,   198,  2447,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,   220,   221,     0,     0,   222,     0,     0,   223,   224,
       0,   225,   226,   227,     0,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,   253,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,   272,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,   277,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,   302,   303,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,   314,   315,     0,
     316,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,     0,     0,   323,   324,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,     0,
       0,     0,   335,     0,   336,     0,     0,   337,   338,     0,
       0,   339,     0,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,   402,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,   409,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   427,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,   452,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   462,     0,
     463,   464,     0,   465,   466,   467,     0,   468,     0,     0,
     469,   470,   471,   472,     0,   473,     0,   474,   475,   476,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,   486,
       0,   487,   488,   489,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,   504,   505,   506,   507,   508,     0,     0,   509,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,     0,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,   535,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,   542,   543,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,     0,     0,
       0,     0,   557,   558,   559,     0,   560,   561,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,   577,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,     0,
       0,     0,   627,   628,     0,     0,     0,     0,     0,   197,
     198,  2492,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,   220,   221,     0,     0,   222,     0,     0,
     223,   224,     0,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,   253,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,   272,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,   277,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,     0,     0,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,   302,   303,     0,     0,     0,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,   314,
     315,     0,   316,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,     0,     0,   323,   324,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,     0,     0,     0,   335,     0,   336,     0,     0,   337,
     338,     0,     0,   339,     0,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,   402,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,   409,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   427,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,   452,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     462,     0,   463,   464,     0,   465,   466,   467,     0,   468,
       0,     0,   469,   470,   471,   472,     0,   473,     0,   474,
     475,   476,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,   486,     0,   487,   488,   489,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,   504,   505,   506,   507,   508,     0,     0,
     509,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,     0,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,   535,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,   542,   543,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
       0,     0,     0,     0,   557,   558,   559,     0,   560,   561,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
     577,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,     0,     0,     0,   627,   628,     0,     0,     0,     0,
       0,   197,   198,  3464,   199,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,   220,   221,     0,     0,   222,
       0,     0,   223,   224,     0,   225,   226,   227,     0,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,   253,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,     0,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,   272,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
     277,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,     0,     0,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,   302,   303,     0,     0,
       0,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,   314,   315,     0,   316,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,     0,     0,   323,   324,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,     0,     0,     0,   335,     0,   336,     0,
       0,   337,   338,     0,     0,   339,     0,     0,   340,   341,
       0,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,   402,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,   409,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   427,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,   452,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   462,     0,   463,   464,     0,   465,   466,   467,
       0,   468,     0,     0,   469,   470,   471,   472,     0,   473,
       0,   474,   475,   476,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,   486,     0,   487,   488,   489,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,   504,   505,   506,   507,   508,
       0,     0,   509,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,     0,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,   535,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,   542,   543,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,     0,     0,     0,     0,   557,   558,   559,     0,
     560,   561,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,   577,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,     0,     0,     0,   627,   628,     0,     0,
       0,     0,     0,   197,   198,  3762,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,   220,   221,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,   227,
       0,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,   253,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,   272,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,   277,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,   302,   303,
       0,     0,     0,   304,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,   314,   315,     0,   316,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,     0,     0,
     323,   324,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,     0,     0,     0,   335,     0,
     336,     0,     0,   337,   338,     0,     0,   339,     0,     0,
     340,   341,     0,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,   402,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,   409,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   427,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,   452,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   462,     0,   463,   464,     0,   465,
     466,   467,     0,   468,     0,     0,   469,   470,   471,   472,
       0,   473,     0,   474,   475,   476,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,   486,     0,   487,   488,   489,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,   504,   505,   506,
     507,   508,     0,     0,   509,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,   535,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,   542,
     543,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,     0,     0,     0,     0,   557,   558,
     559,     0,   560,   561,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,   577,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,     0,     0,     0,   627,   628,
       0,     0,     0,     0,     0,   197,   198,  3776,   199,   200,
     201,   202,   203,   685,   686,   204,     0,     0,     0,     0,
     205,     0,     0,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,   220,
     221,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,   227,     0,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,   253,   254,     0,     0,     0,   255,   687,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,     0,   264,   265,     0,   266,
     688,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,   272,   689,     0,   273,   274,   275,     0,
       0,     0,   276,     0,   277,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   690,   287,   288,
     691,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   692,   298,   299,   300,   301,     0,     0,
     302,   303,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
     693,   313,     0,     0,     0,   314,   315,     0,   316,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
       0,     0,   323,   324,   325,   694,     0,   326,     0,     0,
       0,   695,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,   337,   338,     0,     0,   339,
       0,     0,   340,   341,   696,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,   697,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,     0,     0,     0,     0,   402,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   427,   428,   429,     0,   430,
       0,   698,   432,   433,   434,   699,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,   700,     0,   444,   445,   446,   447,   448,     0,   701,
     450,     0,   451,   452,   453,     0,     0,   702,   455,   456,
     457,   458,   459,   460,   461,     0,   462,     0,   463,   464,
       0,   465,   466,   467,     0,   468,     0,     0,   469,   470,
     471,   472,     0,   473,     0,   474,   475,   476,   477,   478,
       0,   479,   480,   703,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,   704,   705,     0,   487,
     488,   489,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,   504,
     505,   506,   507,   508,     0,     0,   509,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   706,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,   194,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,   707,     0,     0,
     535,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,   542,   543,     0,     0,   544,     0,     0,   545,   708,
     546,   709,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,   561,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,   577,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,     0,     0,
     594,   595,   596,     0,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,     0,     0,     0,
     627,   628,   197,   198,     0,   199,   200,   201,   202,   203,
     757,   686,   204,     0,     0,     0,     0,   205,     0,     0,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,     0,     0,   223,   224,     0,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,     0,     0,   255,   687,     0,     0,     0,
     256,     0,     0,   257,     0,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,     0,   264,   265,     0,   266,   688,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,   689,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   690,   287,   288,   691,     0,     0,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     692,   298,   299,   300,   301,     0,     0,   302,   303,     0,
       0,     0,   304,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   309,   310,   311,     0,   312,   693,   313,     0,
       0,     0,   314,   315,     0,   316,     0,     0,   317,   318,
       0,     0,     0,   319,   320,   321,   322,     0,     0,   323,
     324,   325,   694,     0,   326,     0,     0,     0,   695,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,     0,   340,
     341,   696,     0,     0,     0,     0,   342,   343,     0,   344,
       0,   345,   697,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,   370,   371,   372,
     373,     0,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   380,   381,     0,     0,   382,   383,     0,   384,
       0,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,     0,   397,   398,
     399,   400,     0,     0,     0,     0,   402,   403,     0,     0,
       0,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,     0,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   427,   428,   429,     0,   430,     0,   698,   432,
     433,   434,   758,     0,   436,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,   700,     0,
     444,   445,   446,   447,   448,     0,   701,   450,     0,   451,
     452,   453,     0,     0,   702,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   468,     0,     0,   469,   470,   471,   472,     0,
     473,     0,   474,   475,   476,   477,   478,     0,   479,   480,
     703,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,   704,   705,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,     0,     0,   509,   510,     0,     0,   511,   512,   513,
     514,   515,   516,     0,     0,   706,   518,   519,   520,     0,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   194,
     527,   528,     0,   529,   530,   531,   532,     0,     0,     0,
       0,     0,   533,   534,   707,     0,     0,   535,   536,   537,
       0,     0,   538,   539,     0,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,   708,   546,   709,   547,
     548,     0,     0,     0,     0,     0,   549,     0,   550,     0,
       0,   551,     0,     0,     0,   552,     0,   553,   554,   555,
     556,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   564,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,   571,   572,   573,     0,   574,
     575,   576,     0,   577,     0,     0,   578,     0,   579,     0,
       0,     0,     0,     0,     0,   580,   581,     0,     0,   582,
       0,   583,     0,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,     0,     0,   594,   595,   596,
       0,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,     0,     0,
     214,   831,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,   220,   221,     0,     0,   222,     0,     0,
     223,   224,     0,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,   253,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,  2477,
       0,     0,     0,     0,   262,   263,   851,     0,     0,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,   272,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,   277,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,     0,     0,   290,   291,   292,
     293,   294,     0,   855,   295,   296,     0,   297,   298,   299,
     300,   301,   856,     0,   302,   303,     0,     0,     0,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,   314,
     315,     0,   316,   861,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,     0,     0,   323,   324,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,     0,     0,     0,   335,     0,   336,     0,     0,   337,
     338,     0,     0,   339,     0,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,   868,     0,     0,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
     879,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,   402,   403,     0,   882,   883,   404,     0,
     405,   406,     0,   407,   408,   409,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   427,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,   452,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     462,     0,   463,   464,     0,   465,   466,   467,     0,   468,
       0,     0,   469,   470,   471,   472,     0,   473,     0,   474,
     475,   476,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,   486,     0,   487,   488,   489,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,   504,   505,   506,   507,   508,     0,     0,
     509,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   902,   527,   528,     0,
    2478,   530,   531,  2479,     0,     0,     0,     0,     0,   533,
     534,     0,     0,   908,   535,   536,   537,     0,   910,   538,
     539,   911,   540,   541,     0,   542,   543,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
       0,     0,     0,     0,   557,   558,   559,     0,   560,   561,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
     577,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,     0,     0,     0,   627,   628,   197,   198,     0,   199,
     200,   201,   202,   203,     0,   686,   204,     0,     0,     0,
       0,   205,     0,     0,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,     0,     0,   223,   224,     0,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,     0,     0,   255,
     687,     0,     0,     0,   256,     0,     0,   257,     0,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,     0,   264,   265,     0,
     266,   688,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,   689,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   690,   287,
     288,   691,     0,     0,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   692,   298,   299,   300,   301,     0,
       0,   302,   303,     0,     0,     0,   304,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   309,   310,   311,     0,
     312,   693,   313,     0,     0,     0,   314,   315,     0,   316,
       0,     0,   317,   318,     0,     0,     0,   319,   320,   321,
     322,     0,     0,   323,   324,   325,   694,     0,   326,     0,
       0,     0,   695,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,     0,   340,   341,   696,     0,     0,     0,     0,
     342,   343,     0,   344,     0,   345,   697,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,   370,   371,   372,   373,     0,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   380,   381,     0,     0,
     382,   383,     0,   384,     0,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,     0,   397,   398,   399,   400,     0,     0,     0,     0,
     402,   403,     0,     0,     0,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,     0,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   427,   428,   429,     0,
     430,     0,   698,   432,   433,   434,     0,     0,   436,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,   700,     0,   444,   445,   446,   447,   448,     0,
     701,   450,     0,   451,   452,   453,     0,     0,   702,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   468,     0,     0,   469,
     470,   471,   472,     0,   473,     0,   474,   475,   476,   477,
     478,     0,   479,   480,   703,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,   704,   705,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,     0,     0,   509,   510,     0,
       0,   511,   512,   513,   514,   515,   516,     0,     0,   706,
     518,   519,   520,     0,   521,   522,     0,     0,   523,   524,
     525,   526,     0,   194,   527,   528,     0,   529,   530,   531,
     532,     0,     0,     0,     0,     0,   533,   534,   707,     0,
       0,   535,   536,   537,     0,     0,   538,   539,     0,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
     708,   546,   709,   547,   548,     0,     0,     0,     0,     0,
     549,     0,   550,     0,     0,   551,     0,     0,     0,   552,
       0,   553,   554,   555,   556,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   564,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,   571,
     572,   573,     0,   574,   575,   576,     0,   577,     0,     0,
     578,     0,   579,     0,     0,     0,     0,     0,     0,   580,
     581,     0,     0,   582,     0,   583,     0,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,     0,
       0,   594,   595,   596,     0,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,   220,   221,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,   227,
       0,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,   253,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
    2829,     0,     0,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,   272,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,   277,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,   301,  2830,     0,   302,   303,
       0,     0,     0,   304,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,   314,   315,     0,   316,  2831,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,     0,     0,
     323,   324,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,     0,     0,     0,   335,     0,
     336,     0,     0,   337,   338,     0,     0,   339,     0,     0,
     340,   341,     0,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,  2832,     0,
       0,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,  1661,  1662,     0,   402,   403,     0,
       0,  2833,   404,     0,   405,   406,     0,   407,   408,   409,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   427,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,   452,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   462,     0,   463,   464,     0,   465,
     466,   467,     0,   468,     0,     0,   469,   470,   471,   472,
       0,   473,     0,   474,   475,   476,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,   486,     0,   487,   488,   489,
     490,     0,   491,   492,   493,   494,   495,     0,     0,  5337,
     752,  5338,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,   504,   505,   506,
     507,   508,     0,     0,   509,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,   535,   536,
     537,     0,  2834,   538,   539,     0,   540,   541,     0,   542,
     543,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,     0,     0,     0,     0,   557,   558,
     559,     0,   560,   561,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,   577,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,     0,     0,     0,   627,   628,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
     204,     0,     0,  1686,  1687,   205,  1688,     0,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,     0,
       0,   223,   224,     0,   225,   226,   227,     0,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,   249,     0,   250,   251,   252,   253,   254,
       0,     0,     0,   255,     0,     0,     0,     0,   256,     0,
       0,   257,     0,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
       0,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,     0,     0,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,   302,   303,     0,     0,     0,
     304,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     309,   310,   311,     0,   312,     0,   313,     0,     0,     0,
     314,   315,     0,   316,     0,     0,   317,   318,     0,     0,
       0,   319,   320,   321,   322,     0,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,     0,   340,   341,     0,
       0,     0,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,   370,   371,   372,   373,     0,
     374,   375,     0,     0,     0,     0,   376,   377,   378,   379,
     380,   381,     0,     0,   382,   383,     0,   384,     0,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,     0,   397,   398,   399,   400,
     401,     0,     0,     0,   402,   403,     0,     0,     0,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,  1689,     0,     0,  1690,     0,     0,     0,   411,
     412,   413,     0,   414,     0,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   436,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     468,     0,     0,   469,   470,   471,   472,     0,   473,     0,
     474,   475,   476,   477,   478,     0,   479,   480,     0,     0,
       0,   481,   482,   483,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,     0,
       0,   509,   510,     0,     0,   511,   512,   513,   514,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   521,   522,
       0,     0,   523,   524,   525,   526,     0,  1691,   527,   528,
       0,   529,   530,   531,   532,     0,     0,     0,     0,     0,
     533,   534,     0,     0,     0,   535,   536,   537,     0,     0,
     538,   539,     0,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   547,   548,     0,
       0,     0,     0,     0,   549,     0,   550,     0,     0,   551,
       0,     0,     0,   552,     0,   553,   554,   555,   556,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,  1692,     0,   564,     0,     0,   565,   566,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,   571,   572,   573,     0,   574,   575,   576,
       0,   577,     0,     0,   578,     0,   579,     0,     0,     0,
       0,     0,     0,   580,   581,     0,     0,   582,     0,   583,
       0,   584,   585,     0,     0,     0,   586,   587,   588,   589,
     590,   591,   592,   593,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,     0,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,     0,  1184,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,   220,   221,     0,     0,   222,     0,     0,   223,   224,
       0,   225,   226,   227,     0,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,   253,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,  1185,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,   272,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,   277,   278,     0,   279,
     280,   281,  1186,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,   302,   303,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,   314,   315,     0,
     316,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,     0,     0,   323,   324,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,     0,
       0,     0,   335,     0,   336,     0,     0,   337,   338,     0,
       0,   339,     0,     0,   340,   341,   989,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,   402,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,   409,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   427,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,   452,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   462,     0,
     463,   464,     0,   465,   466,   467,     0,   468,     0,     0,
     469,   470,   471,   472,     0,   473,     0,   474,   475,   476,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,  1187,   485,     0,     0,     0,   486,
       0,   487,   488,   489,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,   504,   505,   506,   507,   508,     0,     0,   509,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,   194,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,   535,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,   542,   543,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,     0,     0,
       0,     0,   557,   558,   559,     0,   560,   561,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,   577,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,     0,
       0,     0,   627,   628,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,   204,     0,     0,     0,     0,   205,
       0,     0,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,  2227,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,     0,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,  2228,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   312,     0,
     313,     0,     0,     0,   314,   315,     0,   316,     0,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,  1630,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,  1631,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,     0,     0,     0,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,     0,
     397,   398,   399,   400,   401,     0,     0,     0,   402,   403,
       0,     0,     0,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,     0,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,  2230,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,     0,   527,   528,     0,   529,   530,   531,   532,     0,
       0,     0,     0,     0,   533,   534,     0,     0,     0,   535,
     536,   537,     0,     0,   538,   539,     0,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   574,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
       0,  1209,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,   220,   221,     0,     0,   222,
       0,     0,   223,   224,     0,   225,   226,   227,     0,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,   253,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,  1210,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,   272,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
     277,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,     0,     0,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,   302,   303,     0,     0,
       0,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,   314,   315,     0,   316,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,     0,     0,   323,   324,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,     0,     0,     0,   335,     0,   336,     0,
       0,   337,   338,     0,     0,   339,     0,     0,   340,   341,
     989,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,   402,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,   409,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   427,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,   452,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   462,     0,   463,   464,     0,   465,   466,   467,
       0,   468,     0,     0,   469,   470,   471,   472,     0,   473,
       0,   474,   475,   476,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,   486,     0,   487,   488,   489,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,   504,   505,   506,   507,   508,
       0,     0,   509,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,   194,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,   535,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,   542,   543,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,     0,     0,     0,     0,   557,   558,   559,     0,
     560,   561,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,   577,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,     0,     0,     0,   627,   628,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,   204,     0,
       0,     0,     0,   205,     0,     0,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,     0,     0,   223,
     224,     0,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,     0,
       0,   255,     0,     0,     0,     0,   256,     0,     0,   257,
       0,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,     0,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,     0,     0,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,   302,   303,     0,     0,     0,   304,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   309,   310,
     311,     0,   312,     0,   313,     0,     0,     0,   314,   315,
       0,   316,     0,     0,   317,   318,     0,     0,     0,   319,
     320,   321,   322,     0,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,     0,   340,   341,     0,     0,     0,
       0,     0,   342,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,  1481,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,   370,   371,   372,   373,     0,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   380,   381,
       0,     0,   382,   383,     0,   384,     0,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,     0,   397,   398,   399,   400,   401,     0,
       0,     0,   402,   403,     0,     0,  1482,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
     884,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   427,   428,
     429,     0,   430,     0,   431,   432,   433,   434,   435,     0,
     436,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,   449,   450,     0,   451,   452,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   468,     0,
       0,   469,   470,   471,   472,     0,   473,     0,   474,   475,
     476,   477,   478,     0,   479,   480,     0,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
     486,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,     0,     0,   509,
     510,     0,     0,   511,   512,   513,   514,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   521,   522,     0,     0,
     523,   524,   525,   526,     0,     0,   527,   528,     0,   529,
     530,   531,   532,     0,     0,     0,     0,     0,   533,   534,
       0,     0,     0,   535,   536,   537,     0,  1483,   538,   539,
       0,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   547,   548,     0,     0,     0,
       0,     0,   549,     0,   550,     0,     0,   551,     0,     0,
       0,   552,     0,   553,   554,   555,   556,     0,     0,     0,
       0,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   564,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,     0,     0,
       0,   571,   572,   573,     0,   574,   575,   576,     0,   577,
       0,     0,   578,     0,   579,     0,     0,     0,     0,     0,
       0,   580,   581,     0,     0,   582,     0,   583,     0,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,   593,     0,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,   204,     0,     0,     0,     0,
     205,     0,     0,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,     0,  1184,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,   220,
     221,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,   227,     0,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,   253,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,  3581,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,   272,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,   277,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
     302,   303,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,   314,   315,     0,   316,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
       0,     0,   323,   324,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,   337,   338,     0,     0,   339,
       0,     0,   340,   341,   989,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,   402,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   427,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,   452,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   462,     0,   463,   464,
       0,   465,   466,   467,     0,   468,     0,     0,   469,   470,
     471,   472,     0,   473,     0,   474,   475,   476,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,   486,     0,   487,
     488,   489,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,   504,
     505,   506,   507,   508,     0,     0,   509,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,   194,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
     535,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,   542,   543,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,   561,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,   577,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,     0,     0,     0,
     627,   628,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,     0,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,     0,     0,   223,   224,     0,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,     0,     0,   255,     0,     0,     0,     0,
     256,   988,     0,   257,     0,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,     0,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,     0,     0,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,   302,   303,     0,
       0,     0,   304,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   309,   310,   311,     0,   312,     0,   313,     0,
       0,     0,   314,   315,     0,   316,     0,     0,   317,   318,
       0,     0,     0,   319,   320,   321,   322,     0,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,     0,   340,
     341,   989,     0,     0,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,   370,   371,   372,
     373,     0,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   380,   381,     0,     0,   382,   383,     0,   384,
       0,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,     0,   397,   398,
     399,   400,   401,     0,     0,     0,   402,   403,     0,     0,
       0,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,     0,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   427,   428,   429,     0,   430,     0,   431,   432,
     433,   434,   435,     0,   436,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,   449,   450,     0,   451,
     452,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   468,     0,     0,   469,   470,   471,   472,     0,
     473,     0,   474,   475,   476,   477,   478,     0,   479,   480,
       0,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,   486,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,     0,     0,   509,   510,     0,     0,   511,   512,   513,
     514,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   194,
     527,   528,     0,   529,   530,   531,   532,     0,     0,     0,
       0,     0,   533,   534,     0,     0,     0,   535,   536,   537,
       0,     0,   538,   539,     0,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   990,
     548,     0,     0,     0,     0,     0,   549,     0,   550,     0,
       0,   551,     0,     0,     0,   552,     0,   553,   554,   555,
     556,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   564,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,   571,   572,   573,     0,   574,
     575,   576,     0,   577,     0,     0,   578,     0,   579,     0,
       0,     0,     0,     0,     0,   580,   581,     0,     0,   582,
       0,   583,     0,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,   593,     0,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,   220,   221,     0,     0,   222,     0,     0,
     223,   224,     0,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,   253,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,   988,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,   272,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,   277,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,     0,     0,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,   302,   303,     0,     0,     0,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,   314,
     315,     0,   316,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,     0,     0,   323,   324,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,     0,     0,     0,   335,     0,   336,     0,     0,   337,
     338,     0,     0,   339,     0,     0,   340,   341,   989,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,   402,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,   409,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   427,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,   452,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     462,     0,   463,   464,     0,   465,   466,   467,     0,   468,
       0,     0,   469,   470,   471,   472,     0,   473,     0,   474,
     475,   476,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,   486,     0,   487,   488,   489,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,   504,   505,   506,   507,   508,     0,     0,
     509,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,   194,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,   535,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,   542,   543,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
       0,     0,     0,     0,   557,   558,   559,     0,   560,   561,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
     577,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,     0,     0,     0,   627,   628,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,   204,     0,     0,     0,
       0,   205,     0,     0,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,     0,     0,   214,  1281,     0,
       0,   215,     0,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,     0,     0,   223,   224,     0,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,     0,     0,   255,
       0,     0,     0,     0,   256,     0,     0,   257,     0,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,     0,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,   302,   303,     0,     0,     0,   304,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   309,   310,   311,     0,
     312,     0,   313,     0,     0,     0,   314,   315,     0,   316,
    1282,     0,   317,   318,     0,     0,     0,   319,   320,   321,
     322,     0,     0,   323,   324,   325,     0,     0,   326,     0,
       0,     0,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,     0,   340,   341,     0,     0,     0,     0,     0,
     342,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,   370,   371,   372,   373,     0,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   380,   381,     0,     0,
     382,   383,     0,   384,     0,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,     0,   397,   398,   399,   400,   401,     0,     0,     0,
     402,   403,     0,     0,     0,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,     0,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   436,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   468,     0,     0,   469,
     470,   471,   472,     0,   473,     0,   474,   475,   476,   477,
     478,     0,   479,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,     0,     0,   509,   510,     0,
       0,   511,   512,   513,   514,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   521,   522,     0,     0,   523,   524,
     525,   526,     0,  1283,   527,   528,     0,   529,   530,   531,
     532,     0,     0,     0,     0,     0,   533,   534,     0,     0,
       0,   535,   536,   537,     0,     0,   538,   539,     0,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   547,   548,     0,     0,     0,     0,     0,
     549,     0,   550,     0,     0,   551,     0,     0,     0,   552,
       0,   553,   554,   555,   556,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   564,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,   571,
     572,   573,     0,   574,   575,   576,     0,   577,     0,     0,
     578,     0,   579,     0,     0,     0,     0,     0,     0,   580,
     581,     0,     0,   582,     0,   583,     0,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,   593,
       0,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,   197,   198,     0,   199,   200,   201,   202,
     203,  1896,     0,   204,     0,     0,     0,     0,   205,     0,
       0,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,   220,   221,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,   227,
       0,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,   253,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,   272,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,   277,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,   302,   303,
       0,     0,     0,   304,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,   314,   315,     0,   316,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,     0,     0,
     323,   324,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,     0,     0,     0,   335,     0,
     336,     0,     0,   337,   338,     0,     0,   339,     0,     0,
     340,   341,   989,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,   402,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,   409,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   427,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,   452,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   462,     0,   463,   464,     0,   465,
     466,   467,     0,   468,     0,     0,   469,   470,   471,   472,
       0,   473,     0,   474,   475,   476,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,   486,     0,   487,   488,   489,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,   504,   505,   506,
     507,   508,     0,     0,   509,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
     194,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,   535,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,   542,
     543,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,     0,     0,     0,     0,   557,   558,
     559,     0,   560,   561,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,   577,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,     0,     0,     0,   627,   628,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
     204,     0,     0,     0,     0,   205,     0,     0,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,     0,
    2573,   214,     0,     0,     0,   215,     0,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,     0,
       0,   223,   224,     0,   225,   226,   227,     0,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,   249,     0,   250,   251,   252,   253,   254,
       0,     0,     0,   255,     0,     0,     0,     0,   256,     0,
       0,   257,     0,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
       0,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,     0,     0,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,   302,   303,     0,     0,     0,
     304,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     309,   310,   311,     0,   312,     0,   313,     0,     0,     0,
     314,   315,     0,   316,     0,     0,   317,   318,     0,     0,
       0,   319,   320,   321,   322,     0,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,     0,   340,   341,   989,
       0,     0,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,   370,   371,   372,   373,     0,
     374,   375,     0,     0,     0,     0,   376,   377,   378,   379,
     380,   381,     0,     0,   382,   383,     0,   384,     0,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,     0,   397,   398,   399,   400,
     401,     0,     0,     0,   402,   403,     0,     0,     0,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   411,
     412,   413,     0,   414,     0,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   436,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     468,     0,     0,   469,   470,   471,   472,     0,   473,     0,
     474,   475,   476,   477,   478,     0,   479,   480,     0,     0,
       0,   481,   482,   483,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,     0,
       0,   509,   510,     0,     0,   511,   512,   513,   514,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   521,   522,
       0,     0,   523,   524,   525,   526,     0,   194,   527,   528,
       0,   529,   530,   531,   532,     0,     0,     0,     0,     0,
     533,   534,     0,     0,     0,   535,   536,   537,     0,     0,
     538,   539,     0,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   547,   548,     0,
       0,     0,     0,     0,   549,     0,   550,     0,     0,   551,
       0,     0,     0,   552,     0,   553,   554,   555,   556,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,     0,     0,   564,     0,     0,   565,   566,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,   571,   572,   573,     0,   574,   575,   576,
       0,   577,     0,     0,   578,     0,   579,     0,     0,     0,
       0,     0,     0,   580,   581,     0,     0,   582,     0,   583,
       0,   584,   585,     0,     0,     0,   586,   587,   588,   589,
     590,   591,   592,   593,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,     0,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,   220,   221,     0,     0,   222,     0,     0,   223,   224,
       0,   225,   226,   227,     0,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,   253,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,   272,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,   277,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,   302,   303,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,   314,   315,     0,
     316,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,     0,     0,   323,   324,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,     0,
       0,     0,   335,     0,   336,     0,     0,   337,   338,     0,
       0,   339,     0,     0,   340,   341,   989,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,   402,   403,     0,  3014,     0,   404,     0,   405,   406,
       0,   407,   408,   409,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   427,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,   452,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   462,     0,
     463,   464,     0,   465,   466,   467,     0,   468,     0,     0,
     469,   470,   471,   472,     0,   473,     0,   474,   475,   476,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,   486,
       0,   487,   488,   489,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,   504,   505,   506,   507,   508,     0,     0,   509,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,   194,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,   535,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,   542,   543,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,     0,     0,
       0,     0,   557,   558,   559,     0,   560,   561,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,   577,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,     0,
       0,     0,   627,   628,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,   204,     0,     0,     0,     0,   205,
       0,     0,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,  1184,   214,     0,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,     0,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   312,     0,
     313,     0,     0,     0,   314,   315,     0,   316,     0,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,   989,     0,     0,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,     0,
     397,   398,   399,   400,   401,     0,     0,     0,   402,   403,
       0,     0,     0,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,     0,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   194,   527,   528,     0,   529,   530,   531,   532,     0,
       0,     0,     0,     0,   533,   534,     0,     0,     0,   535,
     536,   537,     0,     0,   538,   539,     0,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   574,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,   197,   198,     0,   199,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,   220,   221,     0,     0,   222,
       0,     0,   223,   224,     0,   225,   226,   227,     0,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,   253,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,     0,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,   272,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
     277,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,     0,     0,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,   302,   303,     0,     0,
       0,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,   314,   315,     0,   316,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,     0,     0,   323,   324,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,     0,     0,     0,   335,     0,   336,     0,
       0,   337,   338,     0,     0,   339,     0,     0,   340,   341,
     989,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,   402,   403,     0,  3647,     0,
     404,     0,   405,   406,     0,   407,   408,   409,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   427,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,   452,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   462,     0,   463,   464,     0,   465,   466,   467,
       0,   468,     0,     0,   469,   470,   471,   472,     0,   473,
       0,   474,   475,   476,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,   486,     0,   487,   488,   489,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,   504,   505,   506,   507,   508,
       0,     0,   509,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,   194,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,   535,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,   542,   543,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,     0,     0,     0,     0,   557,   558,   559,     0,
     560,   561,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,   577,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,     0,     0,     0,   627,   628,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,   204,     0,
       0,     0,     0,   205,     0,     0,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,     0,     0,   223,
     224,     0,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,     0,
       0,   255,     0,     0,     0,     0,   256,     0,     0,   257,
       0,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,     0,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,     0,     0,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,   302,   303,     0,     0,     0,   304,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   309,   310,
     311,     0,   312,     0,   313,     0,     0,     0,   314,   315,
       0,   316,     0,     0,   317,   318,     0,     0,     0,   319,
     320,   321,   322,     0,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,     0,   340,   341,   989,     0,     0,
       0,     0,   342,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,   370,   371,   372,   373,     0,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   380,   381,
       0,     0,   382,   383,     0,   384,     0,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,     0,   397,   398,   399,   400,   401,     0,
       0,     0,   402,   403,     0,     0,     0,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
       0,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   427,   428,
     429,     0,   430,     0,   431,   432,   433,   434,   435,     0,
     436,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,   449,   450,     0,   451,   452,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   468,     0,
       0,   469,   470,   471,   472,     0,   473,     0,   474,   475,
     476,   477,   478,     0,   479,   480,     0,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
     486,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,     0,     0,   509,
     510,     0,     0,   511,   512,   513,   514,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   521,   522,     0,     0,
     523,   524,   525,   526,     0,   194,   527,   528,     0,   529,
     530,   531,   532,     0,     0,     0,     0,     0,   533,   534,
       0,     0,     0,   535,   536,   537,     0,     0,   538,   539,
       0,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   547,   548,     0,     0,     0,
       0,     0,   549,     0,   550,     0,     0,   551,     0,     0,
       0,   552,     0,   553,   554,   555,   556,     0,     0,     0,
       0,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   564,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,     0,     0,
       0,   571,   572,   573,     0,   574,   575,   576,     0,   577,
       0,     0,   578,     0,   579,     0,     0,     0,     0,     0,
       0,   580,   581,     0,     0,   582,     0,   583,     0,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,   593,     0,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,   204,     0,     0,     0,     0,
     205,     0,     0,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,   220,
     221,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,   227,     0,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,   253,   254,  5144,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,   272,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,   277,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,     0,  5145,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
     302,   303,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,   314,   315,     0,   316,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
       0,     0,   323,   324,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,   337,   338,     0,     0,   339,
       0,     0,   340,   341,     0,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,   402,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   427,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,   452,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   462,     0,   463,   464,
       0,   465,   466,   467,     0,   468,     0,     0,   469,   470,
     471,   472,     0,   473,     0,   474,   475,   476,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,   486,     0,   487,
     488,   489,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,   504,
     505,   506,   507,   508,     0,     0,   509,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,     0,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
     535,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,   542,   543,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,   561,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,   577,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,     0,     0,     0,
     627,   628,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,     0,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,     0,     0,   223,   224,     0,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,     0,     0,   255,     0,     0,     0,     0,
     256,     0,     0,   257,     0,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,     0,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,     0,     0,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,   302,   303,     0,
       0,     0,   304,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   309,   310,   311,     0,   312,     0,   313,     0,
       0,     0,   314,   315,     0,   316,     0,     0,   317,   318,
       0,     0,     0,   319,   320,   321,   322,     0,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,     0,   340,
     341,     0,     0,     0,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,   370,   371,   372,
     373,     0,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   380,   381,     0,     0,   382,   383,     0,   384,
       0,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,     0,   397,   398,
     399,   400,   401,     0,     0,     0,   402,   403,     0,     0,
       0,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,     0,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   427,   428,   429,     0,   430,     0,   431,   432,
     433,   434,   435,     0,   436,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,   449,   450,     0,   451,
     452,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   468,     0,     0,   469,   470,   471,   472,     0,
     473,     0,   474,   475,   476,   477,   478,     0,   479,   480,
       0,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,   486,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,   752,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,     0,     0,   509,   510,     0,     0,   511,   512,   513,
     514,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     521,   522,     0,     0,   523,   524,   525,   526,     0,     0,
     527,   528,     0,   529,   530,   531,   532,     0,     0,     0,
       0,     0,   533,   534,     0,     0,     0,   535,   536,   537,
       0,     0,   538,   539,     0,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   547,
     548,     0,     0,     0,     0,     0,   549,     0,   550,     0,
       0,   551,     0,     0,     0,   552,     0,   553,   554,   555,
     556,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   564,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,   571,   572,   573,     0,   574,
     575,   576,     0,   577,     0,     0,   578,     0,   579,     0,
       0,     0,     0,     0,     0,   580,   581,     0,     0,   582,
       0,   583,     0,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,   593,     0,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,   220,   221,     0,     0,   222,     0,     0,
     223,   224,     0,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,   253,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,   272,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,   277,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,     0,     0,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,   302,   303,     0,     0,     0,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,   314,
     315,     0,   316,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,     0,     0,   323,   324,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,     0,     0,     0,   335,     0,   336,     0,     0,   337,
     338,     0,     0,   339,     0,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,   402,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,   409,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   427,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,   452,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     462,     0,   463,   464,     0,   465,   466,   467,     0,   468,
       0,     0,   469,   470,   471,   472,     0,   473,     0,   474,
     475,   476,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,   486,     0,   487,   488,   489,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,   504,   505,   506,   507,   508,     0,     0,
     509,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,     0,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,   535,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,   542,   543,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
       0,     0,     0,     0,   557,   558,   559,     0,   560,   561,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,   815,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
     577,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,     0,     0,     0,   627,   628,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,   204,     0,  1016,     0,
       0,   205,     0,     0,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,     0,     0,   223,   224,     0,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,     0,     0,   255,
       0,     0,     0,     0,   256,     0,     0,   257,     0,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,     0,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,   302,   303,     0,     0,     0,  1017,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   309,   310,   311,     0,
     312,     0,   313,     0,     0,     0,   314,   315,     0,   316,
       0,     0,   317,   318,     0,     0,     0,   319,   320,   321,
     322,     0,     0,   323,   324,   325,     0,     0,   326,     0,
       0,     0,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,     0,   340,   341,     0,     0,     0,     0,     0,
     342,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,   370,   371,   372,   373,     0,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   380,   381,     0,     0,
     382,   383,     0,   384,     0,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,     0,   397,   398,   399,   400,   401,     0,     0,     0,
     402,   403,     0,     0,     0,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,     0,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   436,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   468,     0,     0,   469,
     470,   471,   472,     0,   473,     0,   474,   475,   476,   477,
     478,     0,   479,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,     0,     0,   509,   510,     0,
       0,   511,   512,   513,   514,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   521,   522,     0,     0,   523,   524,
     525,   526,     0,     0,   527,   528,     0,   529,   530,   531,
     532,     0,     0,     0,     0,     0,   533,   534,     0,     0,
       0,   535,   536,   537,     0,     0,   538,   539,     0,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   547,   548,     0,     0,     0,     0,     0,
     549,     0,   550,     0,     0,   551,     0,     0,     0,   552,
       0,   553,   554,   555,   556,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   564,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,   571,
     572,   573,     0,   574,   575,   576,     0,   577,     0,     0,
     578,     0,   579,     0,     0,     0,     0,     0,     0,   580,
     581,     0,     0,   582,     0,   583,     0,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,   593,
       0,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,   220,   221,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,   227,
       0,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,   253,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,   272,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,   277,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,   302,   303,
       0,     0,     0,   304,   305,  2194,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,   314,   315,     0,   316,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,     0,     0,
     323,   324,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,     0,     0,     0,   335,     0,
     336,     0,     0,   337,   338,     0,     0,   339,     0,     0,
     340,   341,     0,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,   402,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,   409,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   427,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,   452,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   462,     0,   463,   464,     0,   465,
     466,   467,     0,   468,     0,     0,   469,   470,   471,   472,
       0,   473,     0,   474,   475,   476,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,   486,     0,   487,   488,   489,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,   504,   505,   506,
     507,   508,     0,     0,   509,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,   535,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,   542,
     543,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,     0,     0,     0,     0,   557,   558,
     559,     0,   560,   561,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,   577,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,     0,     0,     0,   627,   628,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
     204,     0,     0,     0,     0,   205,     0,     0,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,     0,
       0,   223,   224,     0,   225,   226,   227,     0,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,   249,     0,   250,   251,   252,   253,   254,
       0,     0,     0,   255,     0,     0,     0,     0,   256,     0,
       0,   257,     0,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
    2321,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,     0,     0,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,   302,   303,     0,     0,     0,
     304,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     309,   310,   311,     0,   312,     0,   313,     0,     0,     0,
     314,   315,     0,   316,     0,     0,   317,   318,     0,     0,
       0,   319,   320,   321,   322,     0,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,     0,   340,   341,     0,
       0,     0,     0,     0,   342,   343,     0,   344,     0,   345,
       0,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,   370,   371,   372,   373,     0,
     374,   375,     0,     0,     0,     0,   376,   377,   378,   379,
     380,   381,     0,     0,   382,   383,     0,   384,     0,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,     0,   397,   398,   399,   400,
     401,     0,     0,     0,   402,   403,     0,     0,     0,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   411,
     412,   413,     0,   414,     0,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   436,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     468,     0,     0,   469,   470,   471,   472,     0,   473,     0,
     474,   475,   476,   477,   478,     0,   479,   480,     0,     0,
       0,   481,   482,   483,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,     0,
       0,   509,   510,     0,     0,   511,   512,   513,   514,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   521,   522,
       0,     0,   523,   524,   525,   526,     0,     0,   527,   528,
       0,   529,   530,   531,   532,     0,     0,     0,     0,     0,
     533,   534,     0,     0,     0,   535,   536,   537,     0,     0,
     538,   539,     0,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   547,   548,     0,
       0,     0,     0,     0,   549,     0,   550,     0,     0,   551,
       0,     0,     0,   552,     0,   553,   554,   555,   556,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,     0,     0,   564,     0,     0,   565,   566,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,   571,   572,   573,     0,   574,   575,   576,
       0,   577,     0,     0,   578,     0,   579,     0,     0,     0,
       0,     0,     0,   580,   581,     0,     0,   582,     0,   583,
       0,   584,   585,     0,     0,     0,   586,   587,   588,   589,
     590,   591,   592,   593,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,     0,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,   220,   221,     0,     0,   222,     0,     0,   223,   224,
       0,   225,   226,   227,     0,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,   253,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,   272,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,   277,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,   302,   303,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,   314,   315,     0,
     316,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,     0,     0,   323,   324,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,     0,
       0,     0,   335,     0,   336,     0,     0,   337,   338,     0,
       0,   339,     0,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,   402,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,   409,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   427,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,   452,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   462,     0,
     463,   464,     0,   465,   466,   467,     0,   468,     0,     0,
     469,   470,   471,   472,     0,   473,     0,   474,   475,   476,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,   486,
       0,   487,   488,   489,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,   504,   505,   506,   507,   508,     0,     0,   509,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,  1691,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,   535,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,   542,   543,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,     0,     0,
       0,     0,   557,   558,   559,     0,   560,   561,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,   577,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,     0,
       0,     0,   627,   628,   197,   198,     0,   199,   200,   201,
     202,   203,     0,     0,   204,     0,     0,     0,     0,   205,
       0,     0,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,  2940,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
       0,     0,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   312,     0,
     313,     0,     0,     0,   314,   315,     0,   316,     0,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,     0,     0,     0,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,     0,
     397,   398,   399,   400,   401,     0,     0,     0,   402,   403,
       0,     0,     0,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
     431,   432,   433,   434,   435,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,   449,   450,
       0,   451,   452,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,     0,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,   486,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,   517,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,     0,   527,   528,     0,   529,   530,   531,   532,     0,
       0,     0,     0,     0,   533,   534,     0,     0,     0,   535,
     536,   537,     0,     0,   538,   539,     0,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   574,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,   593,     0,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,   197,   198,     0,   199,   200,   201,   202,   203,  2951,
       0,   204,     0,     0,     0,     0,   205,     0,     0,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,   220,   221,     0,     0,   222,
       0,     0,   223,   224,     0,   225,   226,   227,     0,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,   253,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,     0,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,   272,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
     277,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,     0,     0,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,   302,   303,     0,     0,
       0,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,   314,   315,     0,   316,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,     0,     0,   323,   324,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,     0,     0,     0,   335,     0,   336,     0,
       0,   337,   338,     0,     0,   339,     0,     0,   340,   341,
       0,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,   402,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,   409,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   427,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,   452,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,   462,     0,   463,   464,     0,   465,   466,   467,
       0,   468,     0,     0,   469,   470,   471,   472,     0,   473,
       0,   474,   475,   476,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,   486,     0,   487,   488,   489,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,   504,   505,   506,   507,   508,
       0,     0,   509,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,     0,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,   535,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,   542,   543,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,     0,     0,     0,     0,   557,   558,   559,     0,
     560,   561,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,   577,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,     0,     0,     0,   627,   628,   197,   198,
       0,   199,   200,   201,   202,   203,     0,     0,   204,     0,
       0,     0,     0,   205,     0,     0,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,     0,     0,   223,
     224,     0,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,     0,
       0,   255,     0,     0,     0,     0,   256,     0,     0,   257,
       0,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,  2979,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,     0,     0,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,   302,   303,     0,     0,     0,   304,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   309,   310,
     311,     0,   312,     0,   313,     0,     0,     0,   314,   315,
       0,   316,     0,     0,   317,   318,     0,     0,     0,   319,
     320,   321,   322,     0,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,     0,   340,   341,     0,     0,     0,
       0,     0,   342,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,   370,   371,   372,   373,     0,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   380,   381,
       0,     0,   382,   383,     0,   384,     0,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,     0,   397,   398,   399,   400,   401,     0,
       0,     0,   402,   403,     0,     0,     0,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
       0,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   427,   428,
     429,     0,   430,     0,   431,   432,   433,   434,   435,     0,
     436,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,   449,   450,     0,   451,   452,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   468,     0,
       0,   469,   470,   471,   472,     0,   473,     0,   474,   475,
     476,   477,   478,     0,   479,   480,     0,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
     486,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,     0,     0,   509,
     510,     0,     0,   511,   512,   513,   514,   515,   516,     0,
       0,   517,   518,   519,   520,     0,   521,   522,     0,     0,
     523,   524,   525,   526,     0,     0,   527,   528,     0,   529,
     530,   531,   532,     0,     0,     0,     0,     0,   533,   534,
       0,     0,     0,   535,   536,   537,     0,     0,   538,   539,
       0,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   547,   548,     0,     0,     0,
       0,     0,   549,     0,   550,     0,     0,   551,     0,     0,
       0,   552,     0,   553,   554,   555,   556,     0,     0,     0,
       0,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   564,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,     0,     0,
       0,   571,   572,   573,     0,   574,   575,   576,     0,   577,
       0,     0,   578,     0,   579,     0,     0,     0,     0,     0,
       0,   580,   581,     0,     0,   582,     0,   583,     0,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,   593,     0,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,   197,   198,     0,   199,   200,
     201,   202,   203,     0,     0,   204,     0,     0,     0,     0,
     205,     0,     0,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,   220,
     221,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,   227,     0,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,   253,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,   272,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,   277,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
     302,   303,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,   314,   315,     0,   316,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
       0,     0,   323,   324,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,   337,   338,     0,     0,   339,
       0,     0,   340,   341,     0,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,   402,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   427,   428,   429,  3045,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,   452,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   462,     0,   463,   464,
       0,   465,   466,   467,     0,   468,     0,     0,   469,   470,
     471,   472,     0,   473,     0,   474,   475,   476,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,   486,     0,   487,
     488,   489,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,   504,
     505,   506,   507,   508,     0,     0,   509,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,     0,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
     535,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,   542,   543,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,   561,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,   577,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,     0,     0,     0,
     627,   628,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,     0,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,     0,     0,   223,   224,     0,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,     0,     0,   255,     0,     0,     0,     0,
     256,     0,     0,   257,     0,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,     0,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,     0,     0,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,   302,   303,     0,
       0,     0,   304,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   309,   310,   311,     0,   312,     0,   313,     0,
       0,     0,   314,   315,     0,   316,     0,     0,   317,   318,
       0,     0,     0,   319,   320,   321,   322,     0,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,     0,   340,
     341,     0,     0,     0,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,   370,   371,   372,
     373,     0,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   380,   381,     0,     0,   382,   383,     0,   384,
       0,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,     0,   397,   398,
     399,   400,   401,     0,     0,     0,   402,   403,     0,     0,
       0,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,     0,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   427,   428,   429,     0,   430,     0,   431,   432,
     433,   434,   435,     0,   436,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,   449,   450,     0,   451,
     452,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   468,     0,     0,   469,   470,   471,   472,     0,
     473,     0,   474,   475,   476,   477,   478,     0,   479,   480,
       0,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,   486,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,     0,     0,   509,   510,     0,     0,   511,   512,   513,
     514,   515,   516,     0,     0,   517,   518,   519,   520,     0,
     521,   522,     0,     0,   523,   524,   525,   526,     0,     0,
     527,   528,     0,   529,   530,   531,   532,     0,     0,     0,
       0,     0,   533,   534,     0,     0,     0,   535,   536,   537,
       0,     0,   538,   539,     0,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   547,
     548,     0,     0,     0,     0,     0,   549,     0,   550,     0,
       0,   551,     0,     0,     0,   552,     0,   553,   554,   555,
     556,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   564,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,   571,   572,   573,     0,   574,
     575,   576,     0,   577,     0,     0,   578,     0,   579,     0,
       0,     0,     0,     0,     0,   580,   581,     0,     0,   582,
       0,   583,     0,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,   593,     0,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,   206,     0,   207,
     208,   209,   210,   211,   212,     0,   213,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,   220,   221,     0,     0,   222,     0,     0,
     223,   224,     0,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,     0,   235,   236,     0,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,   253,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,   272,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,   277,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,     0,     0,   290,   291,   292,
     293,   294,     0,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,   302,   303,     0,     0,     0,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,   314,
     315,     0,   316,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,     0,     0,   323,   324,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,   329,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,     0,     0,     0,   335,     0,   336,     0,     0,   337,
     338,     0,     0,   339,     0,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,   402,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,   409,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,   426,     0,   427,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,   452,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     462,     0,   463,   464,     0,   465,   466,   467,     0,   468,
       0,     0,   469,   470,   471,   472,     0,   473,     0,   474,
     475,   476,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,   486,     0,   487,   488,   489,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,   504,   505,   506,   507,   508,     0,     0,
     509,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,     0,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,   535,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,   542,   543,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
       0,     0,     0,     0,   557,   558,   559,     0,   560,   561,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
     577,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
       0,     0,     0,     0,   679,   628,   197,   198,     0,   199,
     200,   201,   202,   203,     0,     0,   204,     0,     0,     0,
       0,   205,     0,     0,   206,     0,   207,   208,   209,   210,
     211,   212,     0,   213,     0,     0,     0,   214,     0,     0,
       0,   215,     0,     0,   216,   217,   218,     0,   219,     0,
     220,   221,     0,     0,   222,     0,     0,   223,   224,     0,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,     0,   235,   236,     0,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,   248,   249,
       0,   250,   251,   252,   253,   254,     0,     0,     0,   255,
       0,     0,     0,     0,   256,     0,     0,   257,     0,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,     0,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   267,   268,   269,   270,
     271,     0,     0,     0,   272,     0,     0,   273,   274,   275,
       0,     0,     0,   276,     0,   277,   278,     0,   279,   280,
     281,     0,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,     0,     0,   290,   291,   292,   293,   294,     0,
       0,   295,   296,     0,   297,   298,   299,  1776,   301,     0,
       0,   302,   303,     0,     0,     0,   304,   305,     0,   306,
       0,     0,     0,   307,     0,   308,   309,   310,   311,     0,
     312,     0,   313,     0,     0,     0,   314,   315,     0,   316,
       0,     0,   317,   318,     0,     0,     0,   319,   320,   321,
     322,     0,     0,   323,   324,   325,     0,     0,   326,     0,
       0,     0,     0,   327,   328,   329,     0,     0,     0,   330,
       0,     0,     0,   331,   332,     0,   333,   334,     0,     0,
       0,   335,     0,   336,     0,     0,   337,   338,     0,     0,
     339,     0,     0,   340,   341,     0,     0,     0,     0,     0,
     342,   343,     0,   344,     0,   345,     0,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   348,     0,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,   370,   371,   372,   373,     0,   374,   375,     0,     0,
       0,     0,   376,   377,   378,   379,   380,   381,     0,     0,
     382,   383,     0,   384,     0,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,     0,   397,   398,  1777,   400,   401,     0,     0,     0,
     402,   403,     0,     0,     0,   404,     0,   405,   406,     0,
     407,   408,   409,     0,     0,   410,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   411,   412,   413,     0,   414,
       0,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   426,     0,   427,   428,   429,     0,
     430,     0,   431,   432,   433,   434,   435,     0,   436,   437,
     438,     0,     0,   439,     0,     0,     0,   440,   441,     0,
     442,   443,     0,     0,   444,   445,   446,   447,   448,     0,
     449,   450,     0,   451,   452,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   462,     0,   463,
     464,     0,   465,   466,   467,     0,   468,     0,     0,   469,
     470,   471,   472,     0,   473,     0,   474,   475,   476,   477,
     478,     0,   479,   480,     0,     0,     0,   481,   482,   483,
     484,     0,     0,     0,   485,     0,     0,     0,   486,     0,
     487,   488,   489,   490,     0,   491,   492,   493,   494,   495,
       0,     0,     0,     0,     0,   496,   497,   498,     0,   499,
       0,     0,   500,     0,     0,   501,     0,   502,     0,   503,
     504,   505,   506,   507,   508,     0,     0,   509,   510,     0,
       0,   511,   512,   513,   514,   515,   516,     0,     0,   517,
     518,   519,   520,     0,   521,   522,     0,     0,   523,   524,
     525,   526,     0,     0,   527,   528,     0,   529,   530,   531,
     532,     0,     0,     0,     0,     0,   533,   534,     0,     0,
       0,   535,   536,   537,     0,     0,   538,   539,     0,   540,
     541,     0,   542,   543,     0,     0,   544,     0,     0,   545,
       0,   546,     0,   547,   548,     0,     0,     0,     0,     0,
     549,     0,   550,     0,     0,   551,     0,     0,     0,   552,
       0,   553,   554,   555,   556,     0,     0,     0,     0,     0,
       0,   557,   558,   559,     0,   560,   561,   562,   563,     0,
       0,   564,     0,     0,   565,   566,   567,   568,   569,     0,
     570,     0,     0,     0,     0,     0,     0,     0,     0,   571,
     572,   573,     0,   574,   575,   576,     0,   577,     0,     0,
     578,     0,   579,     0,     0,     0,     0,     0,     0,   580,
     581,     0,     0,   582,     0,   583,     0,   584,   585,     0,
       0,     0,   586,   587,   588,   589,   590,   591,   592,   593,
       0,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,     0,     0,     0,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,     0,     0,     0,
       0,   627,   628,   197,   198,     0,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,   206,     0,   207,   208,   209,   210,   211,   212,     0,
     213,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,   220,   221,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,   227,
       0,   228,     0,   229,   230,   231,   232,   233,   234,     0,
     235,   236,     0,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,   253,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,   272,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,   277,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,     0,
       0,   290,   291,   292,   293,   294,     0,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,   302,   303,
       0,     0,     0,   304,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,   314,   315,     0,   316,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,     0,     0,
     323,   324,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,   329,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,     0,     0,     0,   335,     0,
     336,     0,     0,   337,   338,     0,     0,   339,     0,     0,
     340,   341,     0,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,   402,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,   409,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,   426,     0,   427,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,   452,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   462,     0,   463,   464,     0,   465,
     466,   467,     0,   468,     0,     0,   469,   470,   471,   472,
       0,   473,     0,   474,   475,   476,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,   486,     0,   487,   488,   489,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,   504,   505,   506,
     507,   508,     0,     0,   509,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,   535,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,   542,
     543,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,     0,     0,     0,     0,   557,   558,
     559,     0,   560,   561,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,   577,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,  5076,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,     0,     0,     0,     0,   627,   628,
     197,   198,     0,   199,   200,   201,   202,   203,     0,     0,
     204,     0,     0,     0,     0,   205,     0,     0,   206,     0,
     207,   208,   209,   210,   211,   212,     0,   213,     0,     0,
       0,   214,     0,     0,     0,   215,     0,     0,   216,   217,
     218,     0,   219,     0,   220,   221,     0,     0,   222,     0,
       0,   223,   224,     0,   225,   226,   227,     0,   228,     0,
     229,   230,   231,   232,   233,   234,     0,   235,   236,     0,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,   248,   249,     0,   250,   251,   252,   253,   254,
       0,     0,     0,   255,     0,     0,     0,     0,   256,     0,
       0,   257,     0,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
    1215,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     267,   268,   269,   270,   271,     0,     0,     0,   272,     0,
       0,   273,   274,   275,     0,     0,     0,   276,     0,   277,
     278,     0,   279,   280,   281,     0,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,     0,     0,   290,   291,
     292,   293,   294,     0,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,   302,   303,     0,     0,     0,
     304,   305,     0,   306,     0,     0,     0,   307,     0,   308,
     309,   310,   311,     0,     0,     0,   313,     0,     0,     0,
     314,   315,     0,   316,     0,     0,   317,   318,     0,     0,
       0,   319,   320,   321,   322,     0,     0,   323,   324,   325,
       0,     0,   326,     0,     0,     0,     0,   327,   328,   329,
       0,     0,     0,   330,     0,     0,     0,   331,   332,     0,
     333,   334,     0,     0,     0,   335,     0,   336,     0,     0,
     337,   338,     0,     0,   339,     0,     0,   340,   341,     0,
       0,     0,     0,     0,   342,   343,     0,     0,     0,   345,
       0,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     348,     0,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,   370,   371,   372,   373,     0,
     374,   375,     0,     0,     0,     0,   376,   377,   378,   379,
     380,   381,     0,     0,   382,   383,     0,   384,     0,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,     0,   397,   398,   399,   400,
     401,     0,     0,     0,   402,   403,     0,     0,     0,   404,
       0,   405,   406,     0,   407,   408,   409,     0,     0,   410,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   411,
     412,   413,     0,   414,     0,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   426,     0,
     427,   428,   429,     0,   430,     0,   431,   432,   433,   434,
     435,     0,   436,   437,   438,     0,     0,   439,     0,     0,
       0,   440,   441,     0,   442,   443,     0,     0,   444,   445,
     446,   447,   448,     0,   449,   450,     0,   451,   452,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   462,     0,   463,   464,     0,   465,   466,   467,     0,
     468,     0,     0,   469,   470,   471,   472,     0,   473,     0,
     474,   475,   476,   477,   478,     0,   479,   480,     0,     0,
       0,   481,   482,     0,   484,     0,     0,     0,   485,     0,
       0,     0,   486,     0,   487,   488,   489,   490,     0,   491,
     492,   493,   494,   495,     0,     0,     0,     0,     0,   496,
     497,   498,     0,   499,     0,     0,   500,     0,     0,   501,
       0,   502,     0,   503,   504,   505,   506,   507,   508,     0,
       0,   509,   510,     0,     0,   511,   512,   513,   514,   515,
     516,     0,     0,   517,   518,   519,   520,     0,   521,   522,
       0,     0,   523,   524,   525,   526,     0,     0,   527,   528,
       0,   529,   530,   531,   532,     0,     0,     0,     0,     0,
    1216,   534,     0,     0,     0,   535,   536,   537,     0,     0,
     538,   539,     0,   540,   541,     0,   542,   543,     0,     0,
     544,     0,     0,   545,     0,   546,     0,   547,   548,     0,
       0,     0,     0,     0,   549,     0,   550,     0,     0,   551,
       0,     0,     0,   552,     0,   553,   554,   555,   556,     0,
       0,     0,     0,     0,     0,   557,   558,   559,     0,   560,
     561,   562,   563,     0,     0,   564,     0,     0,     0,   566,
     567,   568,   569,     0,   570,     0,     0,     0,     0,     0,
       0,     0,     0,   571,   572,   573,     0,     0,   575,   576,
       0,   577,     0,     0,   578,     0,   579,     0,     0,     0,
       0,     0,     0,   580,   581,     0,     0,   582,     0,   583,
       0,   584,   585,     0,     0,     0,   586,   587,   588,   589,
     590,   591,   592,   593,     0,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,     0,     0,     0,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,     0,     0,     0,     0,   627,   628,   197,   198,     0,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,   206,     0,   207,   208,   209,
     210,   211,   212,     0,   213,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,   220,   221,     0,     0,   222,     0,     0,   223,   224,
       0,   225,   226,   227,     0,   228,     0,   229,   230,   231,
     232,   233,   234,     0,   235,   236,     0,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,   253,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,  1215,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,   272,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,   277,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,   302,   303,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,     0,     0,   313,     0,     0,     0,   314,   315,     0,
     316,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,     0,     0,   323,   324,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,   329,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,     0,
       0,     0,   335,     0,   336,     0,     0,   337,   338,     0,
       0,   339,     0,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,     0,     0,   345,     0,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,   402,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,   409,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,   426,     0,   427,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,   452,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   462,     0,
     463,   464,     0,   465,   466,   467,     0,   468,     0,     0,
     469,   470,   471,   472,     0,   473,     0,   474,   475,   476,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
       0,   484,     0,     0,     0,   485,     0,     0,     0,   486,
       0,   487,   488,   489,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,   504,   505,   506,   507,   508,     0,     0,   509,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,     0,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,   535,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,   542,   543,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,     0,     0,
       0,     0,   557,   558,   559,     0,   560,   561,   562,   563,
       0,     0,   564,     0,     0,     0,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,     0,   575,   576,     0,   577,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,     0,     0,
       0,     0,   627,   628,   197,   198,     0,   199,   200,   201,
     202,   203,  1200,     0,   204,     0,     0,     0,     0,   205,
       0,     0,   206,     0,   207,   208,   209,   210,   211,   212,
       0,   213,     0,     0,     0,   214,     0,     0,     0,   215,
       0,     0,   216,   217,   218,     0,   219,     0,   220,   221,
       0,     0,   222,     0,     0,   223,   224,     0,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
       0,   235,   236,     0,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,   248,   249,     0,   250,
     251,   252,   253,   254,     0,     0,     0,   255,     0,     0,
       0,     0,   256,     0,     0,   257,     0,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,  1201,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   267,   268,   269,   270,   271,     0,
       0,     0,   272,     0,     0,   273,   274,   275,     0,     0,
       0,   276,     0,   277,   278,     0,   279,   280,   281,     0,
       0,   282,   283,     0,   284,   285,     0,   287,   288,     0,
       0,     0,   290,   291,   292,   293,   294,     0,     0,   295,
     296,     0,     0,   298,   299,   300,   301,     0,     0,   302,
     303,     0,     0,     0,   304,   305,     0,   306,     0,     0,
       0,   307,     0,   308,   309,   310,   311,     0,   312,     0,
     313,     0,     0,     0,   314,   315,     0,   316,     0,     0,
     317,   318,     0,     0,     0,   319,   320,   321,   322,     0,
       0,   323,   324,   325,     0,     0,   326,     0,     0,     0,
       0,   327,   328,   329,     0,     0,     0,   330,     0,     0,
       0,   331,   332,     0,   333,   334,     0,     0,     0,   335,
       0,   336,     0,     0,   337,   338,     0,     0,   339,     0,
       0,   340,   341,   696,     0,     0,     0,     0,   342,   343,
       0,   344,     0,   345,     0,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   348,     0,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,   370,
     371,   372,   373,     0,   374,   375,     0,     0,     0,     0,
     376,   377,   378,   379,   380,   381,     0,     0,   382,   383,
       0,   384,     0,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,     0,
     397,   398,   399,   400,  1202,     0,     0,     0,   402,   403,
       0,     0,     0,   404,     0,   405,   406,     0,   407,   408,
     409,     0,     0,   410,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   411,   412,   413,     0,   414,     0,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   426,     0,   427,   428,   429,     0,   430,     0,
       0,   432,   433,   434,     0,     0,   436,   437,   438,     0,
       0,   439,     0,     0,     0,   440,   441,     0,   442,   443,
       0,     0,   444,   445,   446,   447,   448,     0,     0,   450,
       0,   451,   452,   453,     0,     0,     0,   455,   456,   457,
     458,   459,   460,   461,     0,   462,     0,   463,   464,     0,
     465,   466,   467,     0,   468,     0,     0,   469,   470,   471,
     472,     0,   473,     0,   474,   475,   476,   477,   478,     0,
     479,   480,     0,     0,     0,   481,   482,   483,   484,     0,
       0,     0,   485,     0,     0,     0,     0,     0,   487,   488,
     489,   490,     0,   491,   492,   493,   494,   495,     0,     0,
       0,     0,     0,   496,   497,   498,     0,   499,     0,     0,
     500,     0,     0,   501,     0,   502,     0,   503,   504,   505,
     506,   507,   508,     0,     0,   509,   510,     0,     0,   511,
     512,   513,   514,   515,   516,     0,     0,     0,   518,   519,
     520,     0,   521,   522,     0,     0,   523,   524,   525,   526,
       0,   194,   527,   528,     0,   529,   530,   531,   532,     0,
       0,     0,     0,     0,   533,   534,     0,     0,     0,   535,
     536,   537,     0,     0,   538,   539,     0,   540,   541,     0,
     542,   543,     0,     0,   544,     0,     0,   545,     0,   546,
       0,   547,   548,     0,     0,     0,     0,     0,   549,     0,
     550,     0,     0,   551,     0,     0,     0,   552,     0,   553,
     554,   555,   556,     0,     0,     0,     0,     0,     0,   557,
     558,   559,     0,   560,   561,   562,   563,     0,     0,   564,
       0,     0,   565,   566,   567,   568,   569,     0,   570,     0,
       0,     0,     0,     0,     0,     0,     0,   571,   572,   573,
       0,   574,   575,   576,     0,   577,     0,     0,   578,     0,
     579,     0,     0,     0,     0,     0,     0,   580,   581,     0,
       0,   582,     0,   583,     0,   584,   585,     0,     0,     0,
     586,   587,   588,   589,   590,   591,   592,     0,     0,   594,
     595,   596,     0,   598,   599,   600,   601,   602,   603,     0,
       0,     0,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,     0,     0,     0,     0,   627,
     628,   197,   198,     0,   199,   200,   201,   202,   203,  5165,
       0,   204,     0,     0,     0,     0,   205,     0,     0,   206,
       0,   207,   208,   209,   210,   211,   212,     0,   213,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,   220,   221,     0,     0,   222,
       0,     0,   223,   224,     0,   225,   226,   227,     0,   228,
       0,   229,   230,   231,   232,   233,   234,     0,   235,   236,
       0,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,   253,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,  5166,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,   272,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
     277,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,     0,   287,   288,     0,     0,     0,   290,
     291,   292,   293,   294,     0,     0,   295,   296,     0,     0,
     298,   299,   300,   301,     0,     0,   302,   303,     0,     0,
       0,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,   314,   315,     0,   316,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,     0,     0,   323,   324,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
     329,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,     0,     0,     0,   335,     0,   336,     0,
       0,   337,   338,     0,     0,   339,     0,     0,   340,   341,
     696,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,  5167,     0,     0,     0,   402,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,   409,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,   426,
       0,   427,   428,   429,     0,   430,     0,     0,   432,   433,
     434,     0,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,     0,   450,     0,   451,   452,
     453,     0,     0,     0,   455,   456,   457,   458,   459,   460,
     461,     0,   462,     0,   463,   464,     0,   465,   466,   467,
       0,   468,     0,     0,   469,   470,   471,   472,     0,   473,
       0,   474,   475,   476,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,     0,     0,   487,   488,   489,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,   504,   505,   506,   507,   508,
       0,     0,   509,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,     0,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,   194,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,   535,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,   542,   543,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,     0,     0,     0,     0,   557,   558,   559,     0,
     560,   561,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,   577,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,     0,     0,   594,   595,   596,     0,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,     0,     0,     0,     0,   627,   628,   197,   198,
       0,   199,   200,   201,   202,   203,  1835,     0,   204,     0,
       0,     0,     0,   205,     0,     0,   206,     0,   207,   208,
     209,   210,   211,   212,     0,   213,     0,     0,     0,   214,
       0,     0,     0,   215,     0,     0,   216,   217,   218,     0,
     219,     0,   220,   221,     0,     0,   222,     0,     0,   223,
     224,     0,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,     0,   235,   236,     0,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
     248,   249,     0,   250,   251,   252,   253,   254,     0,     0,
       0,   255,     0,     0,     0,     0,   256,     0,     0,   257,
       0,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,     0,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   267,   268,
     269,   270,   271,     0,     0,     0,   272,     0,     0,   273,
     274,   275,     0,     0,     0,   276,     0,   277,   278,     0,
     279,   280,   281,     0,     0,   282,   283,     0,   284,   285,
       0,   287,   288,     0,     0,     0,   290,   291,   292,   293,
     294,     0,     0,   295,   296,     0,     0,   298,   299,   300,
     301,     0,     0,   302,   303,     0,     0,     0,   304,   305,
       0,   306,     0,     0,     0,   307,     0,   308,   309,   310,
     311,     0,   312,     0,   313,     0,     0,     0,   314,   315,
       0,   316,     0,     0,   317,   318,     0,     0,     0,   319,
     320,   321,   322,     0,     0,   323,   324,   325,     0,     0,
     326,     0,     0,     0,     0,   327,   328,   329,     0,     0,
       0,   330,     0,     0,     0,   331,   332,     0,   333,   334,
       0,     0,     0,   335,     0,   336,     0,     0,   337,   338,
       0,     0,   339,     0,     0,   340,   341,   696,     0,     0,
       0,     0,   342,   343,     0,   344,     0,   345,     0,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   348,     0,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,   370,   371,   372,   373,     0,   374,   375,
       0,     0,     0,     0,   376,   377,   378,   379,   380,   381,
       0,     0,   382,   383,     0,   384,     0,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,     0,   397,   398,   399,   400,  1836,     0,
       0,     0,   402,   403,     0,     0,     0,   404,     0,   405,
     406,     0,   407,   408,   409,     0,     0,   410,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   411,   412,   413,
       0,   414,     0,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   426,     0,   427,   428,
     429,     0,   430,     0,     0,   432,   433,   434,     0,     0,
     436,   437,   438,     0,     0,   439,     0,     0,     0,   440,
     441,     0,   442,   443,     0,     0,   444,   445,   446,   447,
     448,     0,     0,   450,     0,   451,   452,   453,     0,     0,
       0,   455,   456,   457,   458,   459,   460,   461,     0,   462,
       0,   463,   464,     0,   465,   466,   467,     0,   468,     0,
       0,   469,   470,   471,   472,     0,   473,     0,   474,   475,
     476,   477,   478,     0,   479,   480,     0,     0,     0,   481,
     482,   483,   484,     0,     0,     0,   485,     0,     0,     0,
       0,     0,   487,   488,   489,   490,     0,   491,   492,   493,
     494,   495,     0,     0,     0,     0,     0,   496,   497,   498,
       0,   499,     0,     0,   500,     0,     0,   501,     0,   502,
       0,   503,   504,   505,   506,   507,   508,     0,     0,   509,
     510,     0,     0,   511,   512,   513,   514,   515,   516,     0,
       0,     0,   518,   519,   520,     0,   521,   522,     0,     0,
     523,   524,   525,   526,     0,   194,   527,   528,     0,   529,
     530,   531,   532,     0,     0,     0,     0,     0,   533,   534,
       0,     0,     0,   535,   536,   537,     0,     0,   538,   539,
       0,   540,   541,     0,   542,   543,     0,     0,   544,     0,
       0,   545,     0,   546,     0,   547,   548,     0,     0,     0,
       0,     0,   549,     0,   550,     0,     0,   551,     0,     0,
       0,   552,     0,   553,   554,   555,   556,     0,     0,     0,
       0,     0,     0,   557,   558,   559,     0,   560,   561,   562,
     563,     0,     0,   564,     0,     0,   565,   566,   567,   568,
     569,     0,   570,     0,     0,     0,     0,     0,     0,     0,
       0,   571,   572,   573,     0,   574,   575,   576,     0,   577,
       0,     0,   578,     0,   579,     0,     0,     0,     0,     0,
       0,   580,   581,     0,     0,   582,     0,   583,     0,   584,
     585,     0,     0,     0,   586,   587,   588,   589,   590,   591,
     592,     0,     0,   594,   595,   596,     0,   598,   599,   600,
     601,   602,   603,     0,     0,     0,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,     0,
       0,     0,     0,   627,   628,   197,   198,     0,   199,   200,
     201,   202,   203,  2796,     0,   204,     0,     0,     0,     0,
     205,     0,     0,   206,     0,   207,   208,   209,   210,   211,
     212,     0,   213,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,   220,
     221,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,   227,     0,   228,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,     0,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,   253,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,   272,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,   277,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,     0,   287,   288,
       0,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,     0,   298,   299,   300,   301,     0,     0,
     302,   303,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,   314,   315,     0,   316,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
       0,     0,   323,   324,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,   329,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,   337,   338,     0,     0,   339,
       0,     0,   340,   341,   696,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,  2797,     0,     0,     0,   402,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,   426,     0,   427,   428,   429,     0,   430,
       0,     0,   432,   433,   434,     0,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,     0,
     450,     0,   451,   452,   453,     0,     0,     0,   455,   456,
     457,   458,   459,   460,   461,     0,   462,     0,   463,   464,
       0,   465,   466,   467,     0,   468,     0,     0,   469,   470,
     471,   472,     0,   473,     0,   474,   475,   476,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,     0,     0,   487,
     488,   489,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,   504,
     505,   506,   507,   508,     0,     0,   509,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,     0,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,   194,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
     535,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,   542,   543,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,   561,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,   577,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,     0,     0,
     594,   595,   596,     0,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,     0,     0,     0,     0,
     627,   628,   197,   198,     0,   199,   200,   201,   202,   203,
       0,     0,   204,     0,     0,     0,     0,   205,     0,     0,
     206,     0,   207,   208,   209,   210,   211,   212,     0,   213,
       0,     0,     0,   214,     0,     0,     0,   215,     0,     0,
     216,   217,   218,     0,   219,     0,   220,   221,     0,     0,
     222,     0,     0,   223,   224,     0,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,     0,   235,
     236,     0,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,   248,   249,     0,   250,   251,   252,
     253,   254,     0,     0,     0,   255,     0,     0,     0,     0,
     256,     0,     0,   257,     0,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,     0,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   267,   268,   269,   270,   271,     0,     0,     0,
     272,     0,     0,   273,   274,   275,     0,     0,     0,   276,
       0,   277,   278,     0,   279,   280,   281,     0,     0,   282,
     283,     0,   284,   285,     0,   287,   288,     0,     0,     0,
     290,   291,   292,   293,   294,     0,     0,   295,   296,     0,
       0,   298,   299,   300,   301,     0,     0,   302,   303,     0,
       0,     0,   304,   305,     0,   306,     0,     0,     0,   307,
       0,   308,   309,   310,   311,     0,   312,     0,   313,     0,
       0,     0,   314,   315,     0,   316,     0,     0,   317,   318,
       0,     0,     0,   319,   320,   321,   322,     0,     0,   323,
     324,   325,     0,     0,   326,     0,     0,     0,     0,   327,
     328,   329,     0,     0,     0,   330,     0,     0,     0,   331,
     332,     0,   333,   334,     0,     0,     0,   335,     0,   336,
       0,     0,   337,   338,     0,     0,   339,     0,     0,   340,
     341,   696,     0,     0,     0,     0,   342,   343,     0,   344,
       0,   345,     0,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   348,     0,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,   370,   371,   372,
     373,     0,   374,   375,     0,     0,     0,     0,   376,   377,
     378,   379,   380,   381,     0,     0,   382,   383,     0,   384,
       0,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,     0,   397,   398,
     399,   400,     0,     0,     0,     0,   402,   403,     0,     0,
       0,   404,     0,   405,   406,     0,   407,   408,   409,     0,
       0,   410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   411,   412,   413,     0,   414,     0,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     426,     0,   427,   428,   429,     0,   430,     0,     0,   432,
     433,   434,     0,     0,   436,   437,   438,     0,     0,   439,
       0,     0,     0,   440,   441,     0,   442,   443,     0,     0,
     444,   445,   446,   447,   448,     0,     0,   450,     0,   451,
     452,   453,     0,     0,     0,   455,   456,   457,   458,   459,
     460,   461,     0,   462,     0,   463,   464,     0,   465,   466,
     467,     0,   468,     0,     0,   469,   470,   471,   472,     0,
     473,     0,   474,   475,   476,   477,   478,     0,   479,   480,
       0,     0,     0,   481,   482,   483,   484,     0,     0,     0,
     485,     0,     0,     0,     0,     0,   487,   488,   489,   490,
       0,   491,   492,   493,   494,   495,     0,     0,     0,     0,
       0,   496,   497,   498,     0,   499,     0,     0,   500,     0,
       0,   501,     0,   502,     0,   503,   504,   505,   506,   507,
     508,     0,     0,   509,   510,     0,     0,   511,   512,   513,
     514,   515,   516,     0,     0,     0,   518,   519,   520,     0,
     521,   522,     0,     0,   523,   524,   525,   526,     0,   194,
     527,   528,     0,   529,   530,   531,   532,     0,     0,     0,
       0,     0,   533,   534,     0,     0,     0,   535,   536,   537,
       0,     0,   538,   539,     0,   540,   541,     0,   542,   543,
       0,     0,   544,     0,     0,   545,     0,   546,     0,   547,
     548,     0,     0,     0,     0,     0,   549,     0,   550,     0,
       0,   551,     0,     0,     0,   552,     0,   553,   554,   555,
     556,     0,     0,     0,     0,     0,     0,   557,   558,   559,
       0,   560,   561,   562,   563,     0,     0,   564,     0,     0,
     565,   566,   567,   568,   569,     0,   570,     0,     0,     0,
       0,     0,     0,     0,     0,   571,   572,   573,     0,   574,
     575,   576,     0,   577,     0,     0,   578,     0,   579,     0,
       0,     0,     0,     0,     0,   580,   581,     0,     0,   582,
       0,   583,     0,   584,   585,     0,     0,     0,   586,   587,
     588,   589,   590,   591,   592,     0,     0,   594,   595,   596,
       0,   598,   599,   600,   601,   602,   603,     0,     0,     0,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,     0,     0,     0,     0,   627,   628,   197,
     198,     0,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,     0,     0,   207,
     208,   209,   210,   211,   212,     0,  3709,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,     0,     0,     0,     0,   222,     0,     0,
     223,   224,     0,   225,   226,     0,     0,     0,     0,   229,
     230,   231,  3710,   233,   234,     0,   235,   236,     0,   237,
     238,     0,   240,     0,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,     0,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,     0,     0,     0,  3711,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,     0,     0,     0,
     273,   274,   275,     0,  -452,  -452,   276,     0,  -452,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,     0,     0,  3712,   290,   291,   292,
     293,   294,     0,     0,   295,   296,  3713,   297,   298,   299,
     300,   301,     0,     0,     0,     0,     0,     0,  -434,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,     0,
     315,     0,     0,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,  3714,     0,   323,     0,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,     0,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,  3715,     0,     0,   335,     0,   336,     0,     0,     0,
     338,     0,     0,   339,  3716,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,  -434,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,     0,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,  3717,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,     0,     0,     0,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,     0,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
       0,     0,   463,   464,     0,   465,   466,   467,  3718,   468,
       0,     0,     0,   470,   471,   472,     0,   473,     0,   474,
     475,     0,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,  3719,     0,
       0,     0,     0,     0,   488,     0,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,     0,   505,   506,   507,   508,     0,     0,
       0,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,     0,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,     0,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,     0,     0,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
    -434,     0,     0,     0,   557,   558,   559,     0,   560,     0,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
       0,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,     0,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,     0,   619,   620,   621,   622,   623,   624,     0,   626,
       0,     0,     0,   197,   198,   628,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,     0,     0,   207,   208,   209,   210,   211,   212,     0,
    3709,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,     0,     0,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,     0,
       0,     0,     0,   229,   230,   231,  3710,   233,   234,     0,
     235,   236,     0,   237,   238,     0,   240,     0,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,     0,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,     0,
       0,     0,  3711,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,     0,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,  -552,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,     0,     0,
    3712,   290,   291,   292,   293,   294,     0,     0,   295,   296,
    3713,   297,   298,   299,   300,   301,     0,     0,     0,     0,
       0,     0,  -434,   304,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,     0,   315,     0,     0,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,  3714,     0,
     323,     0,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,     0,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,  3715,     0,     0,   335,     0,
     336,     0,     0,     0,   338,     0,     0,   339,  3716,     0,
     340,   341,     0,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
    -434,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,     0,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,  3717,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,     0,     0,     0,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,     0,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,     0,     0,   463,   464,     0,   465,
     466,   467,  3718,   468,     0,     0,     0,   470,   471,   472,
       0,   473,     0,   474,   475,     0,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,  3719,     0,     0,     0,     0,     0,   488,     0,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,     0,   505,   506,
     507,   508,     0,     0,     0,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,     0,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,     0,
       0,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,  -434,     0,     0,     0,   557,   558,
     559,     0,   560,     0,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,     0,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,     0,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,     0,   619,   620,   621,   622,
     623,   624,     0,   626,     0,     0,  -552,   197,   198,   628,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,     0,     0,   207,   208,   209,
     210,   211,   212,     0,  3709,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,     0,     0,     0,     0,   222,     0,     0,   223,   224,
       0,   225,   226,     0,     0,     0,     0,   229,   230,   231,
    3710,   233,   234,     0,   235,   236,     0,   237,   238,     0,
     240,     0,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,     0,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,     0,     0,     0,  3711,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,     0,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,  4797,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,     0,     0,  3712,   290,   291,   292,   293,   294,
       0,     0,   295,   296,  3713,   297,   298,   299,   300,   301,
       0,     0,     0,     0,     0,     0,  -434,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,     0,   315,     0,
       0,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,  3714,     0,   323,     0,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,     0,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,  3715,
       0,     0,   335,     0,   336,     0,     0,     0,   338,     0,
       0,   339,  3716,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,  -434,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,     0,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,  3717,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,     0,     0,     0,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,     0,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,     0,     0,
     463,   464,     0,   465,   466,   467,  3718,   468,     0,     0,
       0,   470,   471,   472,     0,   473,     0,   474,   475,     0,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,  3719,     0,     0,     0,
       0,     0,   488,     0,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,     0,   505,   506,   507,   508,     0,     0,     0,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,     0,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,     0,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,     0,     0,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,  -434,     0,
       0,     0,   557,   558,   559,     0,   560,     0,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,     0,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,     0,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,     0,
     619,   620,   621,   622,   623,   624,     0,   626,     0,     0,
       0,   197,   198,   628,   199,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,     0,
       0,   207,   208,   209,   210,   211,   212,     0,  3709,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,     0,     0,     0,     0,   222,
       0,     0,   223,   224,     0,   225,   226,     0,     0,     0,
       0,   229,   230,   231,  3710,   233,   234,     0,   235,   236,
       0,   237,   238,     0,   240,     0,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,     0,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,     0,     0,     0,
    3711,     0,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,     0,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
    5242,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,     0,     0,  3712,   290,
     291,   292,   293,   294,     0,     0,   295,   296,  3713,   297,
     298,   299,   300,   301,     0,     0,     0,     0,     0,     0,
    -434,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,     0,   315,     0,     0,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,  3714,     0,   323,     0,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
       0,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,  3715,     0,     0,   335,     0,   336,     0,
       0,     0,   338,     0,     0,   339,  3716,     0,   340,   341,
       0,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,  -434,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,     0,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,  3717,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,     0,
       0,     0,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,     0,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,     0,     0,   463,   464,     0,   465,   466,   467,
    3718,   468,     0,     0,     0,   470,   471,   472,     0,   473,
       0,   474,   475,     0,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
    3719,     0,     0,     0,     0,     0,   488,     0,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,     0,   505,   506,   507,   508,
       0,     0,     0,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,     0,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,     0,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,     0,     0,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,  -434,     0,     0,     0,   557,   558,   559,     0,
     560,     0,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,     0,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,     0,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,     0,   619,   620,   621,   622,   623,   624,
       0,   626,     0,     0,     0,   197,   198,   628,   199,   200,
     201,   202,   203,     0,     0,   204,     0,     0,     0,     0,
     205,     0,     0,     0,     0,   207,   208,   209,   210,   211,
     212,     0,  -517,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,     0,
       0,     0,     0,   222,  4194,     0,   223,   224,     0,   225,
     226,     0,     0,     0,     0,   229,   230,   231,  3710,   233,
     234,     0,   235,   236,     0,   237,   238,     0,   240,     0,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,     0,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,     0,     0,     0,     0,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,     0,     0,     0,   273,   274,   275,     0,
    -481,  -481,   276,     0,  -481,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
       0,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,  3713,   297,   298,   299,   300,   301,     0,     0,
       0,     0,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,     0,   315,     0,     0,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
    4195,     0,   323,     0,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,     0,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,  3715,     0,     0,
     335,     0,   336,     0,     0,     0,   338,     0,     0,   339,
    3716,     0,   340,   341,     0,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,  -463,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,     0,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,  3717,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,     0,     0,     0,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,     0,   453,  -463,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,     0,     0,   463,   464,
       0,   465,   466,   467,  4196,   468,     0,     0,     0,   470,
     471,   472,     0,   473,     0,   474,   475,     0,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,     0,     0,     0,
     488,     0,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,     0,
     505,   506,   507,   508,     0,     0,     0,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,     0,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
       0,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,     0,     0,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,  -463,     0,     0,     0,
     557,   558,   559,     0,   560,     0,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,     0,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,     0,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,     0,   619,   620,
     621,   622,   623,   624,     0,   626,     0,     0,     0,   197,
     198,   628,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,     0,     0,   207,
     208,   209,   210,   211,   212,     0,  -517,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,     0,     0,     0,     0,   222,  4194,     0,
     223,   224,     0,   225,   226,     0,     0,     0,     0,   229,
     230,   231,  3710,   233,   234,     0,   235,   236,     0,   237,
     238,     0,   240,     0,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,     0,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,     0,     0,     0,     0,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,     0,     0,     0,
     273,   274,   275,     0,  -502,     0,   276,     0,  -502,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,     0,     0,     0,   290,   291,   292,
     293,   294,     0,     0,   295,   296,  3713,   297,   298,   299,
     300,   301,     0,     0,     0,     0,     0,     0,     0,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,     0,
     315,     0,     0,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,  4195,     0,   323,     0,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,     0,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,  3715,     0,     0,   335,     0,   336,     0,     0,     0,
     338,     0,     0,   339,  3716,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,  -463,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,     0,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,  3717,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,     0,     0,     0,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,     0,   453,  -463,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
       0,     0,   463,   464,     0,   465,   466,   467,  4196,   468,
       0,     0,     0,   470,   471,   472,     0,   473,     0,   474,
     475,     0,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,     0,     0,     0,   488,     0,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,     0,   505,   506,   507,   508,     0,     0,
       0,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,     0,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,     0,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,     0,     0,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,  -502,     0,
    -463,     0,     0,     0,   557,   558,   559,     0,   560,     0,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
       0,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,     0,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,     0,   619,   620,   621,   622,   623,   624,     0,   626,
       0,     0,     0,   197,   198,   628,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,     0,     0,   207,   208,   209,   210,   211,   212,     0,
    3709,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,     0,     0,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,     0,
       0,     0,     0,   229,   230,   231,  3710,   233,   234,     0,
     235,   236,     0,   237,   238,     0,   240,     0,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,     0,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,     0,
       0,     0,  3711,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,     0,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,  -456,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,     0,     0,
    3712,   290,   291,   292,   293,   294,     0,     0,   295,   296,
    3713,   297,   298,   299,   300,   301,     0,     0,     0,     0,
       0,     0,  -434,   304,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,     0,   315,     0,     0,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,  3714,     0,
     323,     0,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,     0,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,  3715,     0,     0,   335,     0,
     336,     0,     0,     0,   338,     0,     0,   339,  3716,     0,
     340,   341,     0,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
    -434,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,     0,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,  3717,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,     0,     0,     0,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,     0,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,     0,     0,   463,   464,     0,   465,
     466,   467,  3718,   468,     0,     0,     0,   470,   471,   472,
       0,   473,     0,   474,   475,     0,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,  3719,     0,     0,     0,     0,     0,   488,     0,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,     0,   505,   506,
     507,   508,     0,     0,     0,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,     0,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,     0,
       0,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,  -434,     0,     0,     0,   557,   558,
     559,     0,   560,     0,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,     0,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,     0,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,     0,   619,   620,   621,   622,
     623,   624,     0,   626,     0,     0,     0,   197,   198,   628,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,     0,     0,   207,   208,   209,
     210,   211,   212,     0,  -517,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,     0,     0,     0,     0,   222,  4194,     0,   223,   224,
       0,   225,   226,     0,     0,     0,     0,   229,   230,   231,
    3710,   233,   234,     0,   235,   236,     0,   237,   238,     0,
     240,     0,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,     0,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,     0,     0,     0,     0,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,     0,     0,     0,   273,   274,
     275,     0,  -499,     0,   276,     0,  -499,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,     0,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,  3713,   297,   298,   299,   300,   301,
       0,     0,     0,     0,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,     0,   315,     0,
       0,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,  4195,     0,   323,     0,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,     0,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,  3715,
       0,     0,   335,     0,   336,     0,     0,     0,   338,     0,
       0,   339,  3716,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,  -463,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,     0,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,  3717,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,     0,     0,     0,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,     0,   453,  -463,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,     0,     0,
     463,   464,     0,   465,   466,   467,  4196,   468,     0,     0,
       0,   470,   471,   472,     0,   473,     0,   474,   475,     0,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,     0,
       0,     0,   488,     0,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,     0,   505,   506,   507,   508,     0,     0,     0,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,     0,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,     0,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,     0,     0,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,  -499,     0,  -463,     0,
       0,     0,   557,   558,   559,     0,   560,     0,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,     0,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,     0,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,     0,
     619,   620,   621,   622,   623,   624,     0,   626,     0,     0,
       0,   197,   198,   628,   199,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,     0,
       0,   207,   208,   209,   210,   211,   212,     0,  3709,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,     0,     0,     0,     0,   222,
       0,     0,   223,   224,     0,   225,   226,     0,     0,     0,
       0,   229,   230,   231,  3710,   233,   234,     0,   235,   236,
       0,   237,   238,     0,   240,     0,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,     0,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,     0,     0,     0,
    3711,     0,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,     0,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
    -556,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,     0,     0,  3712,   290,
     291,   292,   293,   294,     0,     0,   295,   296,  3713,   297,
     298,   299,   300,   301,     0,     0,     0,     0,     0,     0,
    -434,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,     0,   315,     0,     0,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,  3714,     0,   323,     0,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
       0,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,  3715,     0,     0,   335,     0,   336,     0,
       0,     0,   338,     0,     0,   339,  3716,     0,   340,   341,
       0,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,  -434,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,     0,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,  3717,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,     0,
       0,     0,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,     0,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,     0,     0,   463,   464,     0,   465,   466,   467,
    3718,   468,     0,     0,     0,   470,   471,   472,     0,   473,
       0,   474,   475,     0,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
    3719,     0,     0,     0,     0,     0,   488,     0,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,     0,   505,   506,   507,   508,
       0,     0,     0,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,     0,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,     0,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,     0,     0,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,  -434,     0,     0,     0,   557,   558,   559,     0,
     560,     0,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,     0,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,     0,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,     0,   619,   620,   621,   622,   623,   624,
       0,   626,     0,     0,     0,   197,   198,   628,   199,   200,
     201,   202,   203,     0,     0,   204,     0,     0,     0,     0,
     205,     0,     0,     0,     0,   207,   208,   209,   210,   211,
     212,     0,  3709,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,     0,
       0,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,     0,     0,     0,     0,   229,   230,   231,  3710,   233,
     234,     0,   235,   236,     0,   237,   238,     0,   240,     0,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,     0,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,     0,     0,     0,  3711,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,     0,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,  5358,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
       0,     0,  3712,   290,   291,   292,   293,   294,     0,     0,
     295,   296,  3713,   297,   298,   299,   300,   301,     0,     0,
       0,     0,     0,     0,  -434,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,     0,   315,     0,     0,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
    3714,     0,   323,     0,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,     0,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,  3715,     0,     0,
     335,     0,   336,     0,     0,     0,   338,     0,     0,   339,
    3716,     0,   340,   341,     0,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,  -434,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,     0,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,  3717,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,     0,     0,     0,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,     0,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,     0,     0,   463,   464,
       0,   465,   466,   467,  3718,   468,     0,     0,     0,   470,
     471,   472,     0,   473,     0,   474,   475,     0,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,  3719,     0,     0,     0,     0,     0,
     488,     0,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,     0,
     505,   506,   507,   508,     0,     0,     0,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,     0,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
       0,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,     0,     0,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,  -434,     0,     0,     0,
     557,   558,   559,     0,   560,     0,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,     0,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,     0,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,     0,   619,   620,
     621,   622,   623,   624,     0,   626,     0,     0,     0,   197,
     198,   628,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,     0,     0,   207,
     208,   209,   210,   211,   212,     0,  3709,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,     0,     0,     0,     0,   222,     0,     0,
     223,   224,     0,   225,   226,     0,     0,     0,     0,   229,
     230,   231,  3710,   233,   234,     0,   235,   236,     0,   237,
     238,     0,   240,     0,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,     0,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,     0,     0,     0,  3711,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,     0,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,  5359,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,     0,     0,  3712,   290,   291,   292,
     293,   294,     0,     0,   295,   296,  3713,   297,   298,   299,
     300,   301,     0,     0,     0,     0,     0,     0,  -434,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,     0,
     315,     0,     0,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,  3714,     0,   323,     0,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,     0,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,  3715,     0,     0,   335,     0,   336,     0,     0,     0,
     338,     0,     0,   339,  3716,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,  -434,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,     0,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,  3717,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,     0,     0,     0,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,     0,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
       0,     0,   463,   464,     0,   465,   466,   467,  3718,   468,
       0,     0,     0,   470,   471,   472,     0,   473,     0,   474,
     475,     0,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,  3719,     0,
       0,     0,     0,     0,   488,     0,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,     0,   505,   506,   507,   508,     0,     0,
       0,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,     0,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,     0,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,     0,     0,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
    -434,     0,     0,     0,   557,   558,   559,     0,   560,     0,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
       0,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,     0,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,     0,   619,   620,   621,   622,   623,   624,     0,   626,
       0,     0,     0,   197,   198,   628,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,     0,     0,   207,   208,   209,   210,   211,   212,     0,
    3709,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,     0,     0,     0,
       0,   222,     0,     0,   223,   224,     0,   225,   226,     0,
       0,     0,     0,   229,   230,   231,  3710,   233,   234,     0,
     235,   236,     0,   237,   238,     0,   240,     0,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,     0,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,     0,
       0,     0,  3711,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,     0,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,     0,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,     0,     0,
    3712,   290,   291,   292,   293,   294,     0,     0,   295,   296,
    3713,   297,   298,   299,   300,   301,     0,     0,     0,     0,
       0,     0,  -434,   304,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,     0,   315,     0,     0,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,  3714,     0,
     323,     0,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,     0,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,  3715,     0,     0,   335,     0,
     336,     0,     0,     0,   338,     0,     0,   339,  3716,     0,
     340,   341,     0,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
    -434,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,     0,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,  3717,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,     0,     0,     0,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,     0,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,     0,     0,   463,   464,     0,   465,
     466,   467,  3718,   468,     0,     0,     0,   470,   471,   472,
       0,   473,     0,   474,   475,     0,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,  3719,     0,     0,     0,     0,     0,   488,     0,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,     0,   505,   506,
     507,   508,     0,     0,     0,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,     0,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,     0,
       0,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,  -434,     0,     0,     0,   557,   558,
     559,     0,   560,     0,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,     0,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,     0,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,     0,   619,   620,   621,   622,
     623,   624,     0,   626,     0,     0,     0,   197,   198,   628,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,     0,     0,   207,   208,   209,
     210,   211,   212,     0,  -517,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,     0,     0,     0,     0,   222,  4194,     0,   223,   224,
       0,   225,   226,     0,     0,     0,     0,   229,   230,   231,
    3710,   233,   234,     0,   235,   236,     0,   237,   238,     0,
     240,     0,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,     0,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,     0,     0,     0,     0,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,     0,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,  4919,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,     0,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,  3713,   297,   298,   299,   300,   301,
       0,     0,     0,     0,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,     0,   315,     0,
       0,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,  4195,     0,   323,     0,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,     0,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,  3715,
       0,     0,   335,     0,   336,     0,     0,     0,   338,     0,
       0,   339,  3716,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,  -463,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,     0,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,  3717,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,     0,     0,     0,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,     0,   453,  -463,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,     0,     0,
     463,   464,     0,   465,   466,   467,  4196,   468,     0,     0,
       0,   470,   471,   472,     0,   473,     0,   474,   475,     0,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,     0,
       0,     0,   488,     0,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,     0,   505,   506,   507,   508,     0,     0,     0,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,     0,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,     0,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,     0,     0,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,  -463,     0,
       0,     0,   557,   558,   559,     0,   560,     0,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,     0,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,     0,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,     0,
     619,   620,   621,   622,   623,   624,     0,   626,     0,     0,
       0,   197,   198,   628,   199,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,     0,
       0,   207,   208,   209,   210,   211,   212,     0,  -517,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,     0,     0,     0,     0,   222,
    4194,     0,   223,   224,     0,   225,   226,     0,     0,     0,
       0,   229,   230,   231,  3710,   233,   234,     0,   235,   236,
       0,   237,   238,     0,   240,     0,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,     0,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,     0,     0,     0,
       0,     0,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,     0,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
    -504,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,     0,     0,     0,   290,
     291,   292,   293,   294,     0,     0,   295,   296,  3713,   297,
     298,   299,   300,   301,     0,     0,     0,     0,     0,     0,
       0,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,     0,   315,     0,     0,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,  4195,     0,   323,     0,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
       0,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,  3715,     0,     0,   335,     0,   336,     0,
       0,     0,   338,     0,     0,   339,  3716,     0,   340,   341,
       0,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,  -463,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,     0,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,  3717,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,     0,
       0,     0,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,     0,
     453,  -463,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,     0,     0,   463,   464,     0,   465,   466,   467,
    4196,   468,     0,     0,     0,   470,   471,   472,     0,   473,
       0,   474,   475,     0,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,     0,     0,     0,   488,     0,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,     0,   505,   506,   507,   508,
       0,     0,     0,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,     0,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,     0,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,     0,     0,     0,
       0,   544,     0,     0,   545,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,  -463,     0,     0,     0,   557,   558,   559,     0,
     560,     0,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,     0,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,     0,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,     0,   619,   620,   621,   622,   623,   624,
       0,   626,     0,     0,     0,   197,   198,   628,   199,   200,
     201,   202,   203,     0,     0,   204,     0,     0,     0,     0,
     205,     0,     0,     0,     0,   207,   208,   209,   210,   211,
     212,     0,  -517,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,     0,
       0,     0,     0,   222,  4194,     0,   223,   224,     0,   225,
     226,     0,     0,     0,     0,   229,   230,   231,  3710,   233,
     234,     0,   235,   236,     0,   237,   238,     0,   240,     0,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,     0,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,     0,     0,     0,     0,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,     0,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,  5149,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
       0,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,  3713,   297,   298,   299,   300,   301,     0,     0,
       0,     0,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,     0,   315,     0,     0,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
    4195,     0,   323,     0,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,     0,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,  3715,     0,     0,
     335,     0,   336,     0,     0,     0,   338,     0,     0,   339,
    3716,     0,   340,   341,     0,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,  -463,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,     0,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,  3717,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,     0,     0,     0,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,     0,   453,  -463,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,     0,     0,   463,   464,
       0,   465,   466,   467,  4196,   468,     0,     0,     0,   470,
     471,   472,     0,   473,     0,   474,   475,     0,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,     0,     0,     0,
     488,     0,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,     0,
     505,   506,   507,   508,     0,     0,     0,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,     0,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
       0,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,     0,     0,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,  -463,     0,     0,     0,
     557,   558,   559,     0,   560,     0,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,     0,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,     0,   598,   599,   600,   601,   602,   603,
       0,     0,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,     0,   619,   620,
     621,   622,   623,   624,     0,   626,     0,     0,     0,   197,
     198,   628,   199,   200,   201,   202,   203,     0,     0,   204,
       0,     0,     0,     0,   205,     0,     0,     0,     0,   207,
     208,   209,   210,   211,   212,     0,  -517,     0,     0,     0,
     214,     0,     0,     0,   215,     0,     0,   216,   217,   218,
       0,   219,     0,     0,     0,     0,     0,   222,  4194,     0,
     223,   224,     0,   225,   226,     0,     0,     0,     0,   229,
     230,   231,  3710,   233,   234,     0,   235,   236,     0,   237,
     238,     0,   240,     0,   242,   243,   244,   245,   246,   247,
       0,   248,   249,     0,   250,   251,   252,     0,   254,     0,
       0,     0,   255,     0,     0,     0,     0,   256,     0,     0,
     257,     0,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,     0,     0,     0,     0,     0,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   267,
     268,   269,   270,   271,     0,     0,     0,     0,     0,     0,
     273,   274,   275,     0,     0,     0,   276,     0,  5281,   278,
       0,   279,   280,   281,     0,     0,   282,   283,     0,   284,
     285,   286,   287,   288,     0,     0,     0,   290,   291,   292,
     293,   294,     0,     0,   295,   296,  3713,   297,   298,   299,
     300,   301,     0,     0,     0,     0,     0,     0,     0,   304,
     305,     0,   306,     0,     0,     0,   307,     0,   308,   309,
     310,   311,     0,   312,     0,   313,     0,     0,     0,     0,
     315,     0,     0,     0,     0,   317,   318,     0,     0,     0,
     319,   320,   321,   322,  4195,     0,   323,     0,   325,     0,
       0,   326,     0,     0,     0,     0,   327,   328,     0,     0,
       0,     0,   330,     0,     0,     0,   331,   332,     0,   333,
     334,  3715,     0,     0,   335,     0,   336,     0,     0,     0,
     338,     0,     0,   339,  3716,     0,   340,   341,     0,     0,
       0,     0,     0,   342,   343,     0,   344,     0,   345,     0,
     346,   347,     0,     0,     0,     0,  -463,     0,     0,   348,
       0,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,   370,   371,   372,   373,     0,   374,
     375,     0,     0,     0,     0,   376,   377,   378,   379,   380,
     381,     0,     0,   382,   383,     0,   384,     0,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,     0,   397,   398,   399,   400,   401,
       0,     0,     0,     0,   403,     0,     0,     0,   404,     0,
     405,   406,     0,   407,   408,  3717,     0,     0,   410,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   411,   412,
     413,     0,   414,     0,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,     0,     0,     0,     0,
     428,   429,     0,   430,     0,   431,   432,   433,   434,   435,
       0,   436,   437,   438,     0,     0,   439,     0,     0,     0,
     440,   441,     0,   442,   443,     0,     0,   444,   445,   446,
     447,   448,     0,   449,   450,     0,   451,     0,   453,  -463,
       0,   454,   455,   456,   457,   458,   459,   460,   461,     0,
       0,     0,   463,   464,     0,   465,   466,   467,  4196,   468,
       0,     0,     0,   470,   471,   472,     0,   473,     0,   474,
     475,     0,   477,   478,     0,   479,   480,     0,     0,     0,
     481,   482,   483,   484,     0,     0,     0,   485,     0,     0,
       0,     0,     0,     0,   488,     0,   490,     0,   491,   492,
     493,   494,   495,     0,     0,     0,     0,     0,   496,   497,
     498,     0,   499,     0,     0,   500,     0,     0,   501,     0,
     502,     0,   503,     0,   505,   506,   507,   508,     0,     0,
       0,   510,     0,     0,   511,   512,   513,   514,   515,   516,
       0,     0,   517,   518,   519,   520,     0,   521,   522,     0,
       0,   523,   524,   525,   526,     0,     0,   527,   528,     0,
     529,   530,   531,   532,     0,     0,     0,     0,     0,   533,
     534,     0,     0,     0,     0,   536,   537,     0,     0,   538,
     539,     0,   540,   541,     0,     0,     0,     0,     0,   544,
       0,     0,   545,     0,   546,     0,   547,   548,     0,     0,
       0,     0,     0,   549,     0,   550,     0,     0,   551,     0,
       0,     0,   552,     0,   553,   554,   555,   556,     0,     0,
    -463,     0,     0,     0,   557,   558,   559,     0,   560,     0,
     562,   563,     0,     0,   564,     0,     0,   565,   566,   567,
     568,   569,     0,   570,     0,     0,     0,     0,     0,     0,
       0,     0,   571,   572,   573,     0,   574,   575,   576,     0,
       0,     0,     0,   578,     0,   579,     0,     0,     0,     0,
       0,     0,   580,   581,     0,     0,   582,     0,   583,     0,
     584,   585,     0,     0,     0,   586,   587,   588,   589,   590,
     591,   592,   593,     0,   594,   595,   596,     0,   598,   599,
     600,   601,   602,   603,     0,     0,     0,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,     0,   619,   620,   621,   622,   623,   624,     0,   626,
       0,     0,     0,   197,   198,   628,   199,   200,   201,   202,
     203,     0,     0,   204,     0,     0,     0,     0,   205,     0,
       0,     0,     0,   207,   208,   209,   210,   211,   212,     0,
    -517,     0,     0,     0,   214,     0,     0,     0,   215,     0,
       0,   216,   217,   218,     0,   219,     0,     0,     0,     0,
       0,   222,  4194,     0,   223,   224,     0,   225,   226,     0,
       0,     0,     0,   229,   230,   231,  3710,   233,   234,     0,
     235,   236,     0,   237,   238,     0,   240,     0,   242,   243,
     244,   245,   246,   247,     0,   248,   249,     0,   250,   251,
     252,     0,   254,     0,     0,     0,   255,     0,     0,     0,
       0,   256,     0,     0,   257,     0,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,     0,
       0,     0,     0,     0,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   267,   268,   269,   270,   271,     0,     0,
       0,     0,     0,     0,   273,   274,   275,     0,     0,     0,
     276,     0,  -485,   278,     0,   279,   280,   281,     0,     0,
     282,   283,     0,   284,   285,   286,   287,   288,     0,     0,
       0,   290,   291,   292,   293,   294,     0,     0,   295,   296,
    3713,   297,   298,   299,   300,   301,     0,     0,     0,     0,
       0,     0,     0,   304,   305,     0,   306,     0,     0,     0,
     307,     0,   308,   309,   310,   311,     0,   312,     0,   313,
       0,     0,     0,     0,   315,     0,     0,     0,     0,   317,
     318,     0,     0,     0,   319,   320,   321,   322,  4195,     0,
     323,     0,   325,     0,     0,   326,     0,     0,     0,     0,
     327,   328,     0,     0,     0,     0,   330,     0,     0,     0,
     331,   332,     0,   333,   334,  3715,     0,     0,   335,     0,
     336,     0,     0,     0,   338,     0,     0,   339,  3716,     0,
     340,   341,     0,     0,     0,     0,     0,   342,   343,     0,
     344,     0,   345,     0,   346,   347,     0,     0,     0,     0,
    -463,     0,     0,   348,     0,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,   370,   371,
     372,   373,     0,   374,   375,     0,     0,     0,     0,   376,
     377,   378,   379,   380,   381,     0,     0,   382,   383,     0,
     384,     0,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,     0,   397,
     398,   399,   400,   401,     0,     0,     0,     0,   403,     0,
       0,     0,   404,     0,   405,   406,     0,   407,   408,  3717,
       0,     0,   410,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   411,   412,   413,     0,   414,     0,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
       0,     0,     0,     0,   428,   429,     0,   430,     0,   431,
     432,   433,   434,   435,     0,   436,   437,   438,     0,     0,
     439,     0,     0,     0,   440,   441,     0,   442,   443,     0,
       0,   444,   445,   446,   447,   448,     0,   449,   450,     0,
     451,     0,   453,  -463,     0,   454,   455,   456,   457,   458,
     459,   460,   461,     0,     0,     0,   463,   464,     0,   465,
     466,   467,  4196,   468,     0,     0,     0,   470,   471,   472,
       0,   473,     0,   474,   475,     0,   477,   478,     0,   479,
     480,     0,     0,     0,   481,   482,   483,   484,     0,     0,
       0,   485,     0,     0,     0,     0,     0,     0,   488,     0,
     490,     0,   491,   492,   493,   494,   495,     0,     0,     0,
       0,     0,   496,   497,   498,     0,   499,     0,     0,   500,
       0,     0,   501,     0,   502,     0,   503,     0,   505,   506,
     507,   508,     0,     0,     0,   510,     0,     0,   511,   512,
     513,   514,   515,   516,     0,     0,   517,   518,   519,   520,
       0,   521,   522,     0,     0,   523,   524,   525,   526,     0,
       0,   527,   528,     0,   529,   530,   531,   532,     0,     0,
       0,     0,     0,   533,   534,     0,     0,     0,     0,   536,
     537,     0,     0,   538,   539,     0,   540,   541,     0,     0,
       0,     0,     0,   544,     0,     0,   545,     0,   546,     0,
     547,   548,     0,     0,     0,     0,     0,   549,     0,   550,
       0,     0,   551,     0,     0,     0,   552,     0,   553,   554,
     555,   556,     0,     0,  -463,     0,     0,     0,   557,   558,
     559,     0,   560,     0,   562,   563,     0,     0,   564,     0,
       0,   565,   566,   567,   568,   569,     0,   570,     0,     0,
       0,     0,     0,     0,     0,     0,   571,   572,   573,     0,
     574,   575,   576,     0,     0,     0,     0,   578,     0,   579,
       0,     0,     0,     0,     0,     0,   580,   581,     0,     0,
     582,     0,   583,     0,   584,   585,     0,     0,     0,   586,
     587,   588,   589,   590,   591,   592,   593,     0,   594,   595,
     596,     0,   598,   599,   600,   601,   602,   603,     0,     0,
       0,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,     0,   619,   620,   621,   622,
     623,   624,     0,   626,     0,     0,     0,   197,   198,   628,
     199,   200,   201,   202,   203,     0,     0,   204,     0,     0,
       0,     0,   205,     0,     0,     0,     0,   207,   208,   209,
     210,   211,   212,     0,  -517,     0,     0,     0,   214,     0,
       0,     0,   215,     0,     0,   216,   217,   218,     0,   219,
       0,     0,     0,     0,     0,   222,  4194,     0,   223,   224,
       0,   225,   226,     0,     0,     0,     0,   229,   230,   231,
    3710,   233,   234,     0,   235,   236,     0,   237,   238,     0,
     240,     0,   242,   243,   244,   245,   246,   247,     0,   248,
     249,     0,   250,   251,   252,     0,   254,     0,     0,     0,
     255,     0,     0,     0,     0,   256,     0,     0,   257,     0,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,     0,     0,     0,     0,     0,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   267,   268,   269,
     270,   271,     0,     0,     0,     0,     0,     0,   273,   274,
     275,     0,     0,     0,   276,     0,     0,   278,     0,   279,
     280,   281,     0,     0,   282,   283,     0,   284,   285,   286,
     287,   288,     0,     0,     0,   290,   291,   292,   293,   294,
       0,     0,   295,   296,  3713,   297,   298,   299,   300,   301,
       0,     0,     0,     0,     0,     0,     0,   304,   305,     0,
     306,     0,     0,     0,   307,     0,   308,   309,   310,   311,
       0,   312,     0,   313,     0,     0,     0,     0,   315,     0,
       0,     0,     0,   317,   318,     0,     0,     0,   319,   320,
     321,   322,  4195,     0,   323,     0,   325,     0,     0,   326,
       0,     0,     0,     0,   327,   328,     0,     0,     0,     0,
     330,     0,     0,     0,   331,   332,     0,   333,   334,  3715,
       0,     0,   335,     0,   336,     0,     0,     0,   338,     0,
       0,   339,  3716,     0,   340,   341,     0,     0,     0,     0,
       0,   342,   343,     0,   344,     0,   345,     0,   346,   347,
       0,     0,     0,     0,  -463,     0,     0,   348,     0,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,   370,   371,   372,   373,     0,   374,   375,     0,
       0,     0,     0,   376,   377,   378,   379,   380,   381,     0,
       0,   382,   383,     0,   384,     0,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,     0,   397,   398,   399,   400,   401,     0,     0,
       0,     0,   403,     0,     0,     0,   404,     0,   405,   406,
       0,   407,   408,  3717,     0,     0,   410,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   411,   412,   413,     0,
     414,     0,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,     0,     0,     0,     0,   428,   429,
       0,   430,     0,   431,   432,   433,   434,   435,     0,   436,
     437,   438,     0,     0,   439,     0,     0,     0,   440,   441,
       0,   442,   443,     0,     0,   444,   445,   446,   447,   448,
       0,   449,   450,     0,   451,     0,   453,  -463,     0,   454,
     455,   456,   457,   458,   459,   460,   461,     0,     0,     0,
     463,   464,     0,   465,   466,   467,  4196,   468,     0,     0,
       0,   470,   471,   472,     0,   473,     0,   474,   475,     0,
     477,   478,     0,   479,   480,     0,     0,     0,   481,   482,
     483,   484,     0,     0,     0,   485,     0,     0,     0,     0,
       0,     0,   488,     0,   490,     0,   491,   492,   493,   494,
     495,     0,     0,     0,     0,     0,   496,   497,   498,     0,
     499,     0,     0,   500,     0,     0,   501,     0,   502,     0,
     503,     0,   505,   506,   507,   508,     0,     0,     0,   510,
       0,     0,   511,   512,   513,   514,   515,   516,     0,     0,
     517,   518,   519,   520,     0,   521,   522,     0,     0,   523,
     524,   525,   526,     0,     0,   527,   528,     0,   529,   530,
     531,   532,     0,     0,     0,     0,     0,   533,   534,     0,
       0,     0,     0,   536,   537,     0,     0,   538,   539,     0,
     540,   541,     0,     0,     0,     0,     0,   544,     0,     0,
     545,     0,   546,     0,   547,   548,     0,     0,     0,     0,
       0,   549,     0,   550,     0,     0,   551,     0,     0,     0,
     552,     0,   553,   554,   555,   556,     0,     0,  -463,     0,
       0,     0,   557,   558,   559,     0,   560,     0,   562,   563,
       0,     0,   564,     0,     0,   565,   566,   567,   568,   569,
       0,   570,     0,     0,     0,     0,     0,     0,     0,     0,
     571,   572,   573,     0,   574,   575,   576,     0,     0,     0,
       0,   578,     0,   579,     0,     0,     0,     0,     0,     0,
     580,   581,     0,     0,   582,     0,   583,     0,   584,   585,
       0,     0,     0,   586,   587,   588,   589,   590,   591,   592,
     593,     0,   594,   595,   596,     0,   598,   599,   600,   601,
     602,   603,     0,     0,     0,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,     0,
     619,   620,   621,   622,   623,   624,     0,   626,     0,     0,
       0,   197,   198,   628,   199,   200,   201,   202,   203,     0,
       0,   204,     0,     0,     0,     0,   205,     0,     0,     0,
       0,   207,   208,   209,   210,   211,   212,     0,  -517,     0,
       0,     0,   214,     0,     0,     0,   215,     0,     0,   216,
     217,   218,     0,   219,     0,     0,     0,     0,     0,   222,
    4194,     0,   223,   224,     0,   225,   226,     0,     0,     0,
       0,   229,   230,   231,  3710,   233,   234,     0,   235,   236,
       0,   237,   238,     0,   240,     0,   242,   243,   244,   245,
     246,   247,     0,   248,   249,     0,   250,   251,   252,     0,
     254,     0,     0,     0,   255,     0,     0,     0,     0,   256,
       0,     0,   257,     0,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,     0,     0,     0,
       0,     0,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   267,   268,   269,   270,   271,     0,     0,     0,     0,
       0,     0,   273,   274,   275,     0,     0,     0,   276,     0,
       0,   278,     0,   279,   280,   281,     0,     0,   282,   283,
       0,   284,   285,   286,   287,   288,     0,     0,     0,   290,
     291,   292,   293,   294,     0,     0,   295,   296,  3713,   297,
     298,   299,   300,   301,     0,     0,     0,     0,     0,     0,
       0,   304,   305,     0,   306,     0,     0,     0,   307,     0,
     308,   309,   310,   311,     0,   312,     0,   313,     0,     0,
       0,     0,   315,     0,     0,     0,     0,   317,   318,     0,
       0,     0,   319,   320,   321,   322,  4195,     0,   323,     0,
     325,     0,     0,   326,     0,     0,     0,     0,   327,   328,
       0,     0,     0,     0,   330,     0,     0,     0,   331,   332,
       0,   333,   334,  3715,     0,     0,   335,     0,   336,     0,
       0,     0,   338,     0,     0,   339,  3716,     0,   340,   341,
       0,     0,     0,     0,     0,   342,   343,     0,   344,     0,
     345,     0,   346,   347,     0,     0,     0,     0,  -463,     0,
       0,   348,     0,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,   370,   371,   372,   373,
       0,   374,   375,     0,     0,     0,     0,   376,   377,   378,
     379,   380,   381,     0,     0,   382,   383,     0,   384,     0,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,     0,   397,   398,   399,
     400,   401,     0,     0,     0,     0,   403,     0,     0,     0,
     404,     0,   405,   406,     0,   407,   408,  3717,     0,     0,
     410,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     411,   412,   413,     0,   414,     0,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,     0,     0,
       0,     0,   428,   429,     0,   430,     0,   431,   432,   433,
     434,   435,     0,   436,   437,   438,     0,     0,   439,     0,
       0,     0,   440,   441,     0,   442,   443,     0,     0,   444,
     445,   446,   447,   448,     0,   449,   450,     0,   451,     0,
     453,  -463,     0,   454,   455,   456,   457,   458,   459,   460,
     461,     0,     0,     0,   463,   464,     0,   465,   466,   467,
    4196,   468,     0,     0,     0,   470,   471,   472,     0,   473,
       0,   474,   475,     0,   477,   478,     0,   479,   480,     0,
       0,     0,   481,   482,   483,   484,     0,     0,     0,   485,
       0,     0,     0,     0,     0,     0,   488,     0,   490,     0,
     491,   492,   493,   494,   495,     0,     0,     0,     0,     0,
     496,   497,   498,     0,   499,     0,     0,   500,     0,     0,
     501,     0,   502,     0,   503,     0,   505,   506,   507,   508,
       0,     0,     0,   510,     0,     0,   511,   512,   513,   514,
     515,   516,     0,     0,   517,   518,   519,   520,     0,   521,
     522,     0,     0,   523,   524,   525,   526,     0,     0,   527,
     528,     0,   529,   530,   531,   532,     0,     0,     0,     0,
       0,   533,   534,     0,     0,     0,     0,   536,   537,     0,
       0,   538,   539,     0,   540,   541,     0,     0,     0,     0,
       0,   544,     0,     0,  4922,     0,   546,     0,   547,   548,
       0,     0,     0,     0,     0,   549,     0,   550,     0,     0,
     551,     0,     0,     0,   552,     0,   553,   554,   555,   556,
       0,     0,  -463,     0,     0,     0,   557,   558,   559,     0,
     560,     0,   562,   563,     0,     0,   564,     0,     0,   565,
     566,   567,   568,   569,     0,   570,     0,     0,     0,     0,
       0,     0,     0,     0,   571,   572,   573,     0,   574,   575,
     576,     0,     0,     0,     0,   578,     0,   579,     0,     0,
       0,     0,     0,     0,   580,   581,     0,     0,   582,     0,
     583,     0,   584,   585,     0,     0,     0,   586,   587,   588,
     589,   590,   591,   592,   593,     0,   594,   595,   596,     0,
     598,   599,   600,   601,   602,   603,     0,     0,     0,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,     0,   619,   620,   621,   622,   623,   624,
       0,   626,     0,     0,     0,   197,   198,   628,   199,   200,
     201,   202,   203,     0,     0,   204,     0,     0,     0,     0,
     205,     0,     0,     0,     0,   207,   208,   209,   210,   211,
     212,     0,     0,     0,     0,     0,   214,     0,     0,     0,
     215,     0,     0,   216,   217,   218,     0,   219,     0,     0,
       0,     0,     0,   222,     0,     0,   223,   224,     0,   225,
     226,     0,     0,     0,     0,   229,   230,   231,   232,   233,
     234,     0,   235,   236,     0,   237,   238,     0,   240,     0,
     242,   243,   244,   245,   246,   247,     0,   248,   249,     0,
     250,   251,   252,     0,   254,     0,     0,     0,   255,     0,
       0,     0,     0,   256,     0,     0,   257,     0,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,     0,     0,     0,     0,     0,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   267,   268,   269,   270,   271,
       0,     0,     0,     0,     0,     0,   273,   274,   275,     0,
       0,     0,   276,     0,     0,   278,     0,   279,   280,   281,
       0,     0,   282,   283,     0,   284,   285,   286,   287,   288,
       0,     0,     0,   290,   291,   292,   293,   294,     0,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,     0,     0,     0,     0,   304,   305,     0,   306,     0,
       0,     0,   307,     0,   308,   309,   310,   311,     0,   312,
       0,   313,     0,     0,     0,     0,   315,     0,     0,     0,
       0,   317,   318,     0,     0,     0,   319,   320,   321,   322,
       0,     0,   323,     0,   325,     0,     0,   326,     0,     0,
       0,     0,   327,   328,     0,     0,     0,     0,   330,     0,
       0,     0,   331,   332,     0,   333,   334,     0,     0,     0,
     335,     0,   336,     0,     0,     0,   338,     0,     0,   339,
       0,     0,   340,   341,     0,     0,     0,     0,     0,   342,
     343,     0,   344,     0,   345,     0,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   348,     0,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
     370,   371,   372,   373,     0,   374,   375,     0,     0,     0,
       0,   376,   377,   378,   379,   380,   381,     0,     0,   382,
     383,     0,   384,     0,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
       0,   397,   398,   399,   400,   401,     0,     0,     0,     0,
     403,     0,     0,     0,   404,     0,   405,   406,     0,   407,
     408,   409,     0,     0,   410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   411,   412,   413,     0,   414,     0,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,     0,     0,     0,     0,   428,   429,     0,   430,
       0,   431,   432,   433,   434,   435,     0,   436,   437,   438,
       0,     0,   439,     0,     0,     0,   440,   441,     0,   442,
     443,     0,     0,   444,   445,   446,   447,   448,     0,   449,
     450,     0,   451,     0,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,     0,     0,     0,   463,   464,
       0,   465,   466,   467,     0,   468,     0,     0,     0,   470,
     471,   472,     0,   473,     0,   474,   475,     0,   477,   478,
       0,   479,   480,     0,     0,     0,   481,   482,   483,   484,
       0,     0,     0,   485,     0,     0,     0,     0,     0,     0,
     488,     0,   490,     0,   491,   492,   493,   494,   495,     0,
       0,     0,     0,     0,   496,   497,   498,     0,   499,     0,
       0,   500,     0,     0,   501,     0,   502,     0,   503,     0,
     505,   506,   507,   508,     0,     0,     0,   510,     0,     0,
     511,   512,   513,   514,   515,   516,     0,     0,   517,   518,
     519,   520,     0,   521,   522,     0,     0,   523,   524,   525,
     526,     0,     0,   527,   528,     0,   529,   530,   531,   532,
       0,     0,     0,     0,     0,   533,   534,     0,     0,     0,
       0,   536,   537,     0,     0,   538,   539,     0,   540,   541,
       0,     0,     0,     0,     0,   544,     0,     0,   545,     0,
     546,     0,   547,   548,     0,     0,     0,     0,     0,   549,
       0,   550,     0,     0,   551,     0,     0,     0,   552,     0,
     553,   554,   555,   556,     0,     0,     0,     0,     0,     0,
     557,   558,   559,     0,   560,     0,   562,   563,     0,     0,
     564,     0,     0,   565,   566,   567,   568,   569,     0,   570,
       0,     0,     0,     0,     0,     0,     0,     0,   571,   572,
     573,     0,   574,   575,   576,     0,     0,     0,     0,   578,
       0,   579,     0,     0,     0,     0,     0,     0,   580,   581,
       0,     0,   582,     0,   583,     0,   584,   585,     0,     0,
       0,   586,   587,   588,   589,   590,   591,   592,   593,     0,
     594,   595,   596,     0,   598,   599,   600,   601,   602,   603,
    1152,  1223,     0,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,     0,   619,   620,
     621,   622,   623,   624,     0,   626,  1224,   776,     0,     0,
       0,   628,     0,     0,     0,     0,     0,  1225, -2060,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1226,     0,  1227,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1228,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -2052,  1229,     0,     0,     0,     0,  1230,     0,
       0,  1231,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1232,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1233,     0,  1234,     0,     0,     0,     0,
       0,     0,     0,     0,  1235,     0,  1236,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1237,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1238,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1239,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1240,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1241,  1242,     0, -2056,  1243,  1244,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1245,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1246,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1247,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -2743,     0,
       0,     0,  1248,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -2060,     0,
       0,  1249,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -2056,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -2743,
       0,     0,     0,     0,     0,     0,  1250,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1251,  1252
};

static const yytype_int16 yycheck[] =
{
       6,  1018,   780,   781,     0,    43,     0,  1008,  1469,   801,
    1010,  1754,    18,  1331,  1012,   679,    22,  1019,  1056,  1789,
     115,   115,   800,    21,  1603,    31,    43,  1093,  1067,  1950,
    1130,  1381,    38,  1093,  1545,    41,    55,    58,   869,  1832,
      46,    39,     6,  2512,  1082,    43,    52,    53,  2181,  2182,
    3138,  1754,  2086,  2087,  1565,    58,  1726,  1381,  2590,  1098,
    2094,  2095,  2096,  1304,  1305,  1033,    62,  2201,  2851,  1634,
    1033,    96,  1583,  2220,  2221,  1175,  1228,  2758,  1779,  1706,
      19,  2384,  2145,  3562,  2536,  1845,  2258,  1519,  2988,  2760,
      96,    30,  1333,  3466,    57,  2669,    35,  2566,  1547,  2673,
    1545,  1253,  1551,  3415,  1345,  1346,  1347,  3019,  3140,  1350,
    1519,  1324,  1519,  1868,  2387,  2387,  1565,  2387,  2227,  2387,
    2544,  1176,   999,  1013,   656,   657,  3562,  3094,  1577,  1827,
    2481,  1832,  1908,  2395,  3094,  2202,  1297,  1298,  1299,   145,
      21,  3654,  4277,  1182,  3226,  3581,  3582,  1308,  1389,  2452,
     960,  1927,  4287,   189,   798,  2240,  1530,  3738,    39,  1935,
    4127,   118,  2199,  3041,  4153,  1941,   830,  2194,   174,    21,
     176,  2553,    22,   179,   180,   181,   182,    35,  1339,    73,
      73,  1342,    21,  2230,   642,   643,  2271,  2272,    18,    19,
     196,     9,   158,  1626,  2754,   194,    68,    18,    19,  1360,
    1361,    18,    19,  1364,  2660,  2661,  2662,    52,    18,    19,
      71,    29,   176,    18,    19,   179,    34,   125,    62,  3255,
    2676,  1382,  1383,     0,   144,    71,  1387,  1388,  4558,    71,
    1230,   663,   664,   665,   156,  2538,   668,   669,   125,    21,
     672,   111,   674,   675,   676,  2701,  2167,  1680,  1681,  2705,
    1250,  1072,    18,    19,  2786,    21,  2580,   176,    59,    21,
     194,   197,    18,    19,    21,  2721,  2722,  3465,    31,    48,
    2844,  2727,   176,   162,   938,   939,   940,  3787,   125,    18,
      19,   131,   235,  2464,   948,    62,  3140,  2743,  2744,   125,
     125,   160,    65,   156,    48,   197,  2752,  1671,    18,    19,
     197,    18,    19,  3965,   156,    18,    19,    47,   246,   156,
     231,    33,   388,    18,    19,   194,   156,   156,   750,   103,
     156,   156,   249,    67,  4073,   158,    73,   156,  3533,  3534,
     402,    81,  3537,   377,    18,    19,   373,   160,    18,    19,
    3708,   118,    37,    52,   246,   367,   259,   200,  2159,   125,
    2161,  3556,   156,   475,   141,  3560,    37,   292,   811,  4244,
    1170,   275,   160,    18,    19,   235,    57,   197,   473,    35,
     125,   156,     5,    21,   192,   176,    18,    19,   407,   180,
     125,  4805,    23,  3261,   501,    53,  2960,    18,    19,   103,
     230,   109,  3073,   194,    35,   125,    64,    18,    19,    19,
     493,   433,   258,    85,   231,  4800,    18,    19,    49,    23,
      12,    21,  3785,   292,   572,   231,   572,    18,    19,     9,
      61,    62,   212,  2955,  3248,  3249,   612,   401,   197,   235,
    1208,   156,    77,   246,  3258,  3259,   128,   276,   635,  2360,
      78,  1219,   378,   239,   615,   407,  3020,    61,    62,  2370,
     635,   198,   156,   249,   637,  3032,  2590,   263,    64,   194,
      77,   509,    22,   282,    73,   543,  3140,   447,   258,   231,
     401,   537,  4067,    18,    19,  2984,   216,   293,  2802,   243,
    4693,   449,   138,   256,    18,    19,   369,   216,  4926,  1320,
      18,    19,   765,   563,   137,  1495,   566,  1497,   212,   772,
     245,    18,    19,  1334,  4942,   571,   592,   180,  4103,   152,
     429,   197,   480,   150,  2577,  2578,  2553,   197,   282,   450,
     455,    18,    19,   709,   219,   429,    73,   249,   389,   615,
     331,  4520,    18,    19,   263,   150,   293,  2254,   219,   194,
    3117,  4754,  1074,   389,    18,    19,   624,   389,  2265,   388,
     285,  2472,   371,   275,   534,   197,  3803,   387,   345,   607,
     390,   433,   401,   249,   150,   448,   387,   420,  2162,   390,
     387,   131,   228,   390,   771,    18,    19,   387,  2295,    22,
     390,   547,   387,  1041,  4914,   390,   771,   193,   771,  1479,
     564,   130,   130,   203,   363,   401,   186,   393,   388,  1489,
     771,   293,  3140,   651,    21,   637,   254,  4086,  1498,  2326,
     766,   293,   770,   429,   282,   471,   361,   262,  1428,  1429,
    2541,   387,    39,    70,   390,   470,    43,  2895,   429,   456,
     659,   387,   194,   502,   390,    70,   642,   643,   163,  1097,
    5064,    19,   372,   765,   650,   262,   652,  2241,   387,  2243,
     316,   390,  2786,  1719,   771,   369,   662,  3969,  2252,  1719,
     666,    18,    19,   327,  1702,   671,  3871,   772,  1100,  1729,
     387,  5066,   765,   390,   387,  2269,   433,   390,   369,   502,
     239,  4566,   387,   285,  1137,   390,    23,    65,   131,   609,
     249,  3143,  1150,   765,   456,   771,  2290,   659,    35,   373,
    2294,   636,  1160,   387,   502,  4549,   390,   387,   730,   613,
     390,   493,    49,   566,   547,  2508,   722,  2228,   743,  2230,
     442,   635,   728,  4472,    61,    62,   502,   771,  3399,  2763,
    3401,   493,   387,  1397,   771,   390,   742,   743,   488,   652,
      18,    19,  1983,  4587,  4426,   387,   486,   502,   390,  1901,
    4739,  4740,   536,  1905,  3206,   222,   387,   636,  1910,   390,
     583,   470,  1426,   801,   717,   771,   387,   511,  4278,   390,
    2202,   404,   771,   694,   780,   387,  2569,   647,   390,   623,
     553,   798,   788,   789,  2025,  2455,   387,   785,  2969,   390,
    1942,  1943,  3095,  2202,   615,  2202,   635,  2567,  3834,  3835,
     798,  2544,  4000,   809,   810,   771,   174,  2508,  1969,   815,
     699,  5141,   418,  5143,  1853,   723,   563,  2926,   648,  2928,
     583,  2955,  1600,  1601,  1602,  2997,  3094,   648,  2855,  3389,
    2867,   648,   853,   771,   393,   771,  4041,   771,   648,  4501,
    2419,  2544,   387,   648,   771,   390,  4051,   769,  3304,   771,
     853,   771,   771,   387,  4059,   637,   390,  2098,   637,   387,
     678,  1682,   390,   869,    18,    19,  3248,   771,  2569,   771,
     387,   765,   765,   390,   771,   637,  2037,   572,   256,  3335,
    2041,  3337,   648,   637,   771,  2932,   643,   982,   982,  4094,
     387,   572,   648,   390,  3140,  3351,  5226,  3353,    18,    19,
     772,   387,  2063,   772,   390,   766,   769,   765,   771,   648,
     628,  3443,  3368,   387,    21,   765,   390,   769,  1013,  1013,
     766,   739,   769,  1754,   766,  2275,   771,   745,   648,   769,
     769,   648,    39,   769,   769,   648,   942,  4904,   944,  3817,
     769,   771,   771,   648,   387,   941,  2378,   390,    18,    19,
     771,  2275,  2517,   766,   563,  1957,   766,   595,   768,   776,
     601,   771,  3494,   583,   648,   769,   771,   771,   648,  2378,
     771,  2378,   759,   760,   761,   762,    22,   650,   974,  5309,
    5310,   987,   696,   765,   769,  2418,   771,   601,    77,    18,
      19,  3460,   637,   648,  3818,   813,  1002,   634,   604,  1024,
     766,  4582,  1008,   765,  3513,   771,   648,    18,    19,  4522,
     766,   656,   657,  1019,  2388,   771,   563,   648,  1024,   634,
    1026,  1027,  1018,  1029,  1018,  3092,   983,   648,  1034,   768,
     387,  1037,  1038,   390,  2794,  1041,   648,  1073,  5027,   656,
     657,  1066,  1048,  4290,   769,  1709,   771,   648,   634,   722,
    3222,  1057,  1058,  1059,   771,  3118,  1062,  2518,   771,  1065,
    1066,   766,  1068,  1069,  1842,   769,   771,   771,  3577,  1067,
     609,   609,  1882,  1079,  1038,   637,   543,    18,    19,  1085,
    1086,  1087,   766,  1089,  1090,  1091,   766,   771,  1094,  1095,
    1096,  1097,   766,  1099,  1119,  2865,   543,   465,  1104,   145,
    1098,   765,  3426,   648,  2143,  3429,   631,   780,   543,   387,
    1116,   766,   390,  1119,   648,   788,   789,  3900,   144,   156,
     648,  1127,  1086,   130,  1130,   378,  1090,  4027,  1134,  1135,
    1094,   648,    87,  1131,   111,   766,   182,   235,  1670,   219,
     771,    44,   156,  1149,  1150,   766,   316,    18,    19,  1174,
     196,   648,  3684,  1159,  1160,  2749,  1162,  1163,  4070,   771,
     112,   316,   648,   115,   941,   766,  1191,   369,  1174,  1175,
     771,    18,    19,   262,   648,   553,   373,  1183,    40,   422,
    2181,  2182,  1220,   191,  1182,  1191,   100,  4869,    71,  5033,
      18,    19,  4159,  5037,   243,   372,  2790,   974,  3283,  4159,
    1206,   123,   380,  1220,  2035,   648,   983,   766,  1214,  4291,
    1874,    18,    19,    18,    19,  2809,  2810,  2811,  2812,  1863,
     153,   766,  1220,  1229,   374,   388,   771,  1871,   465,  2946,
     353,   164,   766,   387,   241,  5079,   390,   771,   766,   276,
     249,  1018,   639,   771,  3055,  3507,  3508,  3058,  3059,   766,
    1131,  3062,  3063,  3064,  3065,  3066,  3067,  3068,  3069,  5394,
    2854,  3072,   276,  3074,   601,  3076,   179,   387,  2985,   942,
     390,    52,  1278,  1279,   771,   380,  2993,  1735,   745,   204,
     766,  2998,   165,    18,    19,  1103,  3140,   457,  2165,   626,
    1722,   648,    18,    19,   641,  4092,   548,   771,  4095,    18,
      19,  2191,  2192,  5147,   456,   204,  2900,  3663,   176,  3443,
    1405,  1405,    32,   192,  1320,   456,    71,   387,  3850,   276,
     390,  2387,  3678,  4759,   238,   247,   197,  2387,  1334,  1002,
    2791,   193,  1351,   535,  1330,   485,   704,   705,   285,    21,
     293,  2309,  2310,   586,   258,   158,  2309,  2310,   572,    18,
      19,  3803,   231,   209,  1027,  1887,   511,   271,   387,    79,
    3494,   390,  3396,  3140,   255,  3428,  3400,   278,   785,  3432,
     648,  4807,    18,    19,   771,  1381,   387,   629,  4232,   390,
      13,   798,    18,    19,   393,    71,   572,  2453,  3812,  3498,
     501,  2491,  1411,  2453,  1413,  1414,  1415,  1416,  1417,  1418,
    1419,  1420,  1421,  1422,  1423,   413,  2933,  3939,  4776,    65,
    4778,  1436,  3685,  3685,   771,  3685,  2943,  3685,  1091,  1425,
    3771,  2932,  3459,   572,   237,  1431,   282,  2938,   765,  1454,
    1436,   388,  1438,  2488,   154,  3105,  3968,   333,    18,    19,
     603,   355,  1448,  3615,  3616,  3024,   387,  2547,  1454,   390,
    3982,  2692,   355,   386,  1127,  3987,  2774,  2775,   158,   372,
    3054,   653,  3056,  3057,  1470,   643,  3060,  3061,  4042,    26,
     583,  3241,  2624,   428,   156,   501,  3070,  3071,  2719,   165,
     433,  3075,  3293,  3153,  3078,  2637,  2638,  3943,   465,  2641,
    3260,  2546,   572,   771,   648,   160,  1502,   167,  3196,  1505,
      18,    19,  4707,   592,  4709,   575,   389,   140,  3268,  3269,
    2510,  3022,  3023,   435,   563,   626,   387,   566,   771,   390,
    3296,  3297,   572,  3847,  3848,  3280,   615,    84,   648,   194,
     200,  2570,  2571,  2572,   771,  3682,  3683,  3164,   643,  3237,
     387,    43,   433,   390,   572,    26,  4578,   724,   287,   231,
    3684,    18,    19,  1330,   378,   493,  1229,   370,  4232,   387,
     757,   429,   390,   477,    18,    19,  2779,   656,   657,  1607,
    4482,   482,    18,    19,  3023,  4948,   728,  3022,   648,   765,
     387,   276,   387,   390,   733,   390,   511,   728,   369,   637,
    2751,   714,   715,   716,   194,    25,   642,   643,   635,   122,
     256,   158,   609,    84,    18,    19,   566,    21,  3278,    18,
      19,   350,   511,    18,    19,    18,    19,   771,     9,   648,
     487,   635,  1628,  1629,   576,   120,   566,   579,   550,   237,
     243,  2631,    18,    19,   389,   549,  3147,   648,   571,  1645,
      31,   241,   498,  3208,  4441,   194,   603,  1610,  3972,  3973,
    1067,   771,   387,   401,  3978,   390,  3980,  4013,   771,   606,
    3092,   387,  4018,  4975,   390,   188,  4022,  3427,   387,  3462,
     370,   390,    18,    19,   570,  5043,   589,  1683,   785,  1685,
     237,  1098,  1688,  3092,  5052,  3092,   585,  1708,  1707,   470,
     643,  1710,   605,   388,  4232,   415,  5132,   139,  5134,   637,
     596,  1478,   249,   389,   765,  1708,  3300,   648,  1714,   365,
    4381,  1488,  1718,  2544,  1131,   765,  3850,   437,   387,   401,
     501,   390,   493,   771,  4578,   272,   122,   276,   575,  1735,
      13,   226,   769,  5212,   547,   614,   285,   765,   168,  5175,
     572,   387,   771,  4011,   390,   613,   198,  1753,  1754,  1755,
     420,   387,  1425,  4785,   390,   769,   237,  2758,   478,   583,
     771,  3462,   370,   809,  1770,  1182,   323,   290,  1774,    18,
      19,   401,  1797,  1798,   456,  1448,  1782,   648,  4081,  1785,
    3327,  2445,    18,    19,  4465,  4466,   125,  1793,   122,    18,
      19,  1797,  1798,   370,  4694,     0,  5232,  1470,    18,    19,
     139,   648,   572,  1220,   543,  3939,   503,   387,  3478,   766,
     390,   493,   615,   370,    18,    19,   564,   630,  2596,   539,
     648,  1827,  4178,  1829,   128,  1831,   186,   765,  1831,  2895,
     771,   572,  1505,  1839,  3968,  2895,   502,   502,  4290,   388,
     335,   648,   323,   648,   339,  5122,  1863,   547,  3982,  1855,
     373,   346,   766,  3987,  1871,  1853,   456,   140,  1856,  5227,
    4643,  5229,    38,   533,  4438,  1863,   637,  2399,  1893,   387,
      46,    13,   390,  1871,   397,   430,  3226,    18,    19,   535,
     637,  1906,  1888,  1889,  1890,  1891,  1892,  1893,  1894,   370,
     332,  4159,   615,   493,   290,  4351,  1902,   553,  1904,  3223,
    1906,   733,  3226,  1909,  4578,   238,   266,  5275,   603,   125,
    5278,  3974,   609,   648,    18,    19,   220,   587,   583,  3953,
     387,  3955,   648,   390,  1888,  1889,  1890,   482,  1892,   648,
     630,  4785,   427,   387,  3604,  1956,   390,  4742,   271,   547,
    1904,   387,  4747,   771,   390,  1909,   162,   771,   400,  4980,
      18,    19,  4983,  1956,   572,   637,   290,    18,    19,    13,
    1067,   766,   654,   733,   771,  5333,  5334,  5335,   771,   772,
     547,  5339,  3032,   387,  3521,  4875,   390,   373,   387,   648,
     277,   390,   387,   280,   387,   390,  4232,   390,   644,   293,
     547,  1098,   733,   332,   765,  1041,   491,  3667,   140,    18,
      19,   387,   648,    12,   390,  3552,  3553,   300,   301,   369,
    4157,  4158,   648,    64,   771,    18,    19,    18,    19,   844,
     138,   566,   630,    74,  1131,  5302,  5303,  3621,  3094,  2035,
    2036,    18,    19,    13,  3094,  4889,   771,   637,   637,   373,
    4578,   387,   186,   127,   390,   771,    18,    19,   771,   772,
     127,  1097,   771,   630,   603,    86,   197,  3117,   510,   367,
     366,   367,  4514,   234,   235,    13,   547,  3860,   648,  3812,
    4394,   594,  4396,   630,   105,  1182,    18,    19,   156,   216,
     772,  3120,  1755,   765,    18,    19,   140,   769,   913,   771,
     261,    18,    19,    18,    19,   415,  2102,  4902,  2762,   765,
    3138,  3201,   771,  1149,  1150,   615,   772,   773,   416,  3812,
     228,  4785,  4175,  1159,  1160,   733,  1162,  2123,   127,    35,
    1793,  3181,   266,  5155,   122,   771,   263,   682,   637,  5161,
     648,   640,  3759,   430,  2172,   771,   141,   632,   387,  3239,
    2146,   390,  3466,   608,   477,  2143,    62,    18,    19,   630,
      19,   387,   445,   446,   390,   650,   372,  4838,   387,  3860,
     140,   390,  5193,   988,   248,   765,  1839,   387,  2174,  2207,
     390,   248,   771,  3752,   433,  2181,  2182,  4480,   681,   235,
     765,   648,  1855,   387,   235,   770,   390,  3287,  2194,   692,
     188,   771,   140,  2199,   648,   454,  2199,   209,   594,    18,
      19,   246,   648,  3203,   137,  3998,  3999,   263,  5062,   105,
    3178,  4004,  2250,  5067,  3177,  4889,  2222,  5305,  3140,   152,
     766,  2227,    18,    19,  3789,   771,   212,  2233,  2234,  2235,
    2236,  2237,  2238,   630,   648,    32,  2242,   496,  2244,   648,
      18,    19,  3592,   648,   765,   648,   387,  4785,  2254,   390,
    2256,   772,  2258,   771,  2260,  2261,   766,  2263,  2264,  2265,
     594,   771,   648,   564,  2270,  1478,   160,  2273,  3592,  2275,
     282,   668,   141,   670,  2280,  1488,   125,  2283,  2284,  3248,
     766,    18,    19,   387,  4965,   771,   390,  2293,  3257,  2295,
    2229,  5323,   290,  2299,   160,  2301,   798,  3998,  3999,   148,
    2239,  5155,   648,  4004,   771,   125,  2245,  5161,   105,  4529,
    2316,    21,   766,   230,  4534,  5347,  5348,  5349,   138,   387,
    2326,  2327,   390,    18,    19,   681,   387,    18,    19,   390,
    4073,   227,  4578,   229,  4397,  2274,   692,   212,   187,  2278,
     345,   167,   758,    18,    19,  4814,  2285,  2286,  3942,  4673,
     766,  4889,  4163,  4164,  4165,  4166,   681,   766,  2667,  4102,
     227,   766,   229,   766,    74,  2674,  2391,   692,   387,    18,
      19,   390,   681,  2379,   758,   373,   563,  2383,  4232,   566,
     766,   127,   766,   692,   387,  2391,   387,   390,  5062,   390,
      19,   765,  1438,  5067,  2400,  2401,  2402,    61,    62,   648,
     387,    18,    19,   390,  4619,  2411,  4621,    71,   228,    18,
      19,  4332,   648,  2434,   772,   387,   583,   766,   390,   648,
     766,  2440,   771,  2444,  2443,   612,   185,  2446,   648,  2102,
     227,  2434,   229,  2458,  5288,    19,  1853,  2401,  2402,  1856,
    2436,  2444,   122,  2449,   648,   387,  1863,  4619,   390,  4621,
     160,  2667,  2458,   387,  1871,  4232,   390,  4989,  2674,  2465,
     387,  3785,   387,   390,    21,   390,  4686,   141,  5322,  5323,
    4690,  5325,  5326,  2146,   623,  2481,   345,   626,    18,    19,
    2486,  5155,    21,  4276,  2490,  2491,   498,  5161,    18,    19,
     230,    48,   766,  5347,  5348,  5349,   212,   771,   766,  5180,
     235,  2174,  3166,   771,  3168,   108,   456,   648,   188,    48,
      18,    19,   141,   212,  2520,  3756,   387,   766,   122,   390,
    4031,  2527,  2528,  4743,  5062,   235,    61,    62,  4748,  5067,
     766,  2552,    18,    19,   564,     4,   212,   766,  2544,  4785,
     179,  2547,   235,   766,   648,  3863,   766,  2553,   771,  2552,
    2553,   766,    21,   263,    18,    19,   771,  2553,    18,    19,
     766,  2599,   766,   717,   167,   771,    18,    19,   387,   566,
      39,   390,  2570,  2571,  2572,  4276,  3894,  3895,   718,   719,
     648,   564,  2599,  1629,   188,   212,    21,   648,    18,    19,
    2263,   387,    18,    19,   390,   419,   594,   200,  4901,  1645,
    2606,  2599,  3920,   575,    39,    18,    19,   135,    43,   387,
     290,    77,   390,   766,  5288,   219,   481,  5155,   771,  3685,
      55,    56,   654,  5161,    11,  3685,  2299,    93,  4096,   648,
    4664,  4099,  4100,  2639,  2640,   504,   505,  1683,   656,   657,
     385,   653,  2419,  4889,  2650,   648,   765,   648,  5322,  5323,
     387,  5325,  5326,   390,    18,    19,  5188,   881,   563,  2436,
     672,   648,   766,  2669,   378,  3906,   381,  2673,  4247,    18,
      19,   345,  1718,  5347,  5348,  5349,   648,   901,  2697,    18,
      19,   197,   765,   766,  4987,  4988,   290,    61,    62,  1735,
     914,   915,   387,   373,   630,   390,   387,    71,   766,   390,
      18,    19,   231,   766,   246,   766,   648,  1753,   771,  3861,
      84,   194,   387,  3813,   648,   390,   345,  4850,  1220,   150,
     151,   648,   197,   648,  4578,    33,  2143,   366,   367,   246,
     766,   667,   668,   372,   670,   771,  1782,   766,   387,  1785,
     766,   390,   771,   150,   151,   771,  1853,   766,  2754,  1856,
    5288,   621,   757,   758,   759,   760,   761,   762,   501,  2536,
    2309,  2310,   766,   766,  2783,   766,  2785,   771,   122,   373,
     387,   125,   501,   390,  2780,   212,  2553,   648,   387,   766,
     167,   390,  2288,  2289,  5322,  5323,  2792,  5325,  5326,   378,
    3712,   766,  2465,  3715,  3716,   103,   771,  3719,    80,   265,
      82,  4578,   766,  4314,  4315,    64,   772,   771,   771,  5347,
    5348,  5349,   771,   200,   122,    74,  5062,   420,  5374,  5375,
     765,  5067,   821,   822,   766,   824,    96,   826,   493,   648,
     504,   505,   766,   765,   188,   766,   501,   766,  2844,   766,
     771,   766,   771,   125,   765,  1891,   766,   387,  1894,  2855,
     390,   771,   648,  3853,   765,  4989,   765,   387,  3858,    23,
     390,  2867,  2868,  2869,  2867,   219,   148,   766,   572,   766,
     648,    35,   771,   583,   771,   504,   505,   343,   493,   387,
     188,   765,   390,   765,   108,    49,   755,   756,   757,   758,
     759,   760,   761,   762,   772,   766,    48,    61,    62,  3901,
     141,   387,   766,   369,   390,   187,   765,   771,   766,  5155,
     765,   648,   141,   771,   594,  5161,  2922,   765,   522,   765,
    2926,   765,  2928,   387,  4518,   765,   390,   387,  2934,   765,
     390,  4785,  2938,   765,   193,   387,   290,   245,   390,   766,
    2946,  4291,   765,  2949,   771,  4011,   156,   766,  1368,  1369,
     589,  4011,   122,   648,  2960,   620,   621,   648,   765,  2965,
     141,   387,  4286,   566,   390,   431,   605,  4291,  1939,  1940,
     766,  3315,   637,   648,   387,   766,   235,   390,   766,  2985,
     771,  3812,   290,   771,   587,  3329,   765,  2993,   766,   766,
     594,  2997,  2998,   766,   771,   765,  2669,   221,   771,   648,
    2673,   141,   765,   765,   263,   620,   621,  3013,  4785,   612,
     766,   765,  4253,  3019,  3020,   771,   156,    59,   188,   373,
     156,   765,   637,   387,  3802,   628,   390,   766,   197,   766,
     111,   648,   771,   420,   765,  4889,  2143,   765,   387,   648,
     765,   390,  5288,   765,  3050,  4047,   765,   700,   387,   219,
     703,   390,   197,   766,  5188,   708,  4058,   227,   771,   229,
     713,  3156,  3156,   765,  4658,   373,   766,   533,    64,   387,
      48,   766,   390,  3079,   770,   766,  5322,  5323,    74,  5325,
    5326,   755,   756,   757,   758,   759,   760,   761,   762,   397,
    3096,   766,   766,  4159,   765,   765,   765,  3761,   765,  4159,
     765,  5347,  5348,  5349,   345,   320,   321,   765,   648,   766,
     325,   326,  4889,  3119,   771,   765,   345,   766,   648,   765,
     290,   765,  3120,  3129,  3130,  3131,   755,   756,   757,   758,
     759,   760,   761,   762,   176,   765,   769,   765,   180,  3145,
     648,  3147,   401,   765,   765,   765,   533,   765,  2194,   766,
     765,  3147,   194,  2570,  2571,  2572,   766,   766,   440,   418,
     766,   771,   648,   765,   345,   771,   765,  3131,  3174,   765,
     394,  2844,  4272,  3517,  3170,   122,   276,   765,   125,   765,
     404,  4951,  2599,   765,   648,   765,   765,   411,   648,  4507,
    3196,     7,   103,  3218,  3200,  3201,   648,   193,  4298,   122,
     587,  3207,   125,   373,   766,   345,   765,  3551,  5062,   771,
      26,   122,  3218,  5067,   766,  3559,  3222,  3223,    35,   771,
    3226,   765,   648,  3567,   141,   481,   766,   662,   122,   122,
    3226,  3237,   125,  3239,   765,   648,   766,   293,  2284,   235,
     594,   188,  3248,  3249,   679,  3248,  3249,   765,   160,  2922,
     765,  3257,  3258,  3259,  3257,  3258,  3259,   766,   766,   765,
     729,   766,   771,   504,   505,   188,   771,   263,    84,   766,
    2316,   765,   219,   766,   771,   504,   505,   188,   771,  4873,
     766,  3287,   772,   122,   648,  5062,   594,  2960,   766,   331,
    5067,   515,   765,   771,   188,   188,   219,   732,   766,   648,
     765,  5155,   766,   771,  4082,   612,   766,  5161,   564,   648,
    4232,   765,   765,   569,   766,   766,   785,    13,   765,   765,
     771,   765,  5065,   504,   505,   219,   219,   765,   144,   765,
     648,   765,   249,  2379,   245,   384,   771,  2383,   171,   766,
     766,   158,   811,   290,   771,   162,  3019,  3020,   765,   188,
     785,   100,   766,   766,   766,   766,   612,   771,   533,   771,
     771,  1863,   765,   798,   504,   505,  3143,   290,   766,  1871,
    3147,   765,   628,   771,   765,  3152,  3153,   766,  5155,   290,
     219,  3158,   771,  3389,  5161,   202,   766,   429,   612,   697,
     765,   771,   765,  3170,   765,   830,   290,   290,   654,  3405,
     835,  3420,   766,  4405,  4406,   222,  4408,  3413,   765,  3415,
     766,   519,  4414,    37,   765,   771,   193,   766,   765,  4417,
    4418,   237,   418,  3096,   594,   493,   373,   766,   345,  3206,
     865,   765,   141,   501,  5288,   765,   765,   601,   765,   765,
     765,   709,    12,     7,   140,   378,  3119,   771,   766,  3226,
     373,   290,   772,  3459,   709,  3461,  3459,   615,   622,   623,
    3466,   141,   373,  2570,  2571,  2572,   563,   771,  5322,  5323,
     287,  5325,  5326,   516,  2520,    50,   282,    30,   287,   373,
     373,  2527,  2528,   771,   583,   771,   397,   771,   487,   238,
      71,   115,  3498,  5347,  5348,  5349,   733,  5240,   122,   572,
    3506,   273,   771,   938,   939,   940,   941,   323,   771,   258,
     658,  5288,   770,   948,   755,   756,   757,   758,   759,   760,
     761,   762,   271,   771,   220,   766,   755,   756,   757,   758,
     759,   760,   761,   762,   373,   166,   141,   766,   108,   772,
     249,   194,   300,   301,   765,  5322,  5323,   563,  5325,  5326,
     543,   166,   620,   621,   370,   179,  5062,   127,   543,   543,
     543,  5067,   287,   157,   188,   771,   383,   122,    37,   637,
    5347,  5348,  5349,  3579,   755,   756,   757,   758,   759,   760,
     761,   762,    88,   771,   180,   766,  3592,   504,   505,  3595,
    3596,   369,    21,  2639,  2640,   219,   379,   771,  1067,   559,
    4600,   646,   419,    71,    13,   141,   355,   634,   140,  3615,
    3616,  1046,   766,  3619,    10,   755,   756,   757,   758,   759,
     760,   761,   762,   766,  4948,   771,   443,   766,   772,  1098,
     200,   766,  1067,   188,   766,   451,   345,   766,    77,  5100,
    1075,   766,   766,   766,   766,  3651,   115,   594,  3654,   502,
     136,   468,   156,   122,   766,   729,  4578,  3663,    48,   654,
     729,   637,  1131,  1098,   219,   345,   290,   160,  1137,   160,
     160,   594,  3678,   243,  3680,   160,  4678,   160,  4680,  4681,
     160,   771,  1151,   594,   160,   404,   572,   445,   446,   771,
     249,  5285,    87,   125,   369,   512,  1131,   765,   316,     7,
     594,   594,   765,  3120,  3710,   110,  4708,   583,   158,   401,
     179,  3717,    74,  1182,   401,   401,   286,   583,   136,   188,
     261,  5315,   261,  3140,   401,   136,   543,   401,   477,    48,
     401,   547,   356,   401,  3730,   290,  3730,   401,   401,   619,
     345,   619,  3748,   771,   368,   771,  2792,  1182,   372,   373,
     219,   501,   710,   492,  1189,   594,    33,   628,   765,   765,
     771,  5355,   766,   610,    57,  3771,   524,   525,   526,   448,
     171,   378,     7,   717,  5092,   111,  4793,   378,   614,  3785,
       7,   228,  5288,   765,   592,  1220,   697,  1222,   458,   459,
     460,   461,   462,   463,   464,   504,   505,   275,   237,   667,
     549,   772,   771,   192,   770,   287,  3812,  3813,   287,   345,
     287,   160,  3818,   287,   630,  3818,  5322,   287,   373,  5325,
    5326,   290,   287,   771,   504,   505,   771,   378,   583,   236,
     635,   527,   528,   771,   530,   531,   532,  4838,   755,   756,
     757,   758,   759,   760,   761,   762,   771,   771,   583,  4850,
     420,   401,   583,   549,    13,   771,   160,   210,  1293,  1294,
    5178,   378,   197,  4785,   141,   197,   583,  1302,  1303,  1304,
    1305,  1306,  1307,  4795,   456,   583,   255,   433,  4800,   194,
    1315,  1316,   772,  1318,  1319,   772,   771,   356,  1323,  1324,
     772,   772,  1327,  1328,  1329,  1330,  4688,  1332,  1333,   504,
     505,   249,   772,   372,   373,  1340,  1341,   759,  1343,  1344,
    1345,  1346,  1347,   252,  1349,  1350,  1351,  1352,  1353,  1354,
    1355,  1356,  1357,   561,  1359,   364,   181,  1362,  1363,   499,
     194,   370,  1367,   771,   194,   543,  1371,  1372,  1373,   426,
     514,   405,   194,   766,   766,   766,   766,   766,   572,  1384,
    1385,  1386,   576,  3730,  1389,   579,   766,  1392,  1393,  1394,
    1395,  1396,  1397,  3969,  4965,   589,   766,  3013,   504,   505,
     594,   197,   249,   597,   766,  1410,  1411,   771,  1413,  1414,
    1415,  1416,  1417,  1418,  1419,  1420,  1421,  1422,  1423,    77,
     758,  1426,   765,   690,   564,  1430,   566,  1432,   275,  4037,
     439,  5351,   766,  4925,  4926,   766,   766,  4013,   771,  4015,
     766,   402,  4018,  3120,   766,   766,  4022,   771,  5368,   766,
    4942,   766,   766,   771,   762,  4031,  3803,  5351,   404,   772,
     600,   772,  5382,  3140,  5073,    26,  4042,   766,   772,   594,
    1475,   771,   612,  5393,  5368,   773,   755,   756,   757,   758,
     759,   760,   761,   762,   583,   160,   572,   404,  5382,   572,
    4066,   100,   572,   126,  4070,   771,   503,   772,   345,  5393,
     158,   263,  4864,   598,   478,   755,   756,   757,   758,   759,
     760,   761,   762,  3129,   263,    77,    77,   263,   707,   366,
     367,   403,   765,    84,   378,   673,   673,  2599,   249,  3145,
      35,  4107,  4108,   572,   160,   160,   160,   576,   547,   160,
     579,   160,    26,   160,   160,   160,   160,   160,   160,   111,
     589,   709,  4128,   160,   160,   594,   160,    62,   597,   160,
      21,   160,   160,   757,   758,   160,   161,   160,   708,   160,
    5062,   765,   160,   160,  5066,  5067,   160,  4153,   160,   237,
      27,   756,   757,   758,   759,   760,   761,   762,   160,   160,
     599,  3207,   160,    77,  4128,   442,   158,   158,   286,   642,
      84,   160,  4178,   160,   160,  4181,   201,   112,   160,  5180,
     115,   160,   160,   160,   160,   465,   177,    64,   123,   214,
     378,   630,   108,   184,    71,   654,   200,   765,    75,   238,
      77,   572,   765,   765,   160,   771,   572,   142,   572,   100,
     583,   772,    89,   655,   772,   772,   765,   771,  4224,   258,
     583,   757,   758,   759,   760,   761,   762,   504,   505,   254,
     186,   765,   271,  5155,   197,   385,   731,   765,   771,  5161,
     517,   212,   267,   235,   733,   201,   237,   728,   125,   433,
    1685,   197,   766,   428,   189,   615,    60,  1692,   214,  1694,
    1695,   336,   771,   177,   766,   156,  4272,  5305,   154,   294,
     184,  1706,  1707,   245,  1709,  1710,   364,  5315,    13,   245,
    4286,   156,   370,   199,   772,  4291,  4292,   555,   757,   758,
      12,  3708,  4298,  5295,   766,  3712,   765,   772,  3715,  3716,
     766,   192,  3719,   194,  5321,   766,   766,   765,    43,   766,
     266,   267,   247,   766,  1783,  1784,   355,  5355,  4324,   235,
     765,   212,   765,   237,   404,   260,   217,   456,   404,   160,
     322,    73,   323,    64,   359,   406,   669,   342,   294,   378,
     231,   765,   533,    74,   533,   492,   533,   238,   340,   765,
     533,   439,   533,   263,   378,   246,   263,   615,    89,    94,
     592,   367,   564,    98,    64,   771,  5288,   258,   637,  4042,
     286,   564,   364,   364,    74,   583,   583,  4383,   771,   370,
     271,   451,   378,   373,  1853,   276,   263,  1856,   766,    89,
     378,   766,   212,   765,   285,   765,   285,  4070,   765,   100,
    5322,  5323,   771,  5325,  5326,    12,   765,   363,  5200,   323,
     765,   765,   547,   765,   765,   160,   759,   385,  1853,   354,
    4426,  1856,   357,   231,  4430,  5347,  5348,  5349,  1863,  1864,
     771,   643,  4438,  1868,   282,   765,  1871,   160,   477,  1874,
     197,   766,   771,   766,   766,   722,   766,   258,  1883,   766,
     364,   258,   391,    48,   217,   103,   370,   414,   373,   547,
     765,   417,   193,   765,   355,    21,   765,   247,   199,    62,
    4247,    27,   247,   721,   390,   766,  4482,   766,   755,   756,
     757,   758,   759,   760,   761,   762,    48,   378,   766,   366,
     367,   765,   495,   193,   766,   372,   771,   388,    35,   199,
     435,   378,   688,   688,   235,   771,    48,   766,    64,   765,
     549,   599,   765,  4290,  4520,    71,  4522,  4523,   253,    75,
     160,    77,   228,  3318,   103,  3320,   245,   160,   278,   771,
     111,   772,   263,    89,   111,   235,  1971,   238,   162,   401,
    1975,   418,   630,   765,   765,   765,  4552,   765,  1983,   765,
    1985,   441,   730,   125,   765,   547,   547,   258,  4564,   125,
     766,   757,   384,   263,   583,   404,   566,  4573,   765,   125,
     271,  4577,   564,  4598,   509,   473,   615,   134,   773,   433,
     210,   378,   269,   499,   583,   765,   477,   246,   197,   766,
    2025,   258,  4598,   258,   776,   258,   698,   332,  4604,   771,
     771,  3708,   772,   519,   404,  3712,   373,  5385,  3715,  3716,
     501,   776,  3719,  4619,   776,  4621,   401,   766,   766,   197,
     497,   158,   766,   766,   637,   162,   766,   108,   766,    48,
     277,   404,    48,   547,  2069,  2070,  2071,    48,  3140,   630,
     153,    48,   737,   759,   579,   765,    35,   203,   564,    35,
     566,   626,   730,   569,   355,   609,   125,   263,   549,    64,
     203,   396,   263,  2098,    35,   202,   373,   765,  2103,   373,
     547,   373,   607,   416,  2143,   378,  2111,   378,  2113,   378,
      77,    21,    77,   772,   600,   222,   167,   418,   604,   378,
    2159,   765,  2161,   516,  2163,  2164,   612,  2166,    93,   378,
     634,   401,  3748,    32,   773,  4711,   634,   263,  2143,   197,
     194,   505,   603,    32,   747,   175,   630,   285,   418,   200,
    3515,  3516,    21,   614,   615,  3520,   766,   604,   385,   147,
     210,   566,   258,  4739,  4740,   258,   766,  4514,   654,   134,
     766,   265,   342,   765,   635,  2214,   637,   428,    48,  2218,
     287,   771,  4758,   388,   235,   765,   771,   766,   766,   766,
     771,  4767,  3557,   120,   120,  4438,    48,    48,    48,  3564,
    3565,  3566,   766,   766,  3569,   388,   477,  2246,  2247,  2248,
    2249,   766,  2217,   518,   620,  2220,  2221,    21,   519,   373,
     771,   765,   708,   766,   368,   621,    15,  4793,    21,   511,
     143,   771,    81,   373,    56,   286,   771,   698,  2277,  4482,
     366,   367,   765,   228,    66,  4232,   372,   404,  4824,   519,
     516,  4840,   378,   766,    76,   560,   488,   771,   634,   706,
      32,  2300,   246,  2302,   154,   385,   769,   254,    90,    91,
      92,   263,   769,   772,  4850,    73,   383,   194,   549,    21,
     771,   373,   342,   730,   106,   173,    48,   766,   766,   765,
     319,   738,   418,  4869,    18,    19,   100,   276,   765,   637,
     265,   674,    48,   604,   766,   766,   771,   398,   769,   194,
     771,   154,   419,   249,   769,   776,   230,   769,   292,   637,
     766,   609,   765,   765,  2329,   766,   766,  2332,   765,   765,
     136,   766,   766,   771,   604,   765,   443,   765,   574,   136,
     136,  4949,   765,   158,   615,   378,   538,   766,   473,   771,
     149,   634,   156,    56,  4930,   230,   769,   292,   773,   154,
     124,   468,   769,    66,   415,   748,   769,   292,   654,   420,
      48,   497,  4948,    76,  4950,    48,   484,   679,   343,   535,
     765,  4957,  4958,   692,   692,   692,   555,    90,    91,    92,
     194,   385,   116,   117,   118,   119,   120,   155,    64,  4975,
      64,   366,   367,   106,   369,   512,   484,    54,   212,   575,
     393,   143,   769,   217,  4990,   634,   154,   771,   769,   482,
     766,   547,   703,    19,  5000,   554,   766,   385,   385,   154,
     575,  2436,   215,   769,   238,  2440,   543,   689,  2443,   702,
    2445,  2446,   246,   766,   228,   692,  4793,   746,   499,   484,
    4066,  5027,   465,     6,   258,   689,   563,   378,   378,   566,
     143,    54,   154,   194,   194,   194,   431,   271,   519,   575,
      48,   292,   276,   292,   292,  5051,   171,   130,   604,   609,
     575,   285,   455,   636,  2523,   125,   231,   703,   196,  5065,
     373,  4107,   501,   771,   378,   162,   378,   765,   292,   223,
     224,   225,   226,   699,   292,  5073,   378,  3730,  3185,  3089,
    4522,  3083,   334,   564,  4525,  3085,  5105,  2522,   569,  3080,
    4518,  3087,  3676,  4533,  1681,  4756,  3491,  5131,  5031,   351,
    5269,  2570,  2571,  2572,  1525,  5270,   587,  4758,  5355,  4909,
    5116,  5285,    46,  5119,   802,  2543,  2486,  3771,  4889,   600,
    5311,   355,  5289,  5040,  4889,  4232,  5240,  4771,  4889,  4889,
    5040,   612,  2601,  4566,  4781,  2570,  2571,  2572,   533,  4239,
    4557,  4558,  4782,  4889,   378,  4804,  4889,   628,  5154,  3685,
     706,  4889,  2219,  1032,   388,  4159,  3181,  4011,  2224,  4247,
    2380,  4578,  3964,  3153,  2599,  3158,  4667,  5173,  3152,  4423,
    5190,  5260,  5202,   654,   730,  4864,  5200,  2378,  2309,  4179,
    3147,   335,   738,   337,   338,   339,  4031,  3534,  4032,  4083,
    3569,  3568,   346,  4452,  5212,  3385,  4086,  4949,  4868,  4686,
    4743,   334,  4690,  4698,  4748,  4430,  3708,  2934,  1679,  4058,
    3712,  2944,  3691,  3715,  3716,  3122,  5222,  3719,   351,  2813,
    2655,  2818,  2310,  4499,  2310,  5231,  2309,   708,  1504,  2664,
    2665,   807,  1948,   387,  5240,  3598,   390,   489,  2533,  3050,
    1944,  5260,  1655,   477,   116,   117,   118,   119,   120,  2684,
    2685,  2952,  2687,  2527,  3207,  2690,  2691,  2692,  2693,  2694,
    2517,  1629,  2697,  3790,    62,  1834,   772,   501,  1493,   771,
    1685,  2706,  2123,   427,  2778,  2858,  2711,  2091,  2713,  5180,
    2715,  2716,  3398,  2718,  2719,  4838,  4823,  2553,  2723,  2724,
    2725,  2674,  2332,  1334,  2729,  2730,  2731,  5246,  2733,   551,
    2735,  2553,  2737,  2553,  2739,  5173,  2741,  2553,  5375,  5315,
    5374,  2746,  4623,  1308,  4317,   549,   568,  3619,  4957,   815,
    3846,  4326,  4958,  1278,  4824,  5321,  3264,  2762,  4659,  3592,
    4833,  4685,  2174,  1179,    16,  1719,   490,   491,  2453,   472,
    1018,  1139,  1018,  2778,  2779,  5351,  3206,  4295,  2783,  5355,
    2785,   223,   224,   225,   226,  3206,   489,  1018,  5364,  4776,
    3809,  4778,  5368,  4286,  1015,  1018,  1503,  2632,  4785,   603,
    1897,   801,  2841,  2633,  1807,  1923,  5382,  3013,  4795,  2474,
    3210,   615,  5170,  4800,  3994,  5245,  5393,  5393,  4412,  5382,
    4102,  4291,  4626,  1688,  2868,  4174,  3079,  5165,    43,  1218,
    1856,   635,  2599,   637,  1871,    43,  1216,  1851,  1849,  2520,
      39,   757,  2808,  2392,  2883,  4595,  2851,  1131,   551,  2391,
    4809,   760,  1454,  1178,  1009,  2894,  4219,  2896,  2897,  2898,
    2899,  1681,  2901,  2902,  1681,   568,  1681,  3694,   660,   660,
     660,  4118,  5191,  5116,  4177,  4542,  5119,  3609,    -1,    -1,
    4557,  4558,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   335,   698,   337,   338,   339,    -1,    -1,
      -1,  4578,  4889,    -1,   346,    -1,    -1,    -1,   632,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2961,    -1,   648,   649,   650,  4914,    -1,    -1,
      -1,    -1,    -1,    -1,  2973,    -1,  4552,    -1,  4925,  4926,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4942,    -1,    -1,    -1,    -1,
      -1,   765,   766,    -1,    -1,   769,    -1,   771,    -1,    -1,
      -1,    -1,   776,    -1,  5321,    -1,    -1,    -1,    -1,  5222,
      -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,  4604,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3055,    -1,    -1,  3058,
    3059,    -1,    -1,  3062,  3063,  3064,  3065,  3066,  3067,  3068,
    3069,    -1,    -1,  3072,    -1,  3074,    -1,  3076,  3077,    -1,
      -1,    -1,    -1,    -1,    -1,    21,    -1,    -1,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,  5043,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5052,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5062,    -1,    -1,    -1,  5066,
    5067,  3120,    -1,    -1,    -1,    -1,  5073,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4776,
      -1,  4778,    -1,    -1,    -1,    -1,    -1,    -1,  4785,    -1,
      -1,    -1,    -1,    -1,    -1,  3120,    -1,    -1,  4795,    -1,
      -1,  5364,    -1,  4800,   100,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3140,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5141,    -1,  5143,    -1,    -1,  3164,
    4232,  3166,    -1,  3168,    -1,  3170,    -1,    -1,  5155,    -1,
      -1,    -1,    -1,    -1,  5161,    -1,    -1,    -1,    -1,    -1,
     156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3204,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,   650,    -1,
      -1,    -1,  4889,    -1,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3240,   212,  4914,    -1,  5226,
    5227,   217,  5229,    -1,    -1,    -1,    -1,    -1,  4925,  4926,
      -1,    -1,    -1,    -1,  3293,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   238,    -1,    -1,  4942,    -1,    -1,    -1,    -1,
     246,    -1,    -1,    -1,    -1,  3280,    -1,    -1,    -1,    -1,
      -1,    -1,   258,    -1,    -1,    -1,    -1,    -1,  5275,    -1,
      -1,  5278,    -1,    -1,    -1,   271,    -1,  3302,    -1,    -1,
     276,  5288,    -1,    -1,    -1,  3310,    -1,    27,    28,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5309,  5310,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3338,  3339,  5322,  5323,    -1,  5325,  5326,
      -1,    61,    62,    63,    -1,    -1,  5333,  5334,  5335,    -1,
      -1,    71,  5339,    -1,    -1,    -1,    -1,    77,    -1,  3364,
    5347,  5348,  5349,    83,    84,    -1,  5043,    87,    -1,  3374,
      -1,  3376,    -1,  3378,    -1,  5052,   232,    -1,    -1,   355,
      -1,    -1,    -1,    -1,    -1,  5062,    -1,    -1,    -1,  5066,
    5067,   111,  3431,    -1,    -1,    -1,  5073,    -1,    -1,    -1,
      -1,    -1,   378,    -1,    -1,   125,    -1,    -1,  3447,   129,
      -1,    -1,   388,    -1,    -1,  3420,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3467,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   158,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,    -1,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,   317,   318,    -1,  5141,    -1,  5143,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5155,    -1,
      -1,    -1,    -1,    -1,  5161,  4557,  4558,    -1,    -1,    -1,
      -1,    -1,  3497,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   477,    -1,    -1,    -1,    -1,  4578,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,   501,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,  5226,
    5227,    -1,  5229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   549,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   445,
     446,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5275,    -1,
      -1,  5278,   322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5288,    -1,    -1,    -1,    -1,    -1,    -1,  3657,    -1,
     340,    -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,    -1,
      -1,    -1,  5309,  5310,    -1,    -1,    -1,    -1,    -1,   615,
      -1,    -1,  3681,    -1,    -1,  5322,  5323,    -1,  5325,  5326,
      -1,    -1,    -1,    -1,    -1,    -1,  5333,  5334,  5335,   635,
      -1,   637,  5339,    -1,    -1,    -1,    -1,    -1,   662,    -1,
    5347,  5348,  5349,    -1,    -1,   395,    -1,  3682,  3683,    -1,
      -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3708,  4776,    -1,  4778,  3712,    -1,    -1,
    3715,  3716,    -1,  4785,  3719,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   698,  4795,    -1,    -1,    -1,    -1,  4800,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   732,    -1,
    3745,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3756,    -1,    -1,  3759,    -1,  3761,    -1,    -1,    -1,
      -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     766,    -1,    -1,   769,    -1,   771,    -1,    -1,    -1,    -1,
     776,    -1,    -1,    -1,  3809,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4889,    -1,    -1,
     540,   541,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3843,  3844,
      -1,   835,  4914,    -1,   564,    -1,    -1,   567,    -1,    -1,
      -1,    -1,    -1,  4925,  4926,   711,   712,    -1,    -1,    -1,
      -1,    -1,  3867,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4942,   865,    -1,    -1,    -1,    -1,   732,    -1,   734,   735,
     736,    -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3898,    -1,  3900,    -1,    -1,  3903,  3904,
      -1,  3906,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3917,    -1,    -1,    -1,    -1,  3922,    -1,    -1,
    3925,    -1,    -1,  3928,  3929,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3950,    -1,   941,    -1,    -1,
    3989,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5043,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5052,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5062,    -1,    -1,    -1,  5066,  5067,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   725,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4023,   739,
     740,   741,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4072,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    27,    28,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5141,
      -1,  5143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      63,  1075,    -1,  5155,    -1,    -1,    -1,    -1,    -1,  5161,
      -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4125,  4126,    -1,    -1,  4163,  4164,  4165,  4166,   111,    -1,
      -1,    -1,    -1,    -1,    -1,  4174,    -1,    -1,    -1,    -1,
      -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,
      -1,    -1,  4157,  4158,  5226,  5227,    -1,  5229,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1189,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5275,    -1,    -1,  5278,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4219,    -1,  5288,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4229,    -1,    -1,  4232,  1222,    -1,
      -1,    -1,  4237,    -1,    -1,    -1,  4241,  5309,  5310,  4244,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4253,    -1,
    5322,  5323,   235,  5325,  5326,    -1,    -1,    -1,    -1,   242,
    4299,  5333,  5334,  5335,    -1,    -1,    -1,  5339,    -1,    -1,
      -1,    -1,  4277,    -1,    -1,  5347,  5348,  5349,    -1,   262,
      -1,    -1,  4287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1293,
    1294,    -1,    -1,  4308,    -1,  4310,    -1,    -1,  1302,  1303,
      -1,    -1,  1306,  1307,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1315,  1316,    -1,  1318,  1319,    -1,    -1,    -1,  1323,
      -1,    -1,    -1,  1327,  1328,  1329,  1330,    -1,  1332,   322,
      -1,    -1,    -1,    -1,    -1,    -1,  1340,  1341,    -1,  1343,
    1344,    -1,  4391,    -1,    -1,  1349,    -1,   340,  1352,  1353,
    1354,  1355,  1356,  1357,    -1,  1359,    -1,    -1,  1362,  1363,
      -1,    -1,    -1,  1367,    -1,    -1,    -1,  1371,  1372,  1373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1384,  1385,  1386,    -1,    -1,    -1,    -1,    -1,  1392,  1393,
    1394,  1395,  1396,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,    -1,    -1,    -1,  1410,    -1,    -1,    -1,
      -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1430,    -1,  1432,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4512,    -1,  1529,    -1,  1531,  1532,    -1,
      -1,  1475,    -1,    -1,    -1,    -1,  4525,    -1,    -1,    -1,
      -1,  4496,  1546,    -1,    -1,  1549,  1550,    -1,  1552,    -1,
     483,  1555,  1556,  1557,  1558,    -1,    -1,    -1,  1562,    -1,
      -1,  4550,    -1,  1567,    -1,    -1,    -1,    -1,  1572,  1573,
    1574,  1575,  1576,    -1,    -1,    -1,  1580,  1581,    -1,    -1,
      -1,    -1,  1586,  1587,  1588,  1589,    -1,  1591,  1592,    -1,
    1594,    -1,    -1,  1597,    -1,    -1,    -1,    -1,  4553,    -1,
      -1,  4556,  4557,  4558,    -1,    -1,    -1,   540,   541,   542,
      -1,  4566,    -1,    -1,   547,    -1,    -1,  4572,    -1,    -1,
      -1,    -1,    -1,  4578,    -1,  4580,  4581,    -1,    -1,    -1,
      -1,   564,    -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     603,  4626,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4643,    -1,
      -1,  4646,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4659,    -1,  4695,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1685,    -1,    -1,    -1,    -1,    -1,    -1,  1692,    -1,
    1694,  1695,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4755,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   725,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   739,   740,   741,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4774,
      -1,  4776,    -1,  4778,  4779,    -1,    -1,    -1,    -1,    -1,
    4785,    -1,  4787,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4795,    -1,    -1,    -1,    -1,  4800,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4833,    -1,
      -1,    -1,    -1,    -1,    -1,  4840,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1864,    -1,    -1,    -1,  1868,    -1,    -1,    -1,    -1,  4884,
      -1,    -1,    -1,    -1,  4889,    -1,    -1,    -1,    -1,  1883,
    4895,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4913,  4914,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4925,  4926,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4942,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4984,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4967,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1971,    -1,    -1,
      -1,  1975,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1985,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5007,    -1,    14,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5073,    -1,    -1,    -1,  5043,    -1,
      50,    51,    -1,    -1,  5049,    -1,    -1,  5052,    58,    -1,
      -1,    -1,    -1,    63,    64,    -1,    -1,  5062,    -1,    -1,
      -1,  5066,  5067,    -1,    -1,  5070,  5071,    -1,  5073,    79,
      -1,  5110,  5111,    -1,    -1,  2069,  2070,  2071,    -1,    -1,
    5085,  2135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2103,
      -1,   121,    -1,    -1,    -1,    -1,    -1,  2111,    -1,  2113,
    5125,   131,   132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5136,  5171,   143,   144,    -1,  5141,    -1,  5143,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,    -1,    -1,
    5155,    -1,    -1,    -1,    -1,    -1,  5161,    -1,    -1,    -1,
     170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2251,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,   218,    -1,
      -1,    -1,    -1,  2267,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5226,  5227,   233,  5229,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2304,  2305,    -1,    -1,   264,  5260,    -1,    -1,  2312,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5271,  5272,    -1,    -1,
    5275,   281,    -1,  5278,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5288,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5309,  5310,    -1,    -1,    -1,    -1,
      -1,  5316,    -1,    -1,    -1,    -1,    -1,  5322,  5323,    -1,
    5325,  5326,    -1,    -1,    -1,    -1,    -1,    -1,  5333,  5334,
    5335,  5370,    -1,    -1,  5339,  2329,    -1,    -1,    -1,  2393,
      -1,    -1,  5347,  5348,  5349,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5394,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   415,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    14,    -1,   426,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,   448,    -1,
      -1,   451,  2436,   453,    -1,    -1,   456,    -1,    -1,    -1,
      50,    51,    -1,    -1,    -1,    -1,   466,   467,    58,    -1,
      -1,    -1,    -1,    63,    64,    -1,   476,    -1,   478,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,    79,
      -1,    -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   501,    -1,    -1,    -1,    -1,   506,   507,   508,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,  2522,   539,
      -1,   131,   132,    -1,    -1,    -1,   546,    -1,    -1,    21,
      -1,    -1,    -1,   143,   144,    27,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     590,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,   602,    -1,    -1,    77,   606,    -1,    -1,    -1,
      -1,    83,    84,    -1,   614,    87,    -1,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,   215,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,   111,
      -1,    -1,    -1,   233,    -1,   645,    -1,    -1,    -1,    -1,
      -1,   241,    -1,   125,   244,    -1,    -1,   129,    -1,    -1,
      -1,   661,   662,   663,   664,    -1,    -1,    -1,    -1,    -1,
      -1,  2655,    -1,    -1,   264,    -1,   676,    -1,    -1,    -1,
    2664,  2665,    -1,    -1,   156,    -1,   158,    -1,    -1,    -1,
      -1,   281,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
    2684,  2685,    -1,  2687,    -1,    -1,  2690,  2691,  2692,  2693,
    2694,    -1,    -1,   713,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2706,    -1,    -1,    -1,    -1,  2711,    -1,  2713,
      -1,  2715,  2716,    -1,  2718,    -1,    -1,    -1,    -1,  2723,
    2724,  2725,    -1,    -1,   744,  2729,  2730,  2731,    -1,  2733,
      -1,  2735,    -1,  2737,    -1,  2739,    -1,  2741,    -1,   231,
      -1,    -1,  2746,   235,    -1,   765,    -1,    -1,    -1,    -1,
     242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     262,    -1,   382,    -1,  2778,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   275,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   415,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   426,    -1,  2882,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   448,    -1,
      -1,   451,    -1,   453,    -1,    -1,   456,  2851,   340,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,   467,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,   478,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,    21,    -1,
      -1,    -1,    -1,   493,    27,    28,    -1,    -1,    -1,    -1,
      -1,   501,    -1,    -1,    -1,    -1,   506,   507,   508,    -1,
      -1,    -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,   401,
      -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,
      -1,    -1,    -1,    -1,    77,    -1,   546,    -1,    -1,    -1,
      83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   456,    -1,    -1,    -1,   111,    -1,
    3034,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     590,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    34,
      35,   483,   602,    -1,    -1,    40,   606,    42,    -1,    44,
      45,   493,    -1,    -1,   614,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   156,    -1,   158,    -1,    62,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   645,  3100,  3101,  3102,  3103,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   540,   541,
     542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   676,   112,    -1,    -1,
     115,    -1,   564,    -1,    -1,   567,    -1,    -1,   123,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,   142,    -1,   242,
      -1,    -1,    -1,   713,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   603,    -1,    -1,   159,    -1,    -1,    -1,    -1,   262,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   744,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   187,    -1,   189,   637,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   765,    -1,    -1,    -1,    -1,
     205,   206,    -1,    -1,    -1,    -1,  3170,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,
    3204,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   725,   279,    -1,  3240,    -1,    -1,    -1,
      -1,    -1,    -1,   288,   289,    -1,   291,   739,   740,   741,
      -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,   401,    -1,
      -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   765,    -1,    -1,  3280,   769,    -1,    -1,
      -1,    -1,    -1,   328,   329,   330,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3302,    -1,
      -1,    -1,   347,   348,   349,    -1,  3310,    -1,    -1,   354,
      -1,    -1,   357,   456,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,
     375,   376,    -1,    -1,  3338,  3339,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3364,    -1,    -1,    -1,   409,   410,    -1,    -1,    -1,    -1,
    3374,    -1,  3376,    -1,  3378,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     435,    -1,    -1,    -1,    -1,    -1,    -1,   540,   541,   542,
      -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   564,     7,    -1,   567,    -1,    -1,    12,    -1,    14,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   497,    -1,    -1,    -1,   501,    -1,    -1,    -1,
     603,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    61,    62,    63,    64,
      -1,    -1,    -1,    -1,    69,    -1,    71,    -1,    -1,    -1,
      -1,    -1,    77,  3497,   637,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,   573,    -1,
      -1,   576,    -1,    -1,   579,   580,   581,   582,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,    -1,   158,    -1,    -1,    -1,   622,   623,    -1,
      -1,    -1,   725,    -1,   169,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   739,   740,   741,    -1,
    3664,  3665,    -1,    -1,    -1,   650,    -1,   192,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   765,    -1,    -1,    -1,   769,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,    14,
      -1,    -1,    17,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,    -1,   749,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,    64,
      -1,    -1,    -1,    -1,    69,    -1,   771,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,   322,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,   340,    -1,    -1,    -1,   344,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,    -1,    -1,    -1,   382,    -1,   144,
      -1,    -1,    -1,   388,    -1,  3809,    -1,   152,    -1,    -1,
     395,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,   404,
      -1,    -1,    -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3843,
    3844,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,
      -1,   436,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3867,    -1,    -1,   451,   452,   453,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
     235,    -1,    -1,    -1,  3898,    -1,  3900,   242,   483,  3903,
    3904,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3917,    -1,    -1,    -1,   262,  3922,    -1,
      -1,  3925,    -1,    -1,  3928,  3929,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,    -1,    -1,     7,  3950,    -1,    -1,    -1,
      12,    -1,    14,    -1,    -1,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    27,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,    -1,   564,
      -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   340,    58,    -1,    -1,   344,
      -1,    63,    -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,   603,  4023,
      -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    96,    -1,    -1,   382,    -1,    -1,
      -1,    -1,    -1,   388,    -1,    -1,    -1,    -1,    -1,   111,
     395,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,   404,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   137,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     152,   436,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,   452,   453,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4125,  4126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
     725,   726,   727,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   739,   740,   741,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,
     242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,    -1,
     262,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      34,    35,   567,   285,    -1,  4229,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   590,    -1,    -1,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,
     322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4277,    -1,    -1,    -1,    -1,   340,    -1,
      -1,    -1,   344,  4287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   637,    -1,    -1,   640,    -1,    -1,   112,    -1,
      -1,   115,    -1,    -1,  4308,    -1,  4310,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   388,    -1,   142,    -1,
      -1,    -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   404,    -1,    -1,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,    -1,
     725,   726,   727,    -1,    -1,    -1,    -1,    -1,    -1,   451,
      -1,   205,   206,    -1,   739,   740,   741,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    34,    35,    -1,    -1,    -1,    -1,    40,    -1,
      42,   483,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,
      62,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4467,    -1,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,   289,    -1,   291,   540,   541,
     542,    -1,    -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,
     112,    -1,  4496,   115,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   123,   564,    -1,    -1,   567,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   328,   329,   330,    -1,    -1,    -1,
     142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   347,   348,   349,    -1,   159,    -1,    -1,
     354,   603,    -1,   357,    -1,    -1,    -1,    -1,    -1,  4553,
      -1,    -1,  4556,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     374,   375,   376,    -1,    -1,   187,    -1,   189,  4572,    -1,
      -1,    -1,   194,    -1,    -1,   637,  4580,  4581,   640,    -1,
      -1,    -1,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   409,   410,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   435,  4626,    -1,    -1,   247,    -1,    -1,    -1,    -1,
      -1,    -1,  4696,    -1,    -1,    -1,    -1,    -1,   260,  4643,
      -1,    -1,  4646,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4659,    -1,   279,    -1,    -1,
      -1,    -1,    -1,   725,    -1,    -1,   288,   289,    -1,   291,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   739,   740,   741,
      -1,    -1,    -1,   497,    -1,    -1,    -1,   501,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   513,
      -1,    -1,    -1,    -1,    -1,    -1,   328,   329,   330,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   347,   348,   349,    -1,    -1,
      -1,    -1,   354,    -1,    -1,   357,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   374,   375,   376,    -1,    -1,    -1,    -1,   573,
      -1,    -1,   576,    -1,    -1,   579,   580,   581,   582,    -1,
    4774,    -1,    -1,    -1,    -1,  4779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4787,    -1,    -1,    -1,   409,   410,    -1,
      -1,    -1,  4856,    -1,    -1,  4859,  4860,  4861,  4862,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   622,   623,
      -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4833,
      -1,    -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,   501,
    4884,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   513,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4913,
      -1,    -1,  4976,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4985,  4986,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4994,    -1,    -1,    -1,    -1,   749,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   573,    -1,    -1,   576,    -1,    -1,   579,   580,   581,
     582,    -1,    -1,  4967,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     622,   623,    -1,  5007,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5049,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5070,  5071,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5085,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5125,    -1,    -1,    -1,    -1,    -1,   749,    -1,    -1,
      -1,    -1,  5136,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,  5271,  5272,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,  5316,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
    5394,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,   752,   753,    -1,    -1,    -1,   757,   758,
      -1,    -1,    -1,    -1,   763,    -1,   765,    -1,    -1,    -1,
      -1,   770,    -1,    -1,    -1,   774,   775,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    46,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
     268,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,    -1,
      -1,    -1,   750,   751,   752,   753,    -1,    -1,    -1,   757,
     758,    -1,    -1,    -1,    -1,   763,    -1,   765,    -1,    -1,
      -1,    -1,   770,    -1,    -1,    -1,   774,   775,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,   493,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
     637,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,   752,   753,    -1,    -1,    -1,
     757,   758,    -1,    -1,    -1,    -1,   763,    -1,   765,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,   774,   775,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,    -1,    -1,    -1,   750,   751,   752,   753,    -1,    -1,
      -1,   757,   758,   759,    -1,    -1,    -1,   763,    -1,   765,
      -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,   774,   775,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,   752,   753,    -1,
      -1,    -1,   757,   758,   759,    -1,    -1,    -1,   763,    -1,
     765,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,   774,
     775,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,    -1,    -1,    -1,   750,   751,   752,   753,
      -1,    -1,    -1,   757,   758,    -1,    -1,    -1,    -1,   763,
      -1,   765,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,
     774,   775,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,   752,
     753,    -1,    -1,    -1,   757,   758,    -1,    -1,    -1,    -1,
     763,    -1,   765,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,   774,   775,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,
     752,   753,    -1,    -1,    -1,   757,   758,    -1,    -1,    -1,
      -1,   763,    -1,   765,    -1,    -1,    -1,    -1,   770,    -1,
      -1,    -1,   774,   775,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,   752,   753,    -1,    -1,    -1,   757,   758,    -1,    -1,
      -1,    -1,   763,    -1,   765,    -1,    -1,    -1,    -1,   770,
      -1,    -1,    -1,   774,   775,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,
     750,   751,   752,   753,    -1,    -1,    -1,   757,   758,    -1,
      -1,    -1,    -1,   763,    -1,   765,    -1,    -1,    -1,    -1,
     770,    -1,    -1,    -1,   774,   775,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,   752,   753,    -1,    -1,    -1,   757,   758,
      -1,    -1,    -1,    -1,   763,    -1,   765,    -1,    -1,    -1,
      -1,   770,    -1,    -1,    -1,   774,   775,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,    -1,
      -1,    -1,   750,   751,   752,   753,    -1,    -1,    -1,   757,
     758,    -1,    -1,    -1,    -1,   763,    -1,   765,    -1,    -1,
      -1,    -1,   770,    -1,    -1,    -1,   774,   775,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,   752,   753,    -1,    -1,    -1,
     757,   758,    -1,    -1,    -1,    -1,   763,    -1,   765,    -1,
      -1,    -1,    -1,   770,    -1,    -1,    -1,   774,   775,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,    -1,    -1,    -1,   750,   751,   752,   753,    -1,    -1,
      -1,   757,   758,    -1,    -1,    -1,    -1,   763,    -1,   765,
      -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,   774,   775,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,   752,   753,    -1,
      -1,    -1,   757,   758,    -1,    -1,    -1,    -1,   763,    -1,
     765,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,   774,
     775,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,    -1,    -1,    -1,   750,   751,   752,   753,
      -1,    -1,    -1,   757,   758,    -1,    -1,    -1,    -1,   763,
      -1,   765,    -1,    -1,    -1,    -1,   770,    -1,    -1,    -1,
     774,   775,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,   752,
     753,    -1,    -1,    -1,   757,   758,    -1,    -1,    -1,    -1,
     763,    -1,   765,    -1,    -1,    -1,    -1,   770,    -1,    -1,
      -1,   774,   775,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,
     752,   753,    -1,    -1,    -1,   757,   758,    -1,    -1,    -1,
      -1,   763,    -1,   765,    -1,    -1,    -1,    -1,   770,    -1,
      -1,    -1,   774,   775,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,   493,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,   765,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,   775,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,   145,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,
     750,   751,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,   765,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,   775,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,    -1,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,   765,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,   775,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,    -1,
     738,   739,   740,   741,   742,   743,    -1,   745,    -1,    -1,
      -1,    -1,    -1,   751,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,   771,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   770,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   770,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   770,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   770,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   770,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   770,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   770,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   770,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,   766,
      -1,    20,    -1,   770,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   770,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   770,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,   765,   766,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     766,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   766,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,   275,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,   519,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   765,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     765,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,    -1,
      -1,    -1,   750,   751,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,   765,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,   765,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,   765,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,   765,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,
     750,   751,    -1,    -1,    -1,    -1,    -1,     5,     6,   759,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,    -1,
      -1,    -1,   750,   751,    -1,    -1,    -1,    -1,    -1,     5,
       6,   759,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,    -1,    -1,    -1,   750,   751,    -1,    -1,    -1,    -1,
      -1,     5,     6,   759,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,    -1,    -1,    -1,   750,   751,    -1,    -1,
      -1,    -1,    -1,     5,     6,   759,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,
      -1,    -1,    -1,    -1,    -1,     5,     6,   759,     8,     9,
      10,    11,    12,    13,    14,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    99,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
     130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
     210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,   285,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,   441,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,   493,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,   506,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,   587,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,   609,
     610,   611,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,    -1,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,
     750,   751,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,   210,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,   506,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    14,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,   285,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,   441,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,   493,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,   506,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,   587,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
     609,   610,   611,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,    -1,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,    -1,   369,   370,    -1,
      -1,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,   521,
     522,   523,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,   594,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    18,    19,    20,    21,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,   387,    -1,    -1,   390,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,   648,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,   502,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,    -1,
      -1,    -1,   750,   751,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,   519,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,   594,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,
     750,   751,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,   372,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,    -1,
      -1,    -1,   750,   751,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,   372,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    95,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,
     750,   751,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,   522,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,   660,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,    -1,
      -1,    -1,   750,   751,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,   418,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,
     750,   751,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,    -1,    -1,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,    -1,    -1,
      -1,   750,   751,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,    -1,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,    -1,    -1,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,    -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
      -1,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,    -1,
      -1,    -1,   750,   751,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
      -1,   422,   423,   424,    -1,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,    -1,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,    -1,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
      -1,    -1,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,   750,
     751,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
      -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,    -1,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,    -1,    -1,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
      -1,    -1,    -1,   750,   751,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,    -1,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,    -1,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,    -1,    -1,    -1,
     750,   751,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,
     423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,    -1,   450,    -1,   452,
     453,   454,    -1,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,    -1,    -1,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,    -1,    -1,   750,   751,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,   124,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,   151,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,   194,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,   504,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,    -1,   738,   739,   740,   741,   742,   743,    -1,   745,
      -1,    -1,    -1,     5,     6,   751,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,   124,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,   194,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,   504,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,    -1,   738,   739,   740,   741,
     742,   743,    -1,   745,    -1,    -1,   748,     5,     6,   751,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,   124,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,   172,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,   194,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,   504,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,    -1,
     738,   739,   740,   741,   742,   743,    -1,   745,    -1,    -1,
      -1,     5,     6,   751,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
     124,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
     194,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
     504,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,    -1,   738,   739,   740,   741,   742,   743,
      -1,   745,    -1,    -1,    -1,     5,     6,   751,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
     150,   151,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,    -1,   738,   739,
     740,   741,   742,   743,    -1,   745,    -1,    -1,    -1,     5,
       6,   751,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,   634,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,    -1,   738,   739,   740,   741,   742,   743,    -1,   745,
      -1,    -1,    -1,     5,     6,   751,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,   124,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,   194,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,   504,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,    -1,   738,   739,   740,   741,
     742,   743,    -1,   745,    -1,    -1,    -1,     5,     6,   751,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,   634,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,    -1,
     738,   739,   740,   741,   742,   743,    -1,   745,    -1,    -1,
      -1,     5,     6,   751,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
     124,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,   172,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
     194,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
     504,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,    -1,   738,   739,   740,   741,   742,   743,
      -1,   745,    -1,    -1,    -1,     5,     6,   751,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,   124,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,   172,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,   194,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,   504,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,    -1,   738,   739,
     740,   741,   742,   743,    -1,   745,    -1,    -1,    -1,     5,
       6,   751,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,   124,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,   172,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,   194,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,   504,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,    -1,   738,   739,   740,   741,   742,   743,    -1,   745,
      -1,    -1,    -1,     5,     6,   751,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,   124,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
     172,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,   194,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,   504,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,    -1,   738,   739,   740,   741,
     742,   743,    -1,   745,    -1,    -1,    -1,     5,     6,   751,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,    -1,
     738,   739,   740,   741,   742,   743,    -1,   745,    -1,    -1,
      -1,     5,     6,   751,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,    -1,   738,   739,   740,   741,   742,   743,
      -1,   745,    -1,    -1,    -1,     5,     6,   751,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,    -1,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,    -1,   738,   739,
     740,   741,   742,   743,    -1,   745,    -1,    -1,    -1,     5,
       6,   751,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,    -1,    -1,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,    -1,   738,   739,   740,   741,   742,   743,    -1,   745,
      -1,    -1,    -1,     5,     6,   751,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,    -1,
      -1,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,    -1,   738,   739,   740,   741,
     742,   743,    -1,   745,    -1,    -1,    -1,     5,     6,   751,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,    -1,    -1,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,    -1,
     738,   739,   740,   741,   742,   743,    -1,   745,    -1,    -1,
      -1,     5,     6,   751,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,    -1,    -1,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,    -1,   738,   739,   740,   741,   742,   743,
      -1,   745,    -1,    -1,    -1,     5,     6,   751,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      35,    36,    -1,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,    -1,   738,   739,
     740,   741,   742,   743,    -1,   745,    61,    62,    -1,    -1,
      -1,   751,    -1,    -1,    -1,    -1,    -1,    72,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    97,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   157,   158,    -1,    -1,    -1,    -1,   163,    -1,
      -1,   166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   198,    -1,   200,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   316,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   408,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   419,   420,    -1,   422,   423,   424,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   444,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   498,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   543,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,
      -1,   566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   624,
      -1,    -1,    -1,    -1,    -1,    -1,   631,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   742,   743
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   590,
     602,   606,   614,   637,   645,   661,   662,   663,   664,   676,
     713,   744,   765,   778,   779,   782,   783,   784,   785,   786,
     788,   790,   794,   796,   819,   820,   821,   822,   824,   827,
     849,   876,   883,   884,  1166,  1167,  1169,  1171,  1173,  1176,
    1178,  1179,  1180,  1181,  1182,  1184,  1185,  1219,  1220,  1222,
    1225,  1239,  1241,  1245,  1248,  1249,  1253,  1255,  1256,  1261,
    1265,  1271,  1272,  1273,  1274,  1275,  1276,  1277,  1407,  1440,
    1442,  1443,  1444,  1445,  1446,  1447,  1448,  1449,  1450,  1451,
    1452,  1453,  1454,  1455,  1456,  1457,  1465,  1466,  1484,  1485,
    1489,  1493,  1500,  1516,  1517,  1519,  1522,  1531,  1540,  1544,
    1546,  1547,  1614,  1616,  1618,  1640,  1646,  1648,  1649,  1650,
    1652,  1656,  1658,  1684,  1690,  1691,  1692,  1693,  1736,  1743,
    1744,  1746,  1747,    12,   108,   127,   200,   243,   286,   420,
     499,   564,   566,   600,   612,   708,  1703,  1704,  1705,  1706,
     282,   371,  1254,  1685,   572,  1588,   235,     5,     6,     8,
       9,    10,    11,    12,    15,    20,    23,    25,    26,    27,
      28,    29,    30,    32,    36,    40,    43,    44,    45,    47,
      49,    50,    53,    56,    57,    59,    60,    61,    63,    65,
      66,    67,    68,    69,    70,    72,    73,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    87,    88,
      90,    91,    92,    93,    94,    98,   103,   106,   110,   111,
     112,   115,   120,   121,   126,   127,   129,   135,   136,   137,
     138,   139,   143,   146,   147,   148,   152,   154,   155,   157,
     158,   159,   162,   163,   165,   166,   167,   168,   169,   170,
     173,   174,   175,   176,   177,   180,   181,   183,   184,   185,
     186,   187,   190,   191,   195,   196,   198,   202,   204,   205,
     206,   207,   209,   211,   215,   216,   218,   221,   222,   226,
     227,   228,   229,   232,   233,   234,   237,   242,   243,   244,
     248,   252,   253,   255,   256,   260,   262,   265,   266,   269,
     272,   273,   279,   280,   282,   284,   286,   287,   295,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   316,   317,   318,
     320,   321,   322,   323,   325,   326,   331,   332,   333,   334,
     335,   336,   339,   340,   342,   344,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   357,   358,   361,   362,   363,
     364,   365,   369,   370,   374,   376,   377,   379,   380,   381,
     384,   394,   395,   396,   398,   400,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   413,   415,   416,   417,
     419,   421,   422,   423,   424,   425,   427,   428,   429,   432,
     436,   437,   439,   440,   443,   444,   445,   446,   447,   449,
     450,   452,   453,   454,   457,   458,   459,   460,   461,   462,
     463,   464,   466,   468,   469,   471,   472,   473,   475,   478,
     479,   480,   481,   483,   485,   486,   487,   488,   489,   491,
     492,   496,   497,   498,   499,   503,   507,   509,   510,   511,
     512,   514,   515,   516,   517,   518,   524,   525,   526,   528,
     531,   534,   536,   538,   539,   540,   541,   542,   543,   546,
     547,   550,   551,   552,   553,   554,   555,   558,   559,   560,
     561,   563,   564,   567,   568,   569,   570,   573,   574,   576,
     577,   578,   579,   585,   586,   590,   591,   592,   595,   596,
     598,   599,   601,   602,   605,   608,   610,   612,   613,   619,
     621,   624,   628,   630,   631,   632,   633,   640,   641,   642,
     644,   645,   646,   647,   650,   653,   654,   655,   656,   657,
     659,   668,   669,   670,   672,   673,   674,   676,   679,   681,
     688,   689,   692,   694,   696,   697,   701,   702,   703,   704,
     705,   706,   707,   708,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   750,   751,   843,
    1585,  1594,  1605,  1606,  1607,  1609,  1610,  1613,   316,   457,
     563,   566,  1642,  1642,   641,  1686,   108,   199,   286,   390,
     499,   519,   564,   569,   600,   604,   612,   654,   708,  1143,
    1401,  1461,  1441,   108,   167,   200,   235,   286,   420,   499,
     519,   564,   587,   600,   612,   628,   654,   708,  1461,   750,
    1594,  1254,   103,   536,   885,    13,    14,    99,   130,   144,
     167,   170,   183,   210,   235,   241,   274,   285,   421,   425,
     441,   449,   457,   493,   506,   507,   558,   587,   609,   611,
    1585,  1588,  1595,  1600,  1607,  1610,  1611,  1613,  1662,  1663,
    1583,  1594,   795,   566,   128,   220,   293,  1467,   407,   659,
      87,   428,  1545,   111,   235,   647,  1548,   243,  1642,  1254,
    1594,  1541,   487,   612,  1642,  1254,   128,   293,  1468,  1488,
     653,  1532,   522,   873,   877,   878,  1594,    13,   425,  1662,
    1686,  1594,    13,   140,   220,   527,   528,   530,   531,   532,
     549,  1282,  1283,  1284,  1698,    61,    62,   125,   209,   282,
     352,   404,   498,   585,   653,   654,   672,   708,   770,  1118,
    1585,  1598,  1606,  1607,  1609,  1610,  1612,  1615,  1625,  1630,
    1631,  1501,   877,   204,   511,   585,   204,   511,   566,  1495,
     407,   659,   243,  1647,  1594,   660,  1408,  1409,  1594,    32,
      79,   154,   415,   437,   478,   539,  1739,     8,    23,    29,
      35,    37,    38,    39,    41,    54,    55,    61,    62,    69,
      72,    96,    97,   102,   104,   107,   108,   113,   114,   115,
     120,   122,   125,   171,   178,   179,   188,   195,   205,   207,
     213,   219,   226,   230,   241,   245,   271,   279,   290,   319,
     324,   335,   339,   341,   345,   346,   347,   348,   349,   356,
     366,   368,   372,   373,   397,   409,   410,   412,   427,   455,
     456,   475,   477,   484,   485,   491,   544,   545,   552,   556,
     557,   562,   572,   576,   577,   578,   579,   588,   589,   590,
     594,   597,   612,   616,   617,   618,   620,   625,   627,   632,
     633,   650,   665,   666,   671,   677,   678,   680,   683,   684,
     685,   686,   687,   691,   693,   695,   752,   753,   757,   758,
     763,   765,   770,   774,   775,  1116,  1275,  1300,  1304,  1307,
    1309,  1310,  1311,  1312,  1313,  1320,  1321,  1322,  1343,  1344,
    1569,  1571,  1573,  1574,  1575,  1580,  1582,  1585,  1594,  1695,
    1697,  1585,   401,  1037,   765,  1696,  1697,   243,   282,   566,
    1272,  1273,  1275,  1407,     0,   156,   780,   415,   104,   274,
     612,  1192,  1588,  1594,  1599,  1601,  1602,  1674,  1676,   608,
    1223,  1237,   246,  1438,   388,   603,  1420,  1421,   276,   603,
    1421,  1426,  1274,  1275,   130,   609,    17,   195,  1520,  1583,
    1594,   160,  1196,  1594,   160,   843,   449,   480,  1651,   212,
     843,  1599,  1594,  1583,   564,   230,  1460,   212,   167,  1175,
    1703,  1642,  1686,  1262,  1263,  1583,   765,   850,   772,   583,
     185,  1458,  1583,  1458,    19,  1687,   230,  1066,   235,   212,
     456,  1599,   235,   717,  1594,   564,  1066,  1066,   212,   235,
    1700,  1704,  1705,  1706,   566,   367,   759,  1292,  1293,  1296,
    1297,  1298,  1300,  1577,  1594,  1460,  1460,  1460,  1594,   212,
    1460,  1460,   717,  1594,  1460,   564,  1460,  1460,  1460,   212,
    1642,  1307,   789,  1523,   135,   419,  1661,   481,   481,   564,
     569,   612,   628,   654,   654,   385,   765,  1677,   563,   378,
    1677,    67,   511,  1677,   109,   628,  1677,   770,  1677,   378,
     583,   771,   381,    68,   433,   772,  1599,   197,   231,  1215,
    1594,  1588,  1745,  1296,   246,    85,   293,  1550,   194,  1641,
    1642,   197,    35,   316,  1506,  1542,  1594,  1258,  1602,  1257,
    1642,   246,  1469,  1460,  1534,   316,   511,  1533,  1535,   621,
     874,   501,   879,  1661,   378,   197,   378,   583,  1687,  1292,
    1284,   501,   654,   772,    35,   125,   160,   502,  1119,  1477,
    1599,   194,   583,  1477,   255,   433,  1632,  1633,  1635,  1637,
      13,   125,   365,  1600,  1603,  1670,   212,   770,  1599,    35,
     125,  1121,  1122,  1599,   772,   125,   585,  1621,  1629,  1631,
     771,  1622,  1477,    36,    61,    72,    97,    99,   109,   158,
     163,   166,   176,   198,   200,   209,   211,   282,   316,   381,
     408,   419,   420,   423,   424,   444,   498,   511,   547,   566,
     631,   742,   743,  1118,  1502,  1506,  1507,  1509,  1510,  1511,
    1626,   879,   447,   534,  1234,  1235,  1236,   433,   637,  1226,
    1227,  1228,  1234,  1583,  1594,  1745,  1642,  1408,   771,   765,
    1410,    37,   219,   572,  1570,  1589,  1738,  1738,  1738,    96,
    1737,  1738,  1738,   765,   765,   765,  1307,   765,   765,   765,
    1296,  1358,   765,   765,   765,   765,   765,   765,   765,   765,
    1295,  1295,   765,  1104,   765,   765,   765,   572,   765,   765,
     765,  1696,   765,   765,   765,   765,   765,   765,   765,   765,
     765,  1296,   765,   765,   765,  1356,  1357,  1580,  1594,   765,
     765,   765,   765,   765,   765,   765,   765,   765,  1104,   765,
     765,   765,   765,   765,   765,   765,   765,   765,   765,   765,
     765,   765,   765,   765,   765,  1104,   572,   765,   765,   765,
     572,   765,   765,   765,    37,   219,   572,   765,  1295,  1104,
    1104,   765,   765,   765,   765,   765,   765,   765,   765,   765,
     765,   765,   765,   765,   765,   765,   765,   765,   765,   765,
     765,  1307,  1307,  1307,  1273,  1275,  1296,   770,  1345,  1599,
    1594,   141,   156,   345,   504,   505,   755,   756,   757,   758,
     759,   760,   761,   762,  1307,    71,   389,  1589,   259,   652,
     765,   772,   765,    48,   156,   156,   197,   111,   197,   766,
     766,   766,   769,  1594,  1295,   765,   138,   228,   770,   125,
     138,   228,  1672,   465,   771,  1679,   300,   301,   445,   446,
     524,   525,   526,   817,  1238,   612,  1229,  1230,   146,   392,
     770,  1436,  1437,  1439,  1599,    48,    13,   140,  1694,  1425,
    1426,   290,   373,   594,  1427,  1428,  1571,  1594,  1694,  1425,
     194,   285,  1285,  1286,  1287,  1420,  1285,  1421,  1426,   231,
     293,   429,  1491,  1492,  1488,   160,   194,  1271,  1465,  1466,
    1484,  1489,  1518,  1521,  1570,  1594,   333,   570,   596,  1168,
    1602,  1172,  1594,  1599,  1594,  1170,   384,     7,    26,    84,
     144,   237,   323,   370,   451,   630,  1006,  1007,  1020,  1021,
    1022,  1028,  1030,  1031,  1507,     7,    12,    14,    17,    27,
      28,    58,    63,    64,    69,    77,    83,    84,    87,    96,
     111,   125,   129,   137,   138,   144,   152,   158,   169,   192,
     233,   235,   242,   262,   285,   322,   340,   344,   382,   388,
     395,   404,   436,   451,   452,   453,   483,   540,   541,   542,
     547,   564,   567,   590,   603,   637,   640,   725,   726,   727,
     739,   740,   741,  1067,  1070,  1072,  1073,  1125,  1197,  1198,
    1200,  1201,  1203,  1205,  1206,  1207,  1208,  1210,  1212,  1594,
     171,  1594,   843,   533,  1707,  1708,  1174,  1458,   249,   771,
     235,   263,   401,  1140,  1268,  1269,  1296,  1352,  1353,  1354,
    1594,   797,   798,   176,   429,   771,  1240,    59,   176,   180,
     194,   331,   429,  1250,  1251,  1252,    57,   369,   369,   448,
    1688,   366,   367,  1303,  1594,  1594,  1594,   519,   193,  1594,
     709,     7,  1000,  1594,  1602,  1673,  1675,  1670,  1594,  1594,
    1699,  1699,  1703,  1066,  1296,   771,    18,    19,    21,   387,
     390,   572,   648,  1294,  1301,  1302,  1593,  1594,   160,   161,
     201,   214,   254,   267,   294,   359,  1305,    33,   249,   275,
     442,   517,   722,  1303,   772,  1594,   843,  1594,   378,  1594,
     843,  1599,   709,  1028,  1030,  1462,  1463,  1464,   843,  1594,
    1602,  1669,  1458,  1670,  1594,  1460,   615,   791,    35,   158,
     162,   202,   222,   287,   383,   419,   443,   468,   512,   543,
    1524,  1528,  1529,  1642,    86,   770,   886,   887,   888,   889,
    1594,  1659,   563,  1594,  1678,  1602,  1599,   200,   420,   566,
    1660,  1669,  1663,    21,  1400,  1402,   186,   363,  1594,  1653,
    1594,  1745,  1469,   516,   771,    50,   282,  1549,    30,  1583,
    1643,  1644,  1458,   770,   787,  1588,   287,   771,   583,  1259,
    1260,  1583,  1458,  1583,  1594,  1537,  1536,   771,  1589,    56,
      66,    76,    90,    91,    92,   106,   334,   351,   489,   551,
     568,   880,   882,   771,  1657,  1602,  1669,  1660,   487,  1689,
    1688,   197,  1278,  1279,  1438,    13,   365,  1670,  1594,    71,
    1124,  1296,  1602,   733,   572,  1591,   273,   380,   643,   771,
    1636,   771,  1634,   658,  1617,   770,   771,  1594,   209,   282,
     498,   653,   672,  1628,  1477,  1594,  1632,  1622,  1477,  1623,
    1624,  1625,  1630,    13,    35,   125,   378,   484,   709,  1296,
    1639,   166,   275,   635,  1405,  1515,   765,   108,   167,   200,
     420,   566,   587,   612,   628,  1515,    13,  1599,  1425,   197,
     249,  1508,  1512,   198,    70,   543,   194,   543,   563,    70,
     543,    13,    43,    94,    98,   253,   332,   396,   518,   560,
    1496,  1497,  1498,   166,   222,   543,   745,   543,  1425,   543,
     543,  1515,   287,   157,   422,   586,   234,   235,   261,  1142,
      73,   563,   543,   624,   771,   380,   643,    88,   771,   180,
    1221,   369,  1494,  1409,  1411,  1594,    21,   771,   379,  1741,
     559,  1742,   646,   258,   471,  1740,  1296,  1296,    13,   140,
    1350,  1403,  1350,  1350,  1350,   634,  1360,  1296,  1296,  1353,
    1353,  1296,  1296,   140,  1350,  1403,   766,   373,   766,   766,
    1296,  1296,  1296,  1296,  1580,   116,   117,   118,   119,   120,
     223,   224,   225,   226,   335,   337,   338,   339,   346,   427,
     490,   491,   632,   649,   650,  1397,  1398,  1296,  1352,   112,
     115,   576,   579,  1399,   140,  1346,  1296,  1296,  1296,  1296,
    1397,  1296,  1353,  1357,    10,   771,   772,   140,  1350,  1296,
    1296,   140,  1350,  1296,  1296,  1353,  1353,  1353,  1296,  1353,
    1300,  1296,  1296,  1296,  1296,  1296,  1296,   766,  1296,  1350,
    1350,  1296,  1296,   140,  1350,  1296,  1398,  1398,  1296,    46,
     268,   584,  1296,  1296,   766,  1581,  1582,  1594,  1350,  1350,
    1296,  1296,  1296,  1350,  1350,  1353,   766,   766,  1296,  1296,
    1296,  1296,  1296,  1307,   766,   766,   766,   766,   771,   209,
     282,   498,  1627,   502,  1296,  1300,  1300,  1300,  1300,  1300,
    1300,   245,  1300,   245,  1300,  1300,  1300,  1300,  1300,  1599,
    1307,  1589,  1589,  1296,  1317,  1318,  1319,  1594,  1296,   277,
     280,   430,  1038,  1039,  1602,   136,  1583,   156,   781,   766,
     729,    48,  1599,   654,   729,    48,   637,    65,   256,   365,
     535,   553,   644,  1666,  1667,  1602,  1674,   637,  1189,   160,
     160,   160,   160,   160,   160,   771,   160,  1224,   404,  1231,
     572,  1590,  1590,  1599,   771,  1296,  1422,  1578,  1275,  1276,
    1285,   377,   771,  1275,  1276,  1285,   503,   609,  1288,   249,
    1287,  1425,  1425,  1285,   197,  1459,  1584,  1594,  1491,  1215,
    1599,    87,  1064,  1065,  1072,  1073,  1074,  1125,   844,   369,
     316,     7,   844,   765,   110,  1017,  1477,  1478,  1478,  1017,
    1478,  1478,   583,   771,  1069,   158,    74,    89,   199,   401,
     519,  1082,  1084,  1140,  1214,  1478,    64,   235,  1214,   401,
    1478,  1478,  1214,  1478,   401,   401,  1478,  1478,  1478,  1478,
     583,   136,  1478,   261,   401,   564,    64,   193,   401,   418,
    1140,  1214,   261,  1478,   401,   401,   564,   136,  1478,  1478,
    1478,  1478,  1478,  1214,   401,    48,  1478,  1478,   401,    21,
      74,   160,   583,  1140,  1218,   401,   401,  1478,  1478,  1478,
    1478,   139,   332,  1478,  1478,   401,  1478,   619,   619,  1478,
    1477,  1477,  1477,  1070,    71,  1118,   450,  1037,  1199,   771,
     771,   501,   710,  1751,  1177,   492,   628,  1708,   144,   609,
    1247,   125,  1264,  1594,  1263,  1583,   765,   765,  1269,   768,
    1355,   766,   771,   232,   295,   296,   297,   298,   299,   302,
     303,   304,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   317,   318,   711,   712,   732,   734,   735,   736,
     812,   813,   817,   458,   459,   460,   461,   462,   463,   464,
     799,   800,  1583,   610,  1251,    57,   448,   171,   823,   378,
       7,   717,   111,   378,  1066,  1017,   614,  1001,     7,   228,
     125,   771,   826,   592,   592,   615,  1155,  1156,    11,   167,
     200,   420,   587,   830,  1702,  1708,  1714,  1716,  1717,  1722,
    1723,   200,   830,  1701,  1708,  1714,  1717,  1722,  1699,  1583,
    1293,  1593,  1594,  1296,  1296,  1296,   179,   372,   589,   605,
    1303,    13,    20,  1298,  1306,  1300,   765,  1696,  1307,  1300,
     275,   667,  1299,    33,   249,   275,   442,   759,  1594,   772,
    1583,  1462,  1460,  1069,  1008,  1009,  1010,  1028,   771,    52,
     470,  1216,   192,  1757,  1458,   770,   792,   793,   287,   287,
     287,   287,   287,   287,   771,  1458,  1530,   115,   576,   579,
     881,   891,  1344,  1573,  1580,  1599,   771,   160,   378,   766,
     771,   583,   759,  1594,  1604,  1668,   637,  1664,  1594,   160,
     186,   201,   214,   266,   267,   294,   363,   417,  1654,  1655,
    1404,  1405,  1583,  1588,  1588,  1266,  1267,  1583,   236,  1402,
     771,  1599,    31,   583,  1543,  1602,  1602,   771,   583,   176,
     429,   613,  1242,  1243,  1244,   401,  1369,  1370,   583,  1539,
      13,  1538,  1535,   771,   160,   210,   378,   197,  1668,  1594,
     145,   700,   720,   765,   775,  1280,  1281,  1361,  1363,  1371,
    1372,  1373,  1374,  1375,  1376,  1377,  1583,  1696,  1404,  1278,
     583,   583,   583,    35,  1123,  1599,   583,  1477,   456,  1183,
    1183,   433,   454,   496,  1638,  1635,  1633,  1670,  1599,  1603,
     194,   772,   772,   772,   772,   772,  1631,  1296,  1639,   771,
    1629,   249,  1513,  1589,  1296,   759,  1066,   843,   843,   843,
    1583,   843,  1602,  1583,   287,   350,   543,  1505,  1505,  1515,
    1594,   843,  1515,  1602,  1508,   843,  1515,   252,   561,   181,
     194,  1499,   771,  1513,   194,   818,   543,  1508,  1508,  1512,
    1512,  1508,  1515,  1515,  1236,   514,  1228,   818,   426,   766,
     771,  1696,  1570,   405,   194,   771,   766,  1350,   766,  1296,
     766,   766,   766,  1296,   150,   634,  1359,    21,   766,   615,
     766,   766,   766,   615,   771,  1353,   766,   759,   766,   771,
     771,   766,   766,   766,   197,   771,   766,   771,  1353,   766,
     771,   771,   771,   758,   771,   766,   766,   765,  1580,  1594,
    1350,   766,   766,   766,  1350,   766,   771,   766,   766,   766,
     766,   771,   766,   249,   766,   771,   771,   766,   771,   771,
     766,   766,   766,   771,   197,   771,  1350,   766,   766,   771,
     771,   771,   766,   197,  1296,   197,  1296,   197,  1296,   197,
     766,   771,   766,   766,   766,   766,   771,    21,   766,   771,
     766,   771,   766,   766,   690,  1328,  1328,   766,   771,  1323,
     766,  1323,   771,   766,  1328,  1328,  1328,  1353,   772,   772,
     772,  1599,  1296,   776,  1296,  1296,  1294,   766,   771,   765,
     772,   766,    73,   765,    73,   765,   402,  1041,   216,   263,
     773,  1478,   583,   404,   572,   733,    13,   365,  1670,   404,
     572,   733,  1591,  1599,   572,   572,   572,    19,  1665,   320,
     321,   325,   326,  1190,  1191,     5,   404,  1186,  1187,  1188,
    1586,  1588,   122,   188,   290,   373,   594,  1432,  1586,   122,
     188,   219,   290,   373,   594,  1430,  1588,  1588,   817,  1588,
     818,   160,   126,  1232,  1118,  1120,  1437,    22,   131,  1423,
    1424,   771,  1428,  1428,   630,   667,   668,   670,  1289,  1290,
    1291,   503,  1285,  1285,  1459,  1583,  1594,   197,   771,   772,
    1490,  1281,   122,   188,   219,   290,   373,   594,  1431,  1434,
    1435,  1065,    84,    77,    93,   265,   343,   369,   431,   533,
     846,   848,   478,   263,   598,  1019,   108,   221,   394,   404,
     411,   515,   612,   828,   829,  1588,  1005,  1006,   219,   290,
     373,   594,  1032,  1433,  1434,  1585,  1588,  1005,  1032,  1032,
    1594,  1007,  1478,  1163,  1594,  1140,  1141,  1254,  1141,    64,
     193,   418,   604,  1083,  1139,  1154,  1163,  1594,   765,  1594,
     125,  1211,  1594,  1594,  1594,  1594,  1254,  1432,  1430,  1594,
    1430,    13,  1204,  1396,  1594,  1254,  1588,  1588,  1588,  1588,
    1118,  1478,  1430,  1204,  1594,   263,  1396,   263,  1594,  1594,
    1599,  1594,  1204,  1478,   186,   266,   369,  1076,  1430,   125,
    1213,  1594,  1432,  1432,  1594,  1254,  1418,  1419,  1581,   125,
    1071,  1430,  1588,  1254,  1594,  1594,  1583,  1254,  1254,    80,
      82,   125,   148,   187,   440,  1075,  1071,  1071,   125,  1430,
    1594,  1430,  1204,   765,   372,  1599,  1588,  1594,  1588,  1478,
    1478,   403,     7,   144,  1067,  1207,  1208,  1201,  1205,  1208,
     718,   719,  1018,  1478,   707,  1755,   378,   838,  1193,   127,
     248,  1583,   673,   673,  1204,   418,  1392,  1393,  1394,  1594,
     249,  1296,  1354,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     771,   818,   160,   160,   160,   160,   160,   160,   160,   771,
     818,  1063,  1064,  1583,  1019,   709,   642,  1583,  1433,   286,
      77,   177,   184,   364,  1002,  1003,  1004,  1020,  1021,  1022,
    1023,  1026,  1027,  1028,  1029,  1030,  1031,  1017,    48,   637,
     654,  1673,  1679,  1478,    47,   216,   486,  1158,  1158,   378,
     200,  1066,   843,  1594,   843,   843,    21,   254,   845,  1725,
    1729,  1731,  1708,    21,   231,   275,   456,   765,  1033,  1034,
    1035,  1036,  1037,  1068,  1070,  1273,  1275,  1474,  1552,   179,
     372,   589,   605,  1696,    19,  1296,   165,  1300,   765,  1300,
     765,  1696,  1307,  1300,   772,  1594,  1209,  1210,  1212,  1433,
    1464,  1069,  1602,  1216,  1599,   771,   818,  1529,  1525,   889,
     892,   893,   888,   374,   485,   890,  1660,  1594,  1669,   772,
     772,   583,   655,  1404,   765,  1425,  1369,   771,  1268,  1269,
    1590,   293,   433,   643,  1645,  1644,  1296,  1588,   583,  1260,
    1583,  1244,   765,   501,   620,   621,   765,  1470,  1471,  1473,
    1474,  1475,  1433,   818,   882,   881,   385,  1660,  1669,   197,
     765,  1696,  1281,  1363,  1372,  1373,  1374,  1375,   731,   771,
     100,   238,   258,   271,   355,   477,   549,  1364,  1365,  1366,
    1369,  1402,   212,  1415,  1404,  1670,  1670,  1670,   733,  1591,
    1591,   728,  1671,  1671,    78,   595,   433,  1431,  1619,  1620,
    1477,  1624,  1588,   197,  1514,   766,  1594,   615,  1515,   428,
    1425,  1498,  1514,    60,  1515,  1515,  1583,  1583,  1515,  1594,
     771,   336,   245,  1296,   766,  1327,  1328,  1327,  1327,  1327,
     575,  1296,  1296,   154,    35,    62,   112,   115,   123,   142,
     189,   247,   260,   354,   357,   435,   509,   579,   607,  1093,
    1097,  1351,  1119,  1119,  1351,   766,  1327,   766,   245,   245,
    1296,  1296,  1296,   388,  1348,  1296,  1296,  1296,  1296,  1296,
    1300,   766,  1327,   766,  1327,  1296,  1296,  1296,  1296,  1296,
    1296,  1353,  1327,  1327,   245,  1296,  1296,  1296,   766,  1327,
    1296,  1296,  1296,  1296,   197,  1296,   197,  1296,   197,  1296,
    1296,  1327,  1327,  1296,    35,    62,  1430,  1350,  1327,   765,
    1329,  1330,  1331,  1594,   231,   694,  1325,  1571,  1574,   766,
    1325,   766,  1307,  1328,   766,   772,  1164,  1397,  1397,  1319,
    1352,  1594,   156,   765,  1300,   765,  1300,  1431,   555,  1042,
     765,    12,  1040,  1430,  1590,  1583,  1183,   404,   456,   404,
    1671,    21,    48,  1666,  1430,  1430,  1430,  1430,  1191,   285,
     606,   174,   465,   704,   705,  1188,  1588,   160,   406,  1233,
    1119,    73,  1553,  1578,  1430,  1459,   669,  1290,   342,   615,
    1402,   772,  1281,  1584,   759,  1594,   501,  1478,  1588,   533,
     533,   533,   533,   533,   492,   378,  1588,  1014,  1015,  1016,
    1020,  1028,  1030,  1588,  1588,  1588,  1588,  1430,  1588,  1588,
     766,   771,  1599,  1163,   402,   765,  1163,   765,   263,   263,
    1141,   367,  1085,  1086,  1087,  1154,   765,   615,   592,  1078,
    1079,  1080,  1082,  1594,    34,    35,    40,    42,    44,    45,
      62,   112,   115,   123,   159,   187,   189,   205,   206,   247,
     260,   279,   288,   289,   291,   328,   329,   330,   347,   348,
     349,   354,   357,   374,   375,   376,   409,   410,   497,   501,
     513,   573,   576,   579,   580,   581,   582,   622,   623,   650,
     749,  1088,  1091,  1092,  1093,  1094,  1095,  1096,  1097,  1099,
    1087,   656,   657,  1157,   144,   501,  1204,  1594,  1250,   771,
    1431,   125,  1119,  1588,   564,  1594,  1216,   637,   564,  1588,
    1088,  1204,   771,  1423,  1204,   583,   583,  1396,  1204,  1530,
    1123,  1119,  1008,   373,  1752,  1753,  1478,   137,   152,  1756,
      81,   488,   451,  1194,  1410,   378,   378,   766,   766,   771,
    1264,   765,  1430,  1586,  1430,  1430,  1586,  1586,  1430,  1430,
    1586,  1586,  1586,  1586,  1586,  1586,  1586,  1586,  1430,  1430,
    1586,  1574,  1586,  1430,  1586,  1588,  1430,   372,   816,  1601,
     813,   765,   801,   801,   765,   806,   806,   765,   809,   809,
     765,   804,   800,   765,   439,   599,  1011,  1012,  1013,  1020,
    1024,  1025,  1026,  1027,  1028,  1030,  1433,  1599,   765,   825,
     212,  1478,  1478,  1478,  1478,  1069,  1008,   733,  1591,  1599,
    1670,  1189,   612,   709,  1750,  1583,  1594,   843,   765,   473,
    1724,     9,    31,   998,   134,   846,   847,  1303,  1726,    32,
      68,   124,   172,   182,   230,   257,   270,   381,   474,   504,
     898,   899,   900,   902,   903,   904,   908,   910,   913,   922,
     923,   928,   929,   930,   932,   934,   962,   965,  1585,  1596,
    1597,  1608,  1609,  1610,  1613,  1730,  1474,  1583,   275,  1078,
    1035,  1034,  1069,  1036,  1298,   766,   771,  1307,  1307,    19,
    1296,   165,   759,  1212,  1210,  1010,   793,   194,   637,  1526,
     160,   771,  1668,   637,  1681,   759,   759,  1594,  1669,   385,
    1425,   125,  1296,  1481,  1482,   501,  1470,  1471,  1267,  1583,
    1269,   231,  1270,  1551,  1552,   643,   282,  1602,  1395,  1396,
    1486,  1487,  1581,   766,  1472,  1576,  1577,  1581,  1594,   765,
    1476,  1479,   160,   197,  1668,  1669,  1296,  1402,   771,   766,
     766,   766,   766,   766,  1361,  1362,  1363,  1371,  1361,   258,
     258,   391,  1368,   238,   271,   477,  1367,  1368,  1371,  1361,
    1361,  1402,  1410,    48,   217,  1406,  1415,  1183,  1183,   103,
    1069,  1639,  1432,  1503,   163,   631,  1669,   373,  1504,  1586,
    1508,  1508,  1430,  1296,   766,  1327,  1296,   575,   765,  1108,
    1109,  1109,   765,  1103,   765,  1101,  1102,  1108,   414,  1098,
    1100,  1108,    62,   247,  1103,   247,  1109,   721,  1308,   766,
     766,   766,  1327,  1327,  1296,  1296,   766,   766,   771,   766,
      48,   495,  1347,   771,   771,   766,   771,   766,   249,  1314,
    1315,  1327,  1327,   766,   766,   766,   766,   771,   766,   766,
    1296,   766,   194,   766,   766,   771,  1327,   766,   771,   771,
     766,  1296,   766,  1296,   766,  1296,   766,   766,   766,   765,
    1130,  1130,   771,   766,  1330,  1332,  1333,   688,   688,  1328,
     771,  1324,  1324,  1325,  1328,  1325,   766,  1594,   766,  1044,
    1594,   766,  1044,   766,    48,   765,  1046,  1300,   160,   765,
     228,  1671,  1183,  1591,   456,  1671,   219,  1588,  1592,   733,
    1591,   125,   245,   361,   103,   125,  1431,   245,  1588,   160,
     153,   164,   386,   571,  1554,  1555,   278,  1556,  1281,  1369,
    1594,  1404,   772,  1490,  1486,  1588,   111,   111,   127,   248,
     162,  1069,   829,   765,  1431,   401,  1047,  1048,   765,  1296,
    1163,   730,   765,   765,  1160,  1161,  1162,  1594,  1158,  1158,
     766,   771,  1088,  1108,  1108,  1109,    23,    35,    49,   601,
     626,  1108,  1118,  1126,  1127,  1128,  1103,   765,  1128,    62,
     622,  1094,  1128,  1128,    62,   623,   623,   626,   765,  1109,
    1103,  1103,  1128,  1108,  1109,  1128,   441,  1081,  1133,    27,
      71,    75,    77,   125,   367,   372,   378,   418,   497,   547,
     604,   706,   738,  1084,  1087,  1111,  1112,  1113,  1124,  1132,
    1303,    35,  1108,  1129,  1108,  1108,  1109,   765,  1102,  1110,
    1101,   125,   125,  1088,  1594,  1124,  1124,   566,     9,   186,
    1217,  1419,  1594,  1594,   246,  1242,   766,   757,  1069,   373,
     757,  1754,  1757,   367,   416,    25,   168,   832,   583,   137,
     152,   834,  1709,  1396,  1396,  1393,   814,   815,  1430,   766,
     802,   803,  1594,   766,   807,   808,  1594,  1604,   766,   810,
     811,  1586,  1587,   765,   766,   805,  1161,  1478,  1478,  1069,
     825,   384,  1161,   353,   714,   715,   716,  1594,  1588,  1032,
    1032,  1431,  1004,   404,    21,    48,  1186,  1751,   765,   473,
     831,  1718,   123,   247,   435,   550,  1077,   765,  1727,   130,
     241,   609,   999,   134,    54,   230,   474,   897,   920,   922,
     924,   926,   927,   928,   929,   930,   932,   934,   942,   943,
     946,   957,   960,   967,   968,  1585,  1597,   966,  1594,   909,
     905,  1597,   197,   363,   935,   914,  1597,  1597,  1594,   911,
    1597,   194,   292,   636,   976,   783,   502,   772,   850,   901,
     773,   105,  1585,  1732,  1733,  1734,  1583,   766,  1070,  1353,
     766,  1298,   766,   771,  1307,  1527,   433,    56,    66,    76,
      90,    91,    92,   106,   334,   351,   472,   489,   551,   568,
     894,   893,   583,   210,   637,  1680,   766,   771,  1486,   378,
    1483,  1483,  1270,   269,   246,   766,   771,  1477,  1473,  1474,
     766,   771,   772,  1480,  1481,   771,   881,  1669,   197,   771,
    1410,  1361,   776,   258,  1368,  1368,   258,   258,   378,   615,
     378,   615,   192,   231,   614,  1387,  1388,  1389,  1390,  1391,
    1296,  1416,  1579,  1296,   698,  1412,  1406,  1671,  1671,   404,
    1431,  1425,  1425,  1404,  1515,  1397,  1296,   122,   290,   373,
     594,  1128,   373,   373,   766,  1397,  1397,  1296,  1349,  1578,
    1570,   766,  1296,  1296,  1353,    44,   355,   766,   637,  1316,
    1296,  1397,  1296,  1296,  1296,  1296,   766,   766,   766,  1431,
     766,   766,  1430,  1327,   766,   401,  1334,  1296,  1328,  1328,
     197,  1326,   766,   771,   766,  1039,  1047,   766,  1431,  1043,
    1044,    48,  1671,  1671,  1591,  1671,   404,   456,  1671,  1431,
     125,   723,   125,  1431,  1588,    48,    48,   153,    48,  1555,
     537,   571,  1557,  1558,   737,  1559,  1404,  1404,  1404,  1016,
    1161,  1594,   766,   771,  1161,   766,   765,  1161,  1296,   766,
     771,   765,  1423,  1079,  1081,    35,    23,   601,  1118,    35,
    1128,  1119,  1165,  1570,  1128,   626,  1165,  1128,   509,   607,
     651,  1105,  1106,  1107,  1583,  1217,  1123,   125,   148,   187,
    1114,  1588,   115,   576,   579,   757,   758,   765,  1116,  1117,
    1572,  1573,   609,   125,   125,   139,   332,  1115,   263,  1433,
    1477,  1083,    71,  1113,   203,  1089,   263,   372,   724,  1129,
    1128,  1129,  1105,   373,  1105,  1105,   765,  1572,  1217,  1583,
    1594,   765,   373,  1753,   373,   416,  1296,  1296,   378,   838,
     843,   378,    77,   839,    21,   637,  1246,   766,   771,   766,
     771,   766,   771,   772,   766,   771,   803,   766,   771,   766,
    1032,  1032,  1013,   765,   766,  1586,  1586,  1586,  1586,  1592,
     733,  1591,  1755,  1161,  1077,   378,   851,   852,   853,  1594,
     516,  1728,   378,   944,   947,   921,   925,   292,   455,   636,
     971,    32,   969,   773,   992,   993,  1733,   634,   906,   197,
    1594,   915,   916,   194,   912,  1296,   505,   979,   860,   898,
     978,   964,  1585,   976,    32,  1585,   747,  1735,  1734,   766,
    1033,   766,  1353,   175,   285,  1669,   385,   210,    21,  1683,
    1404,  1482,  1483,   147,   566,  1487,  1482,  1473,  1474,  1576,
    1594,   766,  1479,  1669,  1588,   766,   258,   258,  1296,   765,
    1296,   765,  1140,  1140,  1388,   639,   771,  1417,  1330,  1413,
    1414,  1412,   818,   766,   766,   766,   766,   766,   766,   771,
     766,   766,   766,   771,  1327,   766,   771,   766,   342,   265,
     428,   766,   766,   766,   766,   766,   766,  1131,   771,    48,
     388,  1335,   186,   266,  1325,  1594,   216,   263,   766,   766,
    1588,  1671,  1671,  1591,   120,   120,  1570,  1570,    48,  1570,
      48,    48,  1558,  1570,  1420,  1420,   766,   620,  1049,  1048,
     766,  1159,  1160,   766,   766,    77,   262,  1150,  1151,  1152,
    1153,  1156,  1157,  1162,   373,  1119,  1129,   766,   771,   766,
    1107,   765,  1134,  1574,  1574,  1296,  1116,   621,  1433,  1123,
      15,    21,  1296,  1202,  1203,  1047,  1397,   511,  1588,   143,
    1195,  1474,  1710,   373,   815,   803,   808,  1594,   811,   771,
     765,   637,  1144,  1145,  1146,  1153,   828,  1147,  1148,  1149,
    1153,   228,   404,  1756,   766,   516,   488,   766,   771,  1091,
    1588,   239,   249,   393,   854,   855,   856,   857,  1583,  1296,
     634,   949,   953,   937,   938,  1296,   864,   897,   864,   972,
     970,   958,   961,   997,  1594,   859,   965,   907,   246,   154,
    1296,   931,   984,   985,  1594,   989,  1594,   154,   898,   769,
     982,  1296,  1296,   850,   963,   254,   769,  1091,   766,  1680,
     385,  1602,  1425,   263,  1583,    73,  1378,  1395,  1395,   194,
    1386,  1386,  1579,    21,   771,   373,  1578,  1296,   342,   173,
     766,  1430,  1416,    48,   430,   482,   682,  1336,  1342,  1328,
     765,  1040,   111,   465,  1748,  1749,  1671,  1570,  1570,  1570,
     276,  1429,  1429,  1144,   249,   272,    77,   111,   235,   322,
     340,   364,   564,  1060,  1061,  1062,  1507,  1147,   766,   771,
    1150,  1423,  1588,  1478,  1152,   766,  1128,  1570,  1128,  1135,
    1594,   319,  1136,   766,   765,   766,   766,   833,   840,   841,
     637,  1711,   674,   803,   803,   398,  1209,  1146,   766,  1209,
    1149,    48,  1150,  1588,   832,  1719,   853,  1124,   766,   771,
    1594,   194,   945,   954,   150,   953,   956,   154,  1296,   154,
     897,   769,   608,  1296,   865,   971,   969,   898,   994,  1296,
     933,   230,   575,  1271,   980,   981,  1597,   249,   292,   769,
     980,   983,   992,   984,  1124,  1683,   637,  1682,   609,  1369,
     765,   766,   766,   766,   212,   258,   388,   765,   765,  1331,
    1414,   766,   766,   766,  1422,    33,   103,   245,   697,  1337,
    1338,  1339,  1571,  1574,  1300,   765,   136,   369,   535,  1428,
     765,  1051,  1053,   574,  1478,   136,   136,  1478,  1478,  1478,
    1478,   765,  1057,  1062,   158,  1133,  1160,  1430,  1423,   766,
     771,   198,   400,   510,   378,  1137,  1296,   538,   835,   842,
     920,   922,   924,   926,   928,   929,   930,   932,   934,   942,
     957,   960,   967,    53,    64,   282,   766,   771,  1585,  1433,
    1209,   837,   838,   473,   856,   249,   393,   858,   149,   634,
     948,   950,  1296,   864,   154,   230,   939,   292,   769,   974,
     973,   124,   863,   866,   959,  1597,   959,   769,   748,   995,
     936,  1594,   917,   475,   765,   987,   977,   292,   959,   769,
     125,   502,   862,   654,  1486,  1120,   701,  1379,  1380,  1594,
    1402,    48,    48,  1392,  1394,   245,   697,  1338,  1340,  1571,
    1574,   484,  1296,   692,   679,  1341,   692,   692,   766,  1044,
    1478,   535,   765,  1052,  1053,  1054,   327,  1050,  1053,  1588,
    1478,  1478,  1433,  1433,  1431,  1594,   555,  1058,  1059,  1478,
    1594,   130,   609,   766,  1296,   155,   836,    64,   385,    64,
     803,   834,  1091,   393,  1091,   484,   951,   950,   956,   955,
      54,   575,  1296,   143,    95,   172,   869,   895,  1594,   154,
     897,   769,   634,   154,   771,   860,   984,   986,  1573,  1594,
     980,   860,  1296,  1296,   769,    13,   125,   365,  1670,   482,
    1560,   703,   766,   771,   194,  1091,   766,   766,  1296,   681,
      19,   681,   681,  1397,   103,   212,   369,   696,   554,  1045,
     766,  1590,   766,   771,   327,  1055,  1056,  1300,  1588,  1588,
    1599,   766,   771,  1599,    52,   369,   470,   501,  1138,  1138,
     548,   629,  1090,  1296,   385,   385,   766,   839,  1124,  1124,
     191,   413,  1712,  1713,  1296,   154,   575,   864,   975,   864,
     215,   771,  1091,    86,   105,   769,   689,  1594,   918,   766,
     746,   988,   154,  1617,   228,  1553,  1588,  1380,   702,  1124,
    1397,  1340,   692,   484,   689,  1431,  1045,  1749,  1053,   766,
     771,  1060,  1059,     6,   125,   372,   378,   378,  1111,   143,
    1720,   125,   502,   861,  1599,  1715,   952,    54,   864,   940,
     154,   154,   194,  1594,  1124,   194,   194,   575,   150,   151,
     919,   292,   986,   292,   292,    48,  1556,  1378,   171,  1381,
     681,  1056,   609,   130,   840,   845,  1296,  1296,   897,   575,
     150,   151,   941,   455,   636,   867,   125,   896,   872,   873,
    1430,   868,   996,   860,   915,   991,   990,  1570,   231,  1561,
     703,  1138,  1138,  1721,   864,   864,   937,   521,   523,   870,
     871,   872,   875,  1303,  1594,  1296,  1271,   860,   860,   860,
     373,   765,  1563,  1588,   897,   771,   897,   196,   154,   154,
     278,   482,  1562,   766,   770,  1564,  1565,  1581,   501,  1566,
     125,   162,   372,  1382,  1383,  1384,  1385,   871,   292,   292,
    1599,   766,   771,  1567,  1568,  1581,  1588,  1384,  1385,  1383,
    1385,   378,  1565,   771,  1477,   378,   378,   162,   699,  1568,
    1482
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   777,   778,   778,   778,   778,   778,   779,   780,   779,
     779,   781,   781,   782,   782,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,   783,   783,   784,   785,
     785,   786,   787,   787,   789,   788,   790,   791,   791,   792,
     792,   793,   795,   794,   797,   796,   798,   796,   799,   799,
     800,   800,   800,   800,   800,   800,   800,   801,   801,   802,
     802,   803,   804,   804,   805,   805,   806,   806,   807,   807,
     808,   809,   809,   810,   810,   811,   812,   812,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   814,   814,   814,   815,
     816,   816,   817,   817,   817,   817,   818,   818,   819,   819,
     819,   819,   820,   821,   823,   822,   822,   822,   822,   822,
     822,   822,   824,   824,   825,   825,   825,   825,   825,   826,
     826,   827,   827,   827,   828,   828,   829,   829,   829,   829,
     829,   829,   829,   831,   830,   833,   832,   832,   834,   834,
     834,   834,   835,   835,   836,   836,   837,   837,   838,   838,
     839,   839,   841,   840,   842,   842,   842,   842,   842,   842,
     842,   842,   842,   842,   842,   842,   842,   843,   843,   844,
     844,   845,   845,   846,   846,   846,   846,   846,   846,   846,
     847,   847,   847,   848,   848,   849,   850,   850,   851,   851,
     852,   852,   853,   854,   854,   855,   855,   856,   857,   857,
     857,   857,   858,   858,   858,   858,   859,   859,   860,   860,
     861,   861,   861,   862,   862,   862,   863,   863,   864,   864,
     865,   865,   866,   866,   867,   866,   868,   866,   869,   869,
     870,   870,   871,   872,   872,   873,   874,   874,   875,   875,
     875,   875,   875,   876,   877,   877,   878,   878,   879,   879,
     880,   880,   881,   881,   881,   882,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   883,   884,   885,
     885,   885,   886,   886,   887,   887,   888,   889,   889,   890,
     890,   891,   892,   892,   893,   894,   894,   894,   894,   894,
     894,   894,   894,   894,   894,   894,   894,   894,   895,   895,
     896,   896,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     899,   899,   901,   900,   903,   902,   904,   905,   905,   906,
     907,   906,   909,   908,   911,   910,   912,   912,   914,   913,
     916,   917,   918,   915,   919,   919,   919,   921,   920,   923,
     922,   925,   924,   927,   926,   928,   929,   930,   930,   931,
     931,   933,   932,   934,   935,   935,   935,   936,   936,   938,
     939,   940,   937,   941,   941,   941,   942,   942,   944,   945,
     943,   947,   946,   948,   948,   949,   949,   951,   952,   950,
     954,   955,   953,   956,   956,   958,   957,   959,   959,   961,
     960,   963,   962,   964,   962,   966,   965,   968,   967,   970,
     969,   971,   972,   973,   971,   974,   975,   971,   977,   976,
     978,   976,   979,   976,   980,   980,   981,   983,   982,   985,
     984,   986,   986,   987,   987,   988,   988,   990,   989,   991,
     989,   993,   994,   992,   995,   996,   995,   997,   997,   998,
     998,   999,   999,   999,  1000,  1000,  1001,  1001,  1002,  1002,
    1003,  1003,  1004,  1004,  1004,  1004,  1004,  1004,  1004,  1004,
    1004,  1004,  1005,  1005,  1006,  1006,  1007,  1007,  1007,  1007,
    1007,  1007,  1008,  1008,  1009,  1009,  1010,  1011,  1011,  1012,
    1012,  1013,  1013,  1013,  1013,  1013,  1013,  1013,  1014,  1014,
    1015,  1015,  1016,  1016,  1016,  1017,  1018,  1018,  1019,  1020,
    1021,  1022,  1023,  1024,  1025,  1026,  1027,  1028,  1029,  1030,
    1030,  1031,  1032,  1032,  1033,  1033,  1034,  1034,  1035,  1035,
    1035,  1036,  1036,  1037,  1038,  1038,  1038,  1038,  1038,  1038,
    1039,  1039,  1040,  1040,  1041,  1041,  1042,  1042,  1042,  1043,
    1043,  1044,  1044,  1045,  1045,  1046,  1046,  1047,  1047,  1048,
    1049,  1049,  1049,  1050,  1050,  1051,  1051,  1052,  1052,  1054,
    1053,  1055,  1055,  1056,  1056,  1057,  1057,  1058,  1058,  1059,
    1060,  1060,  1061,  1061,  1062,  1062,  1062,  1062,  1062,  1062,
    1062,  1062,  1063,  1063,  1064,  1064,  1065,  1065,  1065,  1066,
    1066,  1067,  1067,  1068,  1068,  1069,  1069,  1070,  1070,  1070,
    1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,
    1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,
    1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,  1070,
    1070,  1071,  1071,  1072,  1073,  1074,  1075,  1075,  1075,  1075,
    1075,  1075,  1076,  1076,  1076,  1077,  1077,  1077,  1077,  1078,
    1078,  1079,  1079,  1080,  1081,  1081,  1082,  1082,  1082,  1082,
    1082,  1082,  1083,  1084,  1084,  1085,  1085,  1086,  1086,  1087,
    1088,  1088,  1089,  1089,  1090,  1090,  1090,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1091,  1092,  1092,  1092,  1092,
    1092,  1092,  1092,  1092,  1093,  1093,  1094,  1094,  1095,  1095,
    1095,  1095,  1095,  1096,  1096,  1096,  1096,  1096,  1097,  1097,
    1098,  1098,  1099,  1099,  1099,  1099,  1099,  1100,  1100,  1101,
    1101,  1101,  1102,  1103,  1103,  1104,  1104,  1104,  1105,  1105,
    1106,  1106,  1107,  1107,  1107,  1108,  1108,  1108,  1108,  1109,
    1109,  1110,  1110,  1111,  1111,  1112,  1112,  1113,  1113,  1113,
    1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,  1113,
    1113,  1113,  1113,  1113,  1113,  1113,  1114,  1114,  1114,  1115,
    1115,  1115,  1116,  1117,  1117,  1118,  1118,  1119,  1119,  1120,
    1120,  1121,  1121,  1122,  1122,  1123,  1123,  1124,  1124,  1125,
    1125,  1126,  1126,  1126,  1127,  1127,  1127,  1128,  1128,  1128,
    1128,  1128,  1128,  1128,  1129,  1129,  1131,  1130,  1132,  1132,
    1133,  1134,  1134,  1135,  1135,  1136,  1136,  1136,  1136,  1137,
    1137,  1137,  1137,  1137,  1138,  1138,  1138,  1138,  1138,  1139,
    1139,  1140,  1140,  1141,  1141,  1142,  1142,  1142,  1143,  1143,
    1144,  1144,  1145,  1145,  1146,  1146,  1147,  1147,  1148,  1148,
    1149,  1150,  1150,  1151,  1151,  1152,  1152,  1153,  1153,  1153,
    1154,  1154,  1154,  1155,  1155,  1156,  1156,  1157,  1157,  1158,
    1158,  1158,  1159,  1159,  1160,  1160,  1161,  1161,  1162,  1162,
    1163,  1163,  1164,  1164,  1165,  1165,  1166,  1166,  1168,  1167,
    1170,  1169,  1172,  1171,  1174,  1173,  1175,  1173,  1177,  1176,
    1178,  1179,  1179,  1179,  1179,  1180,  1181,  1182,  1182,  1182,
    1182,  1182,  1182,  1182,  1183,  1183,  1184,  1185,  1186,  1186,
    1187,  1187,  1188,  1188,  1188,  1188,  1188,  1188,  1188,  1188,
    1188,  1188,  1188,  1188,  1188,  1189,  1189,  1190,  1190,  1191,
    1191,  1191,  1191,  1192,  1193,  1193,  1193,  1193,  1194,  1194,
    1195,  1195,  1196,  1196,  1197,  1197,  1198,  1198,  1199,  1199,
    1200,  1200,  1200,  1200,  1201,  1201,  1201,  1201,  1201,  1201,
    1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1201,  1201,  1201,  1201,  1202,  1202,  1203,  1203,  1204,  1204,
    1205,  1205,  1205,  1205,  1205,  1206,  1206,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1208,  1208,  1208,  1209,  1209,  1209,  1209,  1209,  1210,
    1211,  1211,  1212,  1213,  1213,  1214,  1214,  1215,  1215,  1216,
    1216,  1216,  1217,  1217,  1217,  1218,  1218,  1218,  1218,  1219,
    1219,  1220,  1220,  1221,  1221,  1222,  1224,  1223,  1225,  1226,
    1226,  1227,  1227,  1228,  1228,  1228,  1229,  1230,  1230,  1231,
    1231,  1232,  1232,  1233,  1233,  1234,  1234,  1235,  1235,  1236,
    1236,  1237,  1237,  1238,  1238,  1238,  1238,  1238,  1239,  1240,
    1240,  1240,  1241,  1242,  1242,  1243,  1243,  1244,  1244,  1244,
    1245,  1246,  1246,  1247,  1247,  1247,  1248,  1249,  1250,  1250,
    1251,  1251,  1252,  1252,  1252,  1252,  1252,  1252,  1253,  1254,
    1254,  1254,  1255,  1257,  1256,  1256,  1258,  1258,  1259,  1259,
    1260,  1261,  1261,  1262,  1262,  1263,  1264,  1264,  1265,  1265,
    1266,  1266,  1267,  1268,  1269,  1269,  1270,  1270,  1271,  1271,
    1271,  1272,  1272,  1273,  1273,  1273,  1273,  1273,  1273,  1273,
    1274,  1274,  1274,  1274,  1274,  1275,  1275,  1276,  1277,  1277,
    1278,  1278,  1279,  1280,  1280,  1281,  1281,  1282,  1282,  1283,
    1283,  1284,  1284,  1285,  1285,  1286,  1286,  1287,  1287,  1287,
    1288,  1288,  1289,  1290,  1290,  1291,  1291,  1291,  1292,  1292,
    1292,  1293,  1293,  1294,  1294,  1294,  1294,  1294,  1295,  1295,
    1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,  1296,
    1296,  1297,  1297,  1297,  1297,  1297,  1298,  1298,  1298,  1298,
    1298,  1298,  1298,  1298,  1298,  1298,  1298,  1298,  1298,  1298,
    1298,  1298,  1298,  1299,  1299,  1300,  1300,  1300,  1300,  1300,
    1300,  1300,  1300,  1300,  1300,  1300,  1300,  1300,  1300,  1300,
    1301,  1301,  1302,  1302,  1303,  1303,  1304,  1304,  1305,  1305,
    1305,  1305,  1305,  1305,  1305,  1306,  1306,  1307,  1307,  1307,
    1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,
    1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,
    1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,  1307,
    1307,  1307,  1308,  1308,  1309,  1309,  1309,  1309,  1309,  1309,
    1309,  1309,  1309,  1309,  1309,  1309,  1309,  1309,  1309,  1309,
    1309,  1309,  1309,  1309,  1309,  1309,  1309,  1309,  1309,  1309,
    1309,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,
    1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,  1310,
    1310,  1310,  1310,  1311,  1311,  1311,  1311,  1311,  1311,  1311,
    1311,  1311,  1311,  1311,  1311,  1311,  1311,  1311,  1311,  1311,
    1311,  1311,  1311,  1311,  1311,  1311,  1312,  1312,  1312,  1312,
    1312,  1312,  1312,  1313,  1313,  1314,  1314,  1315,  1315,  1316,
    1316,  1317,  1317,  1318,  1318,  1319,  1320,  1320,  1321,  1321,
    1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,
    1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1321,  1322,
    1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,
    1323,  1323,  1323,  1324,  1324,  1325,  1325,  1325,  1326,  1326,
    1326,  1327,  1327,  1328,  1329,  1329,  1330,  1331,  1332,  1333,
    1333,  1334,  1334,  1335,  1335,  1336,  1336,  1337,  1337,  1338,
    1338,  1338,  1338,  1338,  1339,  1340,  1340,  1340,  1340,  1340,
    1341,  1341,  1341,  1341,  1341,  1342,  1342,  1342,  1343,  1344,
    1345,  1345,  1345,  1346,  1346,  1347,  1347,  1348,  1348,  1349,
    1349,  1350,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,
    1351,  1351,  1351,  1351,  1351,  1351,  1351,  1352,  1352,  1353,
    1353,  1354,  1355,  1355,  1356,  1356,  1357,  1357,  1358,  1358,
    1359,  1359,  1360,  1360,  1361,  1361,  1361,  1362,  1362,  1363,
    1363,  1363,  1363,  1363,  1363,  1364,  1364,  1364,  1365,  1365,
    1365,  1365,  1366,  1366,  1367,  1367,  1368,  1368,  1369,  1369,
    1370,  1371,  1371,  1371,  1371,  1371,  1371,  1372,  1372,  1373,
    1373,  1374,  1375,  1375,  1376,  1376,  1377,  1378,  1379,  1379,
    1380,  1380,  1380,  1381,  1381,  1382,  1382,  1382,  1382,  1382,
    1383,  1384,  1385,  1385,  1385,  1386,  1386,  1386,  1386,  1387,
    1387,  1388,  1388,  1389,  1389,  1390,  1390,  1391,  1392,  1392,
    1393,  1393,  1394,  1394,  1395,  1396,  1396,  1397,  1397,  1397,
    1397,  1397,  1397,  1397,  1397,  1397,  1397,  1397,  1397,  1398,
    1398,  1398,  1398,  1398,  1398,  1398,  1398,  1398,  1399,  1399,
    1399,  1399,  1400,  1400,  1401,  1401,  1402,  1402,  1403,  1403,
    1404,  1404,  1405,  1406,  1406,  1407,  1407,  1408,  1408,  1409,
    1410,  1410,  1411,  1411,  1412,  1412,  1413,  1413,  1414,  1415,
    1415,  1416,  1416,  1417,  1417,  1418,  1418,  1419,  1420,  1420,
    1421,  1422,  1422,  1423,  1423,  1424,  1424,  1425,  1425,  1426,
    1427,  1427,  1427,  1428,  1428,  1428,  1428,  1428,  1429,  1429,
    1430,  1430,  1430,  1430,  1430,  1430,  1431,  1431,  1431,  1431,
    1431,  1432,  1432,  1432,  1432,  1432,  1433,  1433,  1433,  1433,
    1433,  1434,  1435,  1435,  1436,  1436,  1437,  1437,  1438,  1439,
    1439,  1439,  1440,  1441,  1442,  1443,  1444,  1445,  1445,  1446,
    1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,
    1457,  1458,  1458,  1459,  1459,  1460,  1460,  1461,  1461,  1462,
    1462,  1463,  1463,  1464,  1464,  1465,  1465,  1465,  1466,  1466,
    1466,  1467,  1467,  1467,  1467,  1468,  1468,  1469,  1469,  1470,
    1470,  1470,  1471,  1471,  1471,  1472,  1472,  1473,  1474,  1474,
    1475,  1475,  1476,  1476,  1477,  1477,  1478,  1478,  1479,  1480,
    1480,  1481,  1481,  1482,  1482,  1483,  1483,  1484,  1485,  1485,
    1486,  1486,  1487,  1488,  1488,  1489,  1489,  1489,  1490,  1490,
    1491,  1491,  1492,  1492,  1492,  1493,  1494,  1494,  1495,  1495,
    1496,  1496,  1497,  1497,  1498,  1498,  1498,  1498,  1498,  1498,
    1498,  1498,  1498,  1499,  1499,  1501,  1500,  1502,  1502,  1502,
    1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1503,
    1502,  1504,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,
    1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,
    1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,  1502,
    1502,  1502,  1502,  1502,  1502,  1502,  1502,  1505,  1505,  1505,
    1506,  1506,  1507,  1507,  1508,  1508,  1509,  1509,  1510,  1510,
    1511,  1511,  1511,  1511,  1512,  1512,  1513,  1513,  1514,  1514,
    1515,  1515,  1515,  1516,  1517,  1518,  1518,  1518,  1518,  1518,
    1518,  1519,  1519,  1520,  1520,  1520,  1521,  1521,  1521,  1523,
    1522,  1525,  1524,  1524,  1526,  1526,  1527,  1526,  1528,  1528,
    1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,
    1529,  1529,  1530,  1530,  1532,  1531,  1531,  1533,  1533,  1534,
    1534,  1536,  1535,  1537,  1535,  1538,  1538,  1539,  1539,  1541,
    1540,  1542,  1543,  1543,  1544,  1545,  1545,  1545,  1546,  1547,
    1548,  1548,  1549,  1549,  1550,  1550,  1550,  1551,  1551,  1552,
    1552,  1553,  1553,  1554,  1554,  1555,  1555,  1555,  1555,  1556,
    1556,  1557,  1557,  1558,  1558,  1559,  1559,  1560,  1560,  1561,
    1561,  1562,  1562,  1563,  1563,  1563,  1564,  1564,  1565,  1565,
    1566,  1566,  1567,  1567,  1568,  1569,  1569,  1569,  1569,  1570,
    1570,  1570,  1571,  1572,  1572,  1572,  1573,  1573,  1573,  1573,
    1573,  1573,  1573,  1573,  1573,  1573,  1574,  1574,  1574,  1574,
    1574,  1575,  1575,  1575,  1576,  1576,  1577,  1577,  1578,  1579,
    1580,  1580,  1581,  1581,  1582,  1582,  1583,  1583,  1584,  1584,
    1585,  1585,  1586,  1587,  1588,  1589,  1590,  1591,  1592,  1592,
    1593,  1594,  1594,  1595,  1595,  1596,  1597,  1597,  1598,  1598,
    1599,  1599,  1599,  1600,  1600,  1600,  1601,  1601,  1602,  1602,
    1603,  1603,  1604,  1605,  1605,  1605,  1605,  1605,  1606,  1606,
    1606,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,
    1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,
    1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,
    1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1607,  1608,
    1608,  1608,  1609,  1609,  1609,  1609,  1609,  1609,  1609,  1609,
    1609,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,  1610,
    1610,  1610,  1610,  1610,  1610,  1610,  1611,  1611,  1611,  1612,
    1612,  1612,  1612,  1613,  1613,  1613,  1613,  1613,  1614,  1615,
    1615,  1615,  1615,  1615,  1615,  1615,  1616,  1616,  1616,  1616,
    1616,  1616,  1616,  1617,  1617,  1618,  1618,  1619,  1619,  1620,
    1621,  1621,  1622,  1622,  1623,  1623,  1624,  1624,  1625,  1625,
    1625,  1625,  1625,  1626,  1626,  1626,  1626,  1627,  1627,  1627,
    1627,  1628,  1628,  1628,  1628,  1628,  1628,  1629,  1630,  1630,
    1630,  1630,  1630,  1630,  1630,  1631,  1631,  1631,  1632,  1632,
    1633,  1634,  1634,  1635,  1636,  1636,  1637,  1637,  1638,  1638,
    1638,  1638,  1639,  1639,  1639,  1639,  1639,  1639,  1639,  1641,
    1640,  1640,  1642,  1642,  1643,  1643,  1644,  1645,  1645,  1645,
    1645,  1647,  1646,  1646,  1648,  1649,  1650,  1651,  1651,  1651,
    1652,  1652,  1652,  1652,  1652,  1653,  1653,  1654,  1654,  1654,
    1654,  1655,  1655,  1655,  1655,  1655,  1656,  1656,  1657,  1656,
    1656,  1656,  1658,  1658,  1659,  1658,  1658,  1660,  1660,  1660,
    1660,  1661,  1661,  1662,  1662,  1663,  1663,  1663,  1663,  1663,
    1663,  1663,  1663,  1663,  1663,  1663,  1663,  1663,  1663,  1663,
    1663,  1663,  1663,  1663,  1663,  1663,  1663,  1663,  1663,  1663,
    1663,  1663,  1663,  1663,  1663,  1663,  1663,  1663,  1663,  1664,
    1664,  1665,  1665,  1666,  1666,  1667,  1667,  1667,  1668,  1668,
    1668,  1668,  1668,  1669,  1669,  1670,  1670,  1671,  1671,  1672,
    1672,  1673,  1673,  1673,  1673,  1673,  1673,  1673,  1674,  1674,
    1674,  1674,  1674,  1674,  1674,  1674,  1674,  1674,  1675,  1675,
    1676,  1676,  1677,  1677,  1678,  1678,  1679,  1679,  1679,  1679,
    1679,  1680,  1680,  1681,  1681,  1682,  1682,  1682,  1682,  1682,
    1683,  1683,  1685,  1684,  1686,  1686,  1687,  1687,  1687,  1688,
    1688,  1688,  1689,  1689,  1690,  1691,  1691,  1692,  1693,  1694,
    1694,  1694,  1695,  1696,  1697,  1698,  1698,  1698,  1698,  1698,
    1698,  1698,  1698,  1699,  1700,  1700,  1700,  1701,  1701,  1701,
    1701,  1701,  1702,  1702,  1702,  1702,  1702,  1702,  1703,  1703,
    1704,  1705,  1706,  1706,  1706,  1707,  1707,  1707,  1709,  1708,
    1710,  1711,  1711,  1711,  1711,  1712,  1712,  1713,  1713,  1715,
    1714,  1716,  1716,  1718,  1719,  1720,  1721,  1717,  1722,  1724,
    1723,  1726,  1725,  1725,  1727,  1728,  1727,  1730,  1729,  1731,
    1731,  1732,  1732,  1733,  1733,  1735,  1734,  1734,  1734,  1736,
    1736,  1736,  1736,  1736,  1736,  1737,  1737,  1738,  1738,  1738,
    1739,  1739,  1740,  1740,  1740,  1741,  1741,  1742,  1742,  1742,
    1743,  1743,  1744,  1744,  1745,  1745,  1746,  1747,  1747,  1748,
    1748,  1749,  1749,  1749,  1750,  1750,  1751,  1751,  1752,  1752,
    1753,  1753,  1754,  1754,  1755,  1755,  1756,  1756,  1756,  1757,
    1757
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     4,     1,     2,     0,     4,     3,     0,     2,     3,
       1,     2,     0,     3,     0,     6,     0,     6,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     3,     1,
       3,     1,     2,     3,     5,     7,     2,     3,     1,     3,
       3,     2,     3,     1,     3,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       5,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     3,     3,     3,     3,     0,     3,     9,     6,
       7,     9,     4,    10,     0,     6,     3,     8,     7,     6,
       7,    11,     8,     7,     0,     3,     3,     6,     3,     0,
       3,    12,    11,    11,     1,     3,     2,     2,     2,     2,
       2,     2,     2,     0,    12,     0,     6,     2,     0,     1,
       3,     1,     0,     2,     0,     2,     0,     1,     3,     4,
       0,     2,     0,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     0,
       2,     0,     2,     2,     2,     2,     2,     3,     3,     1,
       1,     1,     2,     3,     3,     3,     0,     3,     0,     1,
       3,     1,     3,     0,     1,     3,     1,     6,     0,     1,
       1,     1,     0,     1,     1,     2,     0,     3,     2,     3,
       0,     2,     2,     0,     2,     2,     0,     3,     2,     3,
       0,     3,     5,     5,     0,     7,     0,     6,     1,     1,
       1,     3,     1,     1,     1,     3,     0,     1,     1,     1,
       1,     2,     1,     3,     1,     1,     0,     1,     0,     2,
       3,     5,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     4,     0,
       1,     1,     1,     3,     1,     3,     3,     1,     2,     1,
       1,     1,     1,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     4,     0,     3,     0,     2,     3,     0,     1,     0,
       0,     3,     0,     4,     0,     3,     0,     1,     0,     5,
       0,     0,     0,     7,     0,     2,     2,     0,     5,     0,
       2,     0,     3,     0,     2,     2,     2,     2,     4,     1,
       1,     0,     6,     2,     0,     2,     1,     1,     3,     0,
       0,     0,     7,     0,     2,     2,     1,     1,     0,     0,
       8,     0,     6,     1,     2,     1,     2,     0,     0,     6,
       0,     0,     6,     0,     2,     0,     5,     0,     1,     0,
       5,     0,     6,     0,     4,     0,     4,     0,     2,     0,
       5,     4,     0,     0,     8,     0,     0,     8,     0,     6,
       0,     4,     0,     4,     1,     1,     0,     0,     6,     0,
       2,     1,     1,     0,     1,     0,     2,     0,    10,     0,
      10,     0,     0,     5,     0,     0,     6,     0,     1,     1,
       1,     1,     1,     1,     0,     2,     0,     4,     0,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     1,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     3,     1,     1,     1,     2,     1,     1,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     4,     3,     1,
       1,     3,     1,     1,     2,     1,     2,     1,     0,     2,
       1,     2,     1,     6,     6,     5,     4,     5,     4,     5,
       0,     1,     0,     3,     0,     2,     0,     8,     9,     0,
       1,     1,     3,     0,     2,     0,     3,     1,     3,     5,
       0,     4,     3,     1,     1,     1,     3,     1,     3,     0,
       4,     1,     3,     1,     1,     0,     3,     1,     3,     3,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     0,     1,     1,     2,     1,     1,     1,     0,
       3,     1,     2,     1,     3,     0,     1,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     1,     1,
       3,     4,     4,     3,     2,     2,     3,     3,     3,     3,
       3,     1,     1,     4,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     3,     0,     1,     6,     7,     7,     7,
       8,     3,     4,     0,     2,     0,     1,     0,     1,     2,
       2,     9,     0,     2,     0,     1,     1,     3,     3,     3,
       1,     2,     1,     1,     3,     2,     3,     2,     2,     1,
       3,     1,     3,     2,     3,     1,     2,     2,     2,     1,
       2,     1,     1,     1,     2,     3,     2,     3,     2,     2,
       2,     5,     5,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     2,     1,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     2,
       0,     1,     1,     1,     1,     1,     1,     0,     1,     0,
       1,     1,     5,     0,     3,     0,     2,     3,     0,     1,
       2,     1,     1,     1,     1,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     2,     1,     1,     2,     2,
       2,     4,     3,     1,     3,     2,     1,     2,     2,     2,
       2,     2,     2,     2,     1,     3,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     2,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     0,     2,     0,
       1,     1,     2,     2,     1,     2,     2,     0,     1,     1,
       1,     3,     1,     3,     0,     1,     0,     4,     0,     1,
       5,     0,     3,     3,     1,     0,     2,     2,     2,     0,
       3,     3,     6,     6,     1,     1,     2,     2,     2,     2,
       2,     1,     1,     0,     1,     1,     1,     1,     0,     1,
       0,     1,     1,     2,     1,     3,     0,     1,     1,     2,
       1,     0,     1,     1,     2,     1,     1,     3,     2,     1,
       1,     3,     3,     0,     1,     2,     2,     1,     1,     1,
       1,     1,     3,     1,     2,     5,     3,     1,     1,     4,
       0,     1,     0,     2,     1,     3,     4,     4,     0,     5,
       0,     5,     0,     5,     0,     5,     0,     4,     0,    10,
       7,     6,     6,     6,     4,     7,     7,     5,     8,     7,
       5,     5,     5,     5,     0,     2,     8,     3,     0,     1,
       1,     2,     2,     2,     2,     5,     3,     3,     3,     3,
       5,     4,     3,     4,     4,     0,     2,     2,     1,     2,
       2,     2,     2,     3,     0,     3,     1,     4,     0,     3,
       0,     2,     0,     1,     1,     2,     1,     3,     1,     2,
       0,     1,     1,     3,     2,     2,     3,     6,     5,     3,
       4,     4,     4,     4,     5,     4,     3,     3,     8,     7,
       4,     4,     1,     1,     0,     1,     2,     2,     1,     1,
       1,     3,     3,     1,     3,     1,     3,     6,     5,     2,
       6,     5,     4,     4,     3,     3,     3,     2,     2,     6,
       8,     5,     4,     4,     3,     5,     5,     5,     5,     1,
       3,     1,     1,     1,     0,     1,     1,     2,     2,     3,
       1,     1,     3,     1,     1,     0,     1,     0,     1,     0,
       1,     1,     0,     2,     1,     0,     1,     1,     1,     2,
       2,     2,     5,     0,     1,     3,     0,     4,     3,     0,
       1,     1,     3,     3,     2,     2,     4,     0,     3,     0,
       3,     0,     3,     0,     3,     0,     1,     1,     3,     1,
       1,     0,     2,     1,     3,     3,     3,     1,     4,     0,
       1,     1,     5,     0,     1,     1,     2,     1,     1,     1,
       5,     0,     3,     0,     5,     4,     2,     4,     0,     1,
       1,     2,     1,     1,     1,     1,     1,     2,     4,     0,
       1,     1,     6,     0,     4,     3,     3,     5,     1,     3,
       3,     5,     7,     1,     3,     2,     1,     1,     8,     5,
       1,     3,     3,     4,     0,     4,     0,     2,     1,     1,
       1,     3,     2,     4,     5,     4,     5,     3,     4,     3,
       1,     4,     4,     4,     4,     3,     3,     1,     9,     8,
       0,     1,     2,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     1,     0,     1,     2,     1,     3,     4,     4,
       1,     1,     2,     0,     1,     2,     1,     2,     3,     1,
       1,     1,     2,     0,     2,     2,     1,     1,     0,     2,
       3,     3,     3,     2,     3,     4,     3,     4,     3,     4,
       1,     3,     4,     3,     4,     1,     3,     4,     5,     7,
       6,     8,     6,     5,     6,     4,     3,     5,     4,     6,
       3,     4,     1,     1,     0,     3,     3,     3,     3,     3,
       3,     5,     5,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     1,     3,     2,
       2,     2,     2,     1,     3,     5,     6,     2,     4,     7,
       2,     7,     5,     6,     6,     4,     4,     5,     3,     3,
       1,     1,     0,     1,     4,     6,     2,     4,     4,     4,
      10,     6,     8,     6,     4,     4,     6,     4,     4,     4,
       6,     4,     7,     7,     7,     6,     6,     6,     6,     3,
       4,     6,     8,     2,     2,     8,     8,     6,     6,     1,
       6,     6,     8,     8,     6,     8,     6,     2,     8,     8,
       2,     2,     2,     4,     4,     4,     4,     3,     8,     6,
       8,     4,     6,     4,     6,     8,     4,     3,     6,     4,
       6,     4,     7,     7,    10,     1,     4,     4,     4,     4,
       4,     6,     4,     4,     6,     2,     3,     0,     4,     0,
       3,     0,     1,     1,     3,     2,     1,     1,     5,     6,
       5,     5,     5,     7,     5,     6,     5,     6,     5,     6,
       5,     6,     5,     5,     5,     5,     5,     6,     8,     4,
       4,     4,     4,     4,     5,     7,     7,     6,     6,     9,
       0,     3,     3,     0,     2,     0,     2,     2,     0,     2,
       2,     0,     1,     2,     1,     1,     1,     3,     4,     0,
       1,     0,     3,     0,     3,     0,     3,     1,     1,     2,
       2,     2,     4,     2,     4,     1,     2,     2,     2,     4,
       0,     3,     2,     2,     3,     1,     1,     1,     4,     2,
       3,     1,     4,     0,     1,     0,     2,     0,     3,     3,
       1,     2,     2,     3,     2,     1,     1,     2,     1,     2,
       1,     2,     2,     2,     1,     1,     2,     0,     1,     1,
       3,     2,     0,     2,     1,     3,     1,     3,     0,     1,
       0,     2,     4,     5,     1,     1,     4,     1,     1,     5,
       7,     5,     7,     3,     3,     3,     4,     4,     1,     2,
       2,     1,     3,     3,     0,     1,     0,     1,     0,     1,
       4,     1,     1,     1,     1,     1,     1,     3,     5,     3,
       3,     4,     3,     3,     3,     4,     8,     4,     1,     3,
       3,     7,     4,     0,     1,     0,     1,     1,     2,     2,
       3,     3,     1,     1,     2,     0,     2,     3,     3,     1,
       1,     6,     6,     1,     2,     0,     1,     1,     0,     1,
       1,     1,     1,     3,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     2,     0,     1,
       0,     1,     2,     0,     2,     2,     3,     3,     1,     4,
       0,     3,     1,     3,     0,     2,     1,     3,     3,     0,
       4,     3,     1,     0,     1,     3,     1,     2,     0,     1,
       3,     3,     1,     0,     1,     1,     1,     0,     1,     2,
       1,     3,     3,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     2,     1,     2,     6,
       2,     1,     3,     0,     6,     6,     4,     6,     4,     5,
       4,     4,     5,     4,     4,     4,     5,     5,     4,     6,
       4,     1,     3,     1,     3,     0,     2,     0,     1,     0,
       1,     1,     3,     1,     1,     8,     9,     8,     6,     7,
       6,     0,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     4,     1,     3,     4,     3,     1,     2,     1,     1,
       1,     1,     3,     1,     1,     1,     0,     1,     3,     0,
       1,     3,     1,     1,     1,     0,     5,    10,     0,     1,
       3,     1,     3,     0,     1,    10,     7,     8,     0,     2,
       0,     2,     1,     1,     1,     4,     0,     2,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     6,     2,     2,     0,
       6,     0,     7,     6,     2,     5,     5,     2,     2,     1,
       4,     3,     2,     2,     2,     3,     2,     2,     1,     1,
       3,     5,     4,     3,     3,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     2,     0,     2,
       0,     2,     1,     3,     3,     1,     1,     1,     1,     1,
       3,     1,     1,     0,     3,     1,     0,     1,     1,     0,
       4,     0,     4,     1,     0,     3,     0,     3,     3,     1,
       2,     2,     2,     2,     2,     3,     1,     1,     1,     1,
       1,     1,     0,     1,     0,     3,     3,     3,     1,     0,
       2,     0,     4,     0,     3,     0,     1,     0,     2,     0,
       3,     3,     2,     2,     3,     0,     1,     1,     2,    18,
       1,     1,     0,     1,     0,     1,     1,     0,     1,     1,
       1,     0,     2,     2,     1,     3,     4,     3,     3,     0,
       2,     2,     1,     3,     3,     0,     2,     0,     4,     0,
       3,     1,     1,     0,     3,     2,     3,     1,     1,     2,
       0,     2,     3,     1,     3,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     2,     1,     1,     3,     5,     2,     1,
       1,     1,     1,     1,     3,     5,     1,     3,     2,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       2,     2,     5,     5,     7,     7,     3,     3,     3,     6,
       6,     6,     4,     0,     2,     4,     6,     1,     3,     1,
       2,     2,     0,     2,     1,     3,     2,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     0,     2,     2,     2,     2,     2,     3,     3,     4,
       6,     2,     3,     3,     2,     1,     3,     3,     2,     2,
       1,     0,     2,     3,     0,     2,     2,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     4,     1,     1,     1,     3,     3,     1,     1,     2,
       2,     0,     3,     2,     1,     1,     3,     4,     2,     6,
       4,     3,     6,     7,    10,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     4,     7,     0,     9,
       8,     6,     5,     9,     0,    11,     7,     0,     1,     1,
       1,     0,     1,     1,     3,     2,     3,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     3,     2,     2,     2,     2,
       2,     2,     2,     2,     1,     1,     2,     2,     2,     0,
       3,     0,     1,     3,     1,     2,     2,     2,     1,     3,
       3,     1,     3,     1,     3,     1,     3,     0,     3,     0,
       3,     4,     5,     4,     6,     6,     7,     1,     7,     9,
       5,     6,     8,     4,     7,     7,     8,     2,     1,     3,
       1,     3,     0,     3,     1,     3,     0,     2,     2,     2,
       2,     0,     3,     0,     3,     0,     3,     4,     3,     3,
       0,     3,     0,     3,     0,     1,     0,     3,     2,     0,
       1,     2,     0,     1,     4,     4,     5,     2,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     3,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     3,     3,     3,     0,     3,     3,     0,     7,
       2,     0,     3,     4,     4,     1,     1,     0,     2,     0,
      12,     7,     6,     0,     0,     0,     0,    14,     2,     0,
       4,     0,     3,     2,     0,     0,     4,     0,     3,     1,
       1,     0,     1,     1,     2,     0,     6,     5,     3,     4,
       4,     3,     4,     3,     3,     0,     2,     1,     3,     5,
       1,     1,     0,     1,     1,     0,     2,     0,     1,     3,
       5,     3,     3,     3,     1,     3,     4,     6,    10,     1,
       5,     0,     2,     3,     1,     1,     0,     3,     1,     3,
       1,     3,     1,     2,     0,     3,     0,     1,     1,     0,
       1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 3008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 26232 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 3013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 26246 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 3023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 26268 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 3041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 26276 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 3048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 26292 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 3060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 26319 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 10:
#line 3085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 26328 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 13:
#line 3097 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 26334 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 15:
#line 3103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26340 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 3104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26346 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 3105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26352 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 19:
#line 3107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26358 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 3108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26364 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 22:
#line 3110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26370 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 3111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26376 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 3112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26382 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 26:
#line 3114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26388 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 3115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26394 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 29:
#line 3117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26400 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 31:
#line 3119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26406 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 33:
#line 3121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26412 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 3122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26418 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 3123 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26424 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 3124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26430 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 42:
#line 3130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26436 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 46:
#line 3134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26442 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 3135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26448 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 3136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26454 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 50:
#line 3138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26460 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 3139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26466 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 54:
#line 3142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26472 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 56:
#line 3144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26478 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 3145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26484 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 3146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26490 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 3147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26496 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 3148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26502 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 3149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26508 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 3150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26514 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 3151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26520 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 3153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26526 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 3154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26532 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 3155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26538 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 3156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26544 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 3158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26550 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 3159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26556 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 3161 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26562 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 3162 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26568 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 3164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26574 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 3168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26580 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 3169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26586 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 3170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26592 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 3171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26598 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 3174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26604 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 3175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26610 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 3177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26616 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 3178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26622 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 3179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26628 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 3181 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 26634 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 3184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26640 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 3185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26646 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 3187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26652 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 3188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26658 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 3190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26664 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 3191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26670 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 3193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26676 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 3194 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26682 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 3195 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 26688 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 3200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 26699 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 3215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 26720 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 3235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 26731 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 3242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 26742 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 114:
#line 3252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 26753 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 115:
#line 3259 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26759 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 116:
#line 3264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            sp_head *sp= lex->sphead;
            if (!sp)
            {
              my_message(ER_SYNTAX_ERROR, ER_THD(thd, ER_SYNTAX_ERROR), MYF(0));
              MYSQL_YYABORT;
            }

            LEX_CSTRING query= make_string(thd,
                                           (yylsp[-1]).raw.end,
                                           (yylsp[0]).raw.end);

            lex->sql_command= SQLCOM_EXECUTE_IMMEDIATE;
            sp_instr_stmt *i= NEW_PTN sp_instr_stmt(sp->instructions(),
                                                    lex, query);
            if (i == NULL)
              MYSQL_YYABORT;
            i->is_dynamic_stmt = true;
            i->m_dynamic_stmt  = (yyvsp[0].item);

            if (sp->add_instr(thd,i))
              MYSQL_YYABORT;
          }
#line 26790 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 3304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 26801 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 3316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 26813 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 3324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 26823 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 3335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 26838 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 3346 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26844 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 3348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26858 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 3358 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26864 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 3367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 26875 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 3374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 26886 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 3381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 26897 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 3388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 26908 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 3395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 26919 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 3402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 26931 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 3410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 26942 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 3419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 26952 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 3425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26960 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 3432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 26971 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 3439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 26980 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 3447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 26991 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 3456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 27001 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 3462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 27009 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 3468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 27021 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 3476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 27031 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 3484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 27041 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 3490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 27049 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 3497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 27060 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 3504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 27069 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 3512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 27082 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 3524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 27092 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 3530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 27100 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 3537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 27111 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 3544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 27120 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 3552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 27131 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 3567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 27139 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 3571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 27147 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 3575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 27155 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 3579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 27163 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 3583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 27177 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 3593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 27185 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 3597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 27193 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 3601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 27202 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 3606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 27217 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 3617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 27226 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 3622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 27234 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 3626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 27242 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 3630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 27250 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 3634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 27258 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 3638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 27266 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 3642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 27274 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 3646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 27283 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 3651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 27291 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 3655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 27299 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 3659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 27307 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 3663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 27317 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 3669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 27355 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 3703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 27363 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 3707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 27371 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 3711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 27379 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 3715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 27389 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 3732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 27397 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 3738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 27407 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 3744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 27417 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 3753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 27425 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 3757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 27445 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 3773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 27453 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 3777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 27464 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 3787 "sql_yacc.yy" /* yacc.c:1646  */
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
#line 27473 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 3792 "sql_yacc.yy" /* yacc.c:1646  */
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[0].lexer.lex_str).str);
         Lex->mi.channel= (yyvsp[0].lexer.lex_str).str;
         Lex->mi.for_channel= true;
       }
#line 27489 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 3808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 27502 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 3818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 27515 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 3828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 27523 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 3833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 27531 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 3840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 27539 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 3850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 27549 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 3859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 27561 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 3867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 27572 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 3874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->oracle_options & ORA_CREATE_OR_REPLACE)
              Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE;
          }
#line 27581 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 3881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-3].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 27595 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 3892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27618 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 3912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27640 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 3931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27663 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 3951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 27680 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 3968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 27688 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 3973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 27696 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 3980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_OOM, MYF(0)); /* purecov: inspected */
          }
#line 27706 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 3986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27722 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 3998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27738 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 4011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 27755 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 4024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27771 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 4039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 27779 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 4044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 27787 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 4053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27798 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 4061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27809 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 4069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27820 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 4084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 27828 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 4088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 27836 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 4092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 27844 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 4096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 27852 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 4100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 27861 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 4105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 27869 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 4109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 27877 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 4116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 27897 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 4136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 27909 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 4147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 27920 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 4156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 27930 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 4164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27936 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 4166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27946 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 4172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27956 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 4178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27966 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 4187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27977 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 4194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27987 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 4204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27997 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 4212 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28003 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 4218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 28013 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 4224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 28023 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 4232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28029 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 4234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 28038 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 4241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 28088 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 4287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 28102 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 4316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 28120 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 4330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 28140 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 4348 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28146 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 4349 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28152 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 4353 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28158 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 4354 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28164 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 4360 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 28170 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 4362 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 28176 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 4364 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 28182 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 4366 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 28188 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 4368 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 28194 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 4370 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 28200 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 4372 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28206 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 4377 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 28212 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 4378 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 28218 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 4379 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 28224 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 4384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 28232 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 4388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 28240 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 4395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 28248 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 4401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 28254 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 4403 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 28262 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 4421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
#line 28314 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 4483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;
            if (dflt_value_item)
              ITEMIZE(dflt_value_item, &dflt_value_item);

            if (MYSQL_PARSE_MODE == thd->variables.m_opt_parse_mode && dflt_value_item)
            {
              my_error(ER_ORACLE_MARIADB_MIXED, MYF(0), "");
              MYSQL_YYABORT;
            }

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-4].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-4].lexer.lex_str).str, (yyvsp[-4].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable::enum_mode var_mode;
            if (MYSQL_PARSE_MODE == thd->variables.m_opt_parse_mode)
            {
              var_mode= (sp_variable::enum_mode)(yyvsp[-5].num);
            }
            else
            {
              var_mode= (sp_variable::enum_mode)(yyvsp[-3].num);
            }

            CONTEXTUALIZE((yyvsp[-2].type));
            enum_field_types field_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-4].lexer.lex_str),
                                                   field_type,
                                                   var_mode);

            if (ORACLE_PARSE_MODE == thd->variables.m_opt_parse_mode)
            {
              spvar->mode= (sp_variable::enum_mode)(yyvsp[-3].num);
              if (spvar->mode != sp_variable::MODE_IN && dflt_value_item)
              {
                my_error(ER_SYNTAX_ERROR, MYF(0), "");
                MYSQL_YYABORT;
              }
            }

            spvar->type= field_type;
            spvar->default_value= dflt_value_item;

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                      (yyvsp[-2].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-2].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
#line 28398 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 4565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 28404 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 4566 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 28410 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 4567 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 28416 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 4568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 28422 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 4572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 28428 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 4574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->variables.m_opt_parse_mode != ORACLE_PARSE_MODE)
            {
              my_error(ER_ORACLE_MARIADB_MIXED, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.num)= sp_variable::MODE_IN;
          }
#line 28441 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 4583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->variables.m_opt_parse_mode != ORACLE_PARSE_MODE)
            {
              my_error(ER_ORACLE_MARIADB_MIXED, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.num)= sp_variable::MODE_OUT;
          }
#line 28454 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 4592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->variables.m_opt_parse_mode != ORACLE_PARSE_MODE)
            {
              my_error(ER_ORACLE_MARIADB_MIXED, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.num)= sp_variable::MODE_INOUT;
          }
#line 28467 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 4603 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28473 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 4608 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28479 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 4614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28488 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 4619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28497 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 4624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28506 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 4632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28515 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 4637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28524 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 4642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28533 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 4649 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28539 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 4654 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28545 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 4660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 28553 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 4664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 28578 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 4692 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.maybe_null= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 28677 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 4787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 28698 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 4804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 28743 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 4845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 28781 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 4882 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 28794 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 4891 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 28859 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 4954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 28865 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 4955 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 28871 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 4961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28877 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 4963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 28883 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 4968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 28907 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 4991 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 28922 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 5006 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 28945 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 5027 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28951 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 5028 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28957 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 5033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 28965 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 5037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 28982 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 5050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 28992 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 5056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 29002 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 5062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 29012 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 5071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 29026 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 5084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 29056 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 5110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 29062 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 5115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 29068 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 5117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 29074 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 5122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 29080 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 5124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 29086 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 5129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 29096 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 5136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 29106 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 5148 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 29112 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 5150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 29136 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 5170 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 29142 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 5176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 29148 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 5178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 29154 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 5180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 29160 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 5182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 29166 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 5184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 29172 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 5186 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 29178 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 5188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 29184 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 5190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 29190 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 5192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 29196 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 5194 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 29202 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 5196 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 29208 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 5198 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 29214 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 5203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 29229 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 5217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 29246 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 5233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29252 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 5235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29258 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 5237 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 29264 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 5242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 29274 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 5248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 29284 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 5257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 29294 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 5263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 29304 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 5272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 29314 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 5280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 29346 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 5308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 29355 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 5316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 29361 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 5318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 29367 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 5327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 29373 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 5332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 29383 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 5338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 29393 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 5347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 29403 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 5355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 29409 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 5357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 29415 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 5359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 29421 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 5361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 29427 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 5363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 29433 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 5365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 29439 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 5367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 29445 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 5369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 29451 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 5371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 29457 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 5373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 29463 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 5375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 29469 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 5377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 29475 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 5379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 29481 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 5384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 29505 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 5404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 29529 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 5427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 29538 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 5432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 29547 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 5474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sphead->reset_lex(thd);
            Lex->sphead->m_tmp_query= (yylsp[-1]).raw.end;

            sp_name *call_spname= makeSpname(thd,NULL,&(yyvsp[-1].lexer.lex_str));
            if (!call_spname)
              MYSQL_YYABORT;

            // initCallCmdAndAddRoutineT(thd, call_spname, SP_TYPE_PROCEDURE);
            Parse_tree_root * call_tree = NEW_PTN PT_call(call_spname, (yyvsp[0].item_list2));
            MAKE_CMD(call_tree);

            sp_head *sp= Lex->sphead;
            const char *expr_start_ptr= (yylsp[-1]).raw.end;
            LEX_CSTRING query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);

            if (addSpInstrStmt(thd, yychar == YYEMPTY, &query))
              MYSQL_YYABORT;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29576 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 5499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Lex->sphead->reset_lex(thd);
            Lex->sphead->m_tmp_query= (yylsp[-1]).raw.end;
            sp_name *call_spname = makeSpname(thd, &(yyvsp[-3].lexer.lex_str), &(yyvsp[-1].lexer.lex_str));
            if (!call_spname)
              MYSQL_YYABORT;

            // initCallCmdAndAddRoutineT(thd, call_spname, SP_TYPE_PROCEDURE);
            Parse_tree_root * call_tree = NEW_PTN PT_call(call_spname, (yyvsp[0].item_list2));
            MAKE_CMD(call_tree);

            sp_head *sp= Lex->sphead;
            const char *expr_start_ptr= (yylsp[-1]).raw.end;
            LEX_CSTRING query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);

            if (addSpInstrStmt(thd,yychar == YYEMPTY,&query))
              MYSQL_YYABORT;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29603 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 5526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[0].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 29625 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 5544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            //LEX *lex= Lex;
            //sp_head *sp= lex->sphead;
            //sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            //sp_label *lab= pctx->pop_label();
            //sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 29637 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 5554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab = pctx->push_label(thd,
                                             EMPTY_CSTR,
                                             sp->instructions());

            lab->type= sp_label::ITERATION;
          }
#line 29655 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 5568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            //LEX *lex= Lex;
            //sp_head *sp= lex->sphead;
            //sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // sp->m_parser_data.do_backpatch(pctx->pop_label(),
            //                                sp->instructions());
          }
#line 29668 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 5580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->variables.m_opt_parse_mode != ORACLE_PARSE_MODE)
            {
              my_error(ER_ORACLE_MARIADB_MIXED, MYF(0), "");
              MYSQL_YYABORT;
            }

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_label *lab= NULL;
            sp_head *sp= lex->sphead;

            LEX_CSTRING lable_name= (yyvsp[-1].lex_cstr);

            sp_pcontext *ctx= lex->get_sp_current_parsing_ctx();

            if ((0 == my_strcasecmp(system_charset_info, lable_name.str, ""))
                && (lable_name.length == 0))
            {
              uint cur_index= 0;
              if ((yyvsp[0].num) > 0)
                lab= ctx->find_label_by_index(SP_EXIT_LABEL_INDEX,
                                              &cur_index,
                                              sp_label::ITERATION);
              else
                lab= ctx->get_recent_lable_accord_type(sp_label::ITERATION);
            }
            else
            {
              lab= ctx->find_label((yyvsp[-1].lex_cstr));
            }
            if (!lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "EXIT", (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_jump *i;
              uint ip= sp->instructions();
              uint n;
              /*
                When jumping to a BEGIN-END block end, the target jump
                points to the block hpop/cpop cleanup instructions,
                so we should exclude the block context here.
                When jumping to something else (i.e., SP_LAB_ITER),
                there are no hpop/cpop at the jump destination,
                so we should include the block context here for cleanup.
              */
              bool exclusive= (lab->type == sp_label::BEGIN);
              n= ctx->diff_handlers(lab->ctx, exclusive);
              if (n)
              {
                sp_instr_hpop *hpop= new sp_instr_hpop(ip++, ctx);
                if (hpop == NULL)
                  MYSQL_YYABORT;
                sp->add_instr(thd, hpop);
              }
              n= ctx->diff_cursors(lab->ctx, exclusive);
              if (n)
              {
                sp_instr_cpop *cpop= new sp_instr_cpop(ip++, ctx, n);
                if (cpop == NULL)
                  MYSQL_YYABORT;
                sp->add_instr(thd, cpop);
              }
              i= new sp_instr_jump(ip, ctx);
              if (i == NULL ||  sp->add_instr(thd,i))
                MYSQL_YYABORT;

              sp->m_parser_data.add_backpatch_entry(i, lab);  /* Jumping out */

              if ((yyvsp[0].num))                      // exit when expr, jump if not
              {
                uint dest= sp->instructions();
                sp->m_parser_data.do_backpatch(ctx->pop_label(), dest);
              }
            }
          }
#line 29752 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 5663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstr)= EMPTY_CSTR;
          }
#line 29760 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 5666 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 29766 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 5670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 29772 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 5672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Lex->sphead->m_parser_data.new_cont_backpatch();
            Lex->sphead->reset_lex(thd);
          }
#line 29782 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 5678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip,lex,(yyvsp[0].item),
                                                      expr_query);
            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(i, ctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            (yyval.num)= 1;
          }
#line 29818 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 5713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (Lex->parse_place == IN_AS_STATEMENT)
            {
              my_message(ER_SYNTAX_ERROR, ER_THD(thd, ER_SYNTAX_ERROR), MYF(0));
              MYSQL_YYABORT;
            }
            Lex->parse_place= IN_DECLARE_STATEMENT;

            sp_pcontext *ctx= lex->get_sp_current_parsing_ctx();

            ctx= ctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);
            lex->set_sp_current_parsing_ctx(ctx);
          }
#line 29838 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 5729 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 29844 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 5734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Lex->sphead->reset_lex(thd);
          }
#line 29853 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 5739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (!(yyvsp[0].item) && !isReturnCmdLegal(thd, sp, NULL))
                return true;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i= NEW_PTN
                sp_instr_freturn(sp->instructions(), sp->m_type,
                                 lex, (yyvsp[0].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL || sp->add_instr(thd, i) || sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29902 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 5786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 29908 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 5792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            //THD *thd= YYTHD;
            //Lex->sphead->set_body_start(thd, yylloc.cpp.start);
            Lex->sphead->m_parser_data.new_cont_backpatch();
          }
#line 29918 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 5798 "sql_yacc.yy" /* yacc.c:1646  */
    {
              sp_head *sp= Lex->sphead;
              sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29927 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 5805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Lex->sphead->reset_lex(thd);
          }
#line 29936 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->get_sp_current_parsing_ctx();

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-3]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[-1]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            uint ip= sp->instructions();
            sp_instr_jump_if_not *i= new (lex->thd->mem_root)
              sp_instr_jump_if_not(ip, lex, (yyvsp[-1].item), expr_query);
            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(i, ctx->push_label(thd, NULL_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd,i))
              MYSQL_YYABORT;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29970 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->get_sp_current_parsing_ctx();

            uint ip= sp->instructions();
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, ctx);
            if (i == NULL || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            uint dest= sp->instructions();
            sp->m_parser_data.do_backpatch(ctx->pop_label(), dest);
            sp->m_parser_data.add_backpatch_entry(i,
                                  ctx->push_label(thd, NULL_CSTR, 0));
          }
#line 29991 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 5857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->get_sp_current_parsing_ctx();
            uint dest= sp->instructions();
            lex->sphead->m_parser_data.do_backpatch(ctx->pop_label(),dest);
          }
#line 30003 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5874 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 30009 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 30019 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 30032 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD &&
                lex->sql_command != SQLCOM_EXECUTE_IMMEDIATE)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 30085 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5945 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 30097 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5953 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), sp->m_type,
                                       lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 30148 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 6002 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab= pctx->push_label(thd,
                                            EMPTY_CSTR,
                                            sp->instructions());

            lab->type= sp_label::ITERATION;
          }
#line 30165 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 6015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 30178 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 6027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30236 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 6084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30284 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 6131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30308 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 6151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            uint offset;
            sp_head *sp= Lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_instr_copen *copen= NULL;
            sp_instr_cpush *cpush= NULL;

            if (!pctx->find_cursor((yyvsp[-2].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            copen= new sp_instr_copen(sp->instructions(), pctx, offset);
            if (copen == NULL || sp->add_instr(thd, copen))
              MYSQL_YYABORT;

            if (!(cpush= pctx->get_cpush_by_cursor_name((yyvsp[-2].lexer.lex_str), false)))
            {
              my_error(ER_UNKNOWN_ERROR, MYF(0), "");
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            //if (lex->is_metadata_used())
            {
              cursor_query= make_string(thd, (yylsp[-1]).raw.end, (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            if ((yyvsp[0].sp_cursor_open_stmt).statement)
            {
              // already parse lex
              cpush->set_lex((yyvsp[0].sp_cursor_open_stmt).lex, true);
              cpush->get_lex()->sp_lex_in_use= true;
              cpush->m_cursor_query_parsed= true;
              cpush->set_query(&cursor_query);
            }
            else
            {
              cpush->set_splocal((yyvsp[0].sp_cursor_open_stmt).item);
              cpush->m_cursor_query_parsed= false;
            }
          }
#line 30362 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 6204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            THD *thd= YYTHD;
            sp_variable *spv= NULL;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* We're compiling a stored procedure and found a variable */
            if (!lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }

            Item_splocal *splocal;
            splocal= new (thd->mem_root)
                       Item_splocal((yyvsp[0].lexer.lex_str), spv->offset, spv->type,
                                    (uint)((yyvsp[0].lexer.lex_str).str - (char*)0),
                                    (uint)((yyvsp[0].lexer.lex_str).length));
            if (splocal == NULL)
              MYSQL_YYABORT;
#ifndef DBUG_OFF
            splocal->m_sp= lex->sphead;
#endif
            (yyval.sp_cursor_open_stmt).item= splocal;
            (yyval.sp_cursor_open_stmt).statement= false;
            lex->safe_to_cache_query= 0;
          }
#line 30400 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 6238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_cursor_open_stmt).lex= (yyvsp[0].lex);
            (yyval.sp_cursor_open_stmt).statement= true;
          }
#line 30409 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 6246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30433 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 6266 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30439 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 6271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30463 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 6300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 30485 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 6318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 30507 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 6338 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 30519 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 6346 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 30560 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 6384 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 30582 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 6402 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 30595 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 6425 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 30609 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 6435 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 30655 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 6480 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 30663 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 6487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 30671 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 6494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 30679 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 6511 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 30691 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 6519 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 30736 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 6561 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 30745 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 6569 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 30757 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 6577 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 30798 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 6615 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 30807 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 6623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30825 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 6641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 30847 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 6659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 30868 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 507:
#line 6678 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 30874 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 6679 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 30880 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 6684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 30900 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 6700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 30919 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 6718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab= pctx->find_label((yyvsp[-2].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-2].lex_cstr).str);
              MYSQL_YYABORT;
            }
            lex->name= to_lex_string((yyvsp[-2].lex_cstr));
          }
#line 30937 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 6732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstr).str)
            {
              LEX *lex= Lex;
              sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
              sp_label *lab= pctx->find_label((yyvsp[-5].lex_cstr));
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 30955 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 6746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SET_OPTION;
            //mysql_init_select(lex);
            lex->option_type= OPT_SESSION;
            lex->var_list.empty();
            lex->autocommit= 0;

            //sp_head *sp= lex->sphead;
            // const char *expr_start_ptr= sp->m_parser_data.get_option_start_ptr();
            sp_create_assignment_lex(thd, (yylsp[0]).raw.end);
          }
#line 30973 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 6760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            if (!(yyvsp[0].item))
              MYSQL_YYABORT;
            THD* thd= YYTHD;
            LEX *lex= Lex;
            sp_pcontext *spc= lex->get_sp_current_parsing_ctx();
            sp_variable *spv= NULL;
            if (!spc || !(spv= spc->find_variable((yyvsp[-3].lexer.lex_str).str, (yyvsp[-3].lexer.lex_str).length, false)))
              MYSQL_YYABORT;

            if (set_local_variable(thd, spv, (yyvsp[0].item)))
               MYSQL_YYABORT;

            //if (lex->sphead->restore_lex(thd))
              //  MYSQL_YYABORT;

            //sp_head *sp= lex->sphead;
            //const char *expr_end_ptr= sp->m_parser_data.get_parameter_end_ptr();
            if (sp_create_assignment_instr(thd, (yylsp[0]).raw.end))
              MYSQL_YYABORT;
          }
#line 31000 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 6786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->name= NULL_STR; // Unlabeled blocks get an empty label
          }
#line 31008 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 6790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).length)
            {
              sp_head *sp = Lex->sphead;
              if (my_strnncoll(system_charset_info, (const uchar*)(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               (const uchar*)sp->m_name.str, sp->m_name.length))
              {
                my_error(ER_SP_NAME_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str, sp->m_name.str);
                MYSQL_YYABORT;
              }
            }
          }
#line 31025 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 6805 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 31040 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 6816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 31049 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 6824 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            if (!IsCurCtxCreated(lex))
            {
              sp_pcontext *child_pctx=
                parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

              lex->set_sp_current_parsing_ctx(child_pctx);
            }
            lex->parse_place = IN_PARSE_INVALID;
          }
#line 31070 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 6843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 31104 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 6877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 31121 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 6890 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 31133 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 6898 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 31175 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 6939 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 31194 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 6956 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 31206 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 6964 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 31248 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 7007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 31265 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 7020 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31271 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 7022 "sql_yacc.yy" /* yacc.c:1646  */
    {                           /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 31283 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 7031 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31289 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 7033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (ORACLE_PARSE_MODE != thd->variables.m_opt_parse_mode)
            {
              my_error(ER_ORACLE_MARIADB_MIXED, MYF(0),"");
              MYSQL_YYABORT;
            }
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            //sp_head *sp= lex->sphead;
            //sp->reset_lex(thd);
            //sp->m_parser_data.push_expr_start_ptr(@1.raw.end);

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            pctx= pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);
            lex->set_sp_current_parsing_ctx(pctx);
            Lex->parse_place= IN_FOR_LOOP;
          }
#line 31311 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 7052 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 31317 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 7056 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31323 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 7058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (MYSQL_PARSE_MODE == thd->variables.m_opt_parse_mode)
            {
              my_error(ER_SYNTAX_ERROR, MYF(0), "");
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab = pctx->pop_label();
            sp->m_parser_data.do_backpatch(lab,sp->instructions());
          }
#line 31341 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 7074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab = pctx->pop_label();
            sp->m_parser_data.do_backpatch(lab,sp->instructions());

            if (MYSQL_PARSE_MODE == thd->variables.m_opt_parse_mode)
            {
              if(lab)
              {
                DBUG_ASSERT(lab->name.length == 0);
              }
            }
          }
#line 31362 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 7094 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-1]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i= NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 31403 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 7134 "sql_yacc.yy" /* yacc.c:1646  */
    {                               /*$7*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 31422 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 7151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Lex->sphead->reset_lex(thd);
          }
#line 31431 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 7156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= Lex;

            DBUG_ASSERT(lex->sql_command == SQLCOM_SELECT);

            if (lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT,
                         ER_THD(thd, ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }
            lex->sp_lex_in_use= TRUE;
            (yyval.lex)= lex;
            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 31456 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 7181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            uint pos;
            LEX *lex= thd->lex;
            sp_variable *spv;
            sp_pcontext *spc= lex->get_sp_current_parsing_ctx();

            if (spc && (spv= spc->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              Item_splocal *splocal;
              splocal= new (thd->mem_root)
                        Item_splocal((yyvsp[0].lexer.lex_str), spv->offset, spv->type,
                                     (uint)((yyvsp[0].lexer.lex_str).str - (char*)0),
                                     (uint)((yyvsp[0].lexer.lex_str).length));
              if (splocal == NULL)
                MYSQL_YYABORT;
#ifndef DBUG_OFF
              splocal->m_sp= lex->sphead;
#endif
              (yyval.sp_for_loop_ident).item= splocal;
              (yyval.sp_for_loop_ident).name= (yyvsp[0].lexer.lex_str);
              (yyval.sp_for_loop_ident).type= 2 ; // 0, err; 1, literal; 2, sp_local; 3, implicit cusor
              lex->safe_to_cache_query=0;
            }
            else if (spc && spc->find_cursor((yyvsp[0].lexer.lex_str), &pos, false))
            {
              (yyval.sp_for_loop_ident).item= NULL;
              (yyval.sp_for_loop_ident).name= (yyvsp[0].lexer.lex_str);
              (yyval.sp_for_loop_ident).type= 3;
            }
            else
            {
              (yyval.sp_for_loop_ident).type= 0;
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 31505 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 7226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_for_loop_ident).item= (yyvsp[0].item);
            (yyval.sp_for_loop_ident).type= 1;
          }
#line 31514 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 7233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 31520 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 7234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31526 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 7239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_for_loop_ident).item= NULL;
            (yyval.sp_for_loop_ident).type= 1;
            (yyval.sp_for_loop_ident).name= NULL_STR;
            (yyval.sp_for_loop_ident).empty= true;
          }
#line 31537 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 7246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_for_loop_ident).item= (yyvsp[0].sp_for_loop_ident).item;
            (yyval.sp_for_loop_ident).type= (yyvsp[0].sp_for_loop_ident).type;
            (yyval.sp_for_loop_ident).name= (yyvsp[0].sp_for_loop_ident).name;
            (yyval.sp_for_loop_ident).empty= false;
          }
#line 31548 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 7256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Lex->parse_place= IN_PARSE_INVALID;
            sp_pcontext *spct= Lex->get_sp_current_parsing_ctx();

            if ((yyvsp[-2].sp_for_loop_ident).type == 3)          /* for id in cursor_name */
            {
              spct->m_cursor_value_name= ((yyvsp[-5].lexer.lex_str)).str;
              if (!(yyvsp[-1].sp_for_loop_ident).empty)
              {
                my_error(ER_FOR_LOOP_SYNTAX_ERROR, MYF(0), "");
                MYSQL_YYABORT;
              }
              if (!init_for_loop_cursor(thd, (yyvsp[-2].sp_for_loop_ident).name))
                MYSQL_YYABORT;
            }
            else                /* for id in 1..var  note:literal or variable */
            {
              spct->m_cursor_value_name= NULL;
              if ((yyvsp[-1].sp_for_loop_ident).empty || ((yyvsp[-1].sp_for_loop_ident).type == 3))
              {
                my_error(ER_FOR_LOOP_SYNTAX_ERROR, MYF(0), "");
                MYSQL_YYABORT;
              }

              ITEMIZE((yyvsp[-2].sp_for_loop_ident).item, &((yyvsp[-2].sp_for_loop_ident).item));
              ITEMIZE((yyvsp[-1].sp_for_loop_ident).item, &((yyvsp[-1].sp_for_loop_ident).item));

              if (!init_for_loop_normal(thd, (yyvsp[-5].lexer.lex_str), (yyvsp[-2].sp_for_loop_ident).item, (yyvsp[-1].sp_for_loop_ident).item, (yyvsp[-3].num)))
                  MYSQL_YYABORT;
            }
          }
#line 31585 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 7289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            THD *thd= YYTHD;
            sp_pcontext *ctx= Lex->get_sp_current_parsing_ctx();

            if ((yyvsp[-6].sp_for_loop_ident).type == 3)        //it is cursor
            {
              uint ip= lex->sphead->instructions();
              sp_label *lab= ctx->last_label();
              lab->ip += 1;
              /* Jumping back */
              sp_instr_jump *i= new sp_instr_jump(ip, ctx, lab->ip);
              if (i == NULL || lex->sphead->add_instr(thd, i))
                MYSQL_YYABORT;

              lex->sphead->m_parser_data.do_cont_backpatch(lex->sphead->instructions());
              lex->set_sp_current_parsing_ctx(ctx->pop_context());
            }
            else                    //it is variable or literal
            {
              //const char *m_tmp_query= Lex->sphead->m_tmp_query;
              sp_create_assignment_lex(thd, (yylsp[0]).raw.end);
              //Lex->sphead->m_tmp_query= m_tmp_query;

              if (create_control_variable_assignment(thd, (yyvsp[-9].lexer.lex_str), (yyvsp[-7].num)))
                MYSQL_YYABORT;

              if (Lex->sphead->restore_lex(thd))
                MYSQL_YYABORT;

              if (sp_create_instr_jump(thd, 1))
                MYSQL_YYABORT;

              Lex->sphead->m_parser_data.do_cont_backpatch(Lex->sphead->instructions());
              lex->set_sp_current_parsing_ctx(ctx->pop_context());
            }
          }
#line 31627 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 7327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            //Lex->spcont->m_cursor_value_name= ($1).str;
            THD *thd= YYTHD;
            sp_pcontext *pctx= Lex->get_sp_current_parsing_ctx();
            pctx->m_cursor_value_name= ((yyvsp[-5].lexer.lex_str)).str;
            uint cursorIdx= pctx->current_cursor_count();;
            sp_instr_cpush *cpush;
            LEX_STRING *lexCursorName;

            LEX_CSTRING cursor_query= EMPTY_CSTR;
            //if (Lex->is_metadata_used())
            {
              cursor_query= make_string(thd, (yylsp[-3]).raw.end, (yylsp[-2]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            // declare variables
            if (declareImplicitVars(thd, (yyvsp[-2].lex), pctx))
              MYSQL_YYABORT;

            if (!(lexCursorName=createImplicitCursorName(cursorIdx)))
              MYSQL_YYABORT;

            // declare a cursor
            if (!(cpush= CreateInstrCpush(thd, (yyvsp[-2].lex), pctx, &cursor_query,
                                          lexCursorName, cursorIdx)))
              MYSQL_YYABORT;

            // open cursor, ctx only has one cursor, not check dup
            if (createInstrCopen(thd, lexCursorName, true))
              MYSQL_YYABORT;

            // fetch cursor
            if (createInstrCfetch(thd, cursorIdx, pctx->get_vars()))
              MYSQL_YYABORT;

            // configure a while loop
            Item_func_cursor_attribute *item_cursor_attr= NEW_PTN
                Item_func_cursor_attribute(thd, lexCursorName, cpush,
                                           Item_func_cursor_attribute::FOUND);
            pctx->push_cursor_attribute(item_cursor_attr);
            if (createInstrJumpIfNot(thd, item_cursor_attr))
              MYSQL_YYABORT;
          }
#line 31678 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 7374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            // sp_pcontext *ctx= lex->spcont;
            sp_pcontext *ctx = Lex->get_sp_current_parsing_ctx();

            uint ip= lex->sphead->instructions();
            sp_label *lab= ctx->last_label();
            lab->ip += 2;
            /* Jumping back */
            sp_instr_jump *i = new sp_instr_jump(ip, ctx, lab->ip);
            if (i == NULL ||
                lex->sphead->add_instr(thd,i))
              MYSQL_YYABORT;
            //lex->sphead->do_cont_backpatch();
            lex->sphead->m_parser_data.do_cont_backpatch(lex->sphead->instructions());

            //lex->spcont= ctx->pop_context();
            lex->set_sp_current_parsing_ctx(ctx->pop_context());
          }
#line 31703 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 7397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            if (!IsCurCtxCreated(lex))
            {
              sp_pcontext *child_pctx= parent_pctx->push_context(thd,
                                           sp_pcontext::REGULAR_SCOPE);
              lex->set_sp_current_parsing_ctx(child_pctx);
            }

            lex->parse_place= IN_PARSE_INVALID;
            lex->sphead->m_tmp_ip1= lex->sphead->instructions();
          }
#line 31724 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 7414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_tmp_ip2= Lex->sphead->instructions();
          }
#line 31732 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 7419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint _handlers= 0, _cursors= 0;
            sp_instr *i;

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            pctx->get_handlers_cursors_number(&_handlers, &_cursors);
            if (_handlers)
            {
              i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);
              if (i == NULL || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (_cursors)
            {
              i= new (lex->thd->mem_root)
                     sp_instr_cpop(sp->instructions(), pctx, _cursors);
              if (i == NULL || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            //lex->spcont= ctx->pop_context();
            //$$= lex->spcont->pop_label();
            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 31768 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 7453 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31774 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 7455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (MYSQL_PARSE_MODE == thd->variables.m_opt_parse_mode)
            {
              my_error(ER_ORACLE_MARIADB_MIXED, MYF(0), "");
              MYSQL_YYABORT;
            }

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_handler  *h= pctx->add_handler(thd, sp_handler::CONTINUE);

            pctx= pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);
            lex->set_sp_current_parsing_ctx(pctx);

            sp_pcontext *parent_ctx= pctx->parent_context();
            parent_ctx->set_exception_flag(true);

            sp_instr_hpush_jump *i=
                new sp_instr_hpush_jump(sp->instructions(), pctx, h);
            if (i == NULL || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            /* For continue handlers, mark end of handler scope. */
            if (sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;

            if (sp->m_parser_data.add_backpatch_entry(i,
                                      pctx->push_label(thd, EMPTY_CSTR, 0)))
              MYSQL_YYABORT;

            sp_condition_value *cv =
                NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if (cv == NULL)
              MYSQL_YYABORT;

            if (parent_ctx->check_duplicate_handler(cv))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              i->add_condition(cv);
              LEX_STRING *plexEptName;
              uint ExceptionIdx= pctx->GetConditionsSize();
              plexEptName= createImplicitExceptionName(ExceptionIdx);
              parent_ctx->add_condition(thd, *plexEptName, cv);
            }
          }
#line 31831 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 7508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= ctx->pop_label(); /* After this hdlr */
            sp_instr_hreturn *i;

            i= new sp_instr_hreturn(sp->instructions(), ctx);
            if (i == NULL || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            uint dest= sp->instructions();
            sp->m_parser_data.do_backpatch(hlab, dest);

            if (lex->sphead->backpatch_sphead())
              MYSQL_YYABORT;

            //lex->spcont= ctx->pop_context();
            lex->set_sp_current_parsing_ctx(ctx->pop_context());
            // now need change sp_head::m_instr order
          }
#line 31858 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 7533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 31864 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 7534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31870 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 7539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 31876 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 7541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 31882 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 7546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 31888 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 7548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 31894 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 7550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 31900 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 7564 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 31906 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 7566 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 31914 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 7572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 31920 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 7574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 31928 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 7580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 31934 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 7586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 31944 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 7592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 31954 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 7613 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 31960 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 7619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 31970 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 7625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 31980 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 7642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 31986 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 7648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31996 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 7654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32006 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 7666 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 32012 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 7672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 32022 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 7678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 32032 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 7696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 32038 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 7702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 32048 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 7708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 32058 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 7722 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 32064 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 7726 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 32070 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 7727 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 32076 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 7731 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 32082 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 7736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 32090 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 7743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 32098 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 7750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 32106 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 7757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 32114 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 7764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 32122 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 7771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 32130 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 7778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 32138 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 7785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 32146 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 7792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32154 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 7799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 32162 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 7806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 32170 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 7810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 32178 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 7817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 32186 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 7823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 32192 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 7825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 32242 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 7901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 32251 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 7910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 32260 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 7919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 32271 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 7927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression);
          }
#line 32282 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 7934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression);
          }
#line 32293 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 7943 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression)= (yyvsp[0].query_expression); }
#line 32299 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 7960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 32307 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 7967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 32315 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 7971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 32323 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 7975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 32331 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 7979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 32339 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 7983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 32347 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 7987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 32355 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 7993 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32361 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 7994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32367 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 7999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 32373 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 8001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 32391 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 8018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32397 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 8020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 32410 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 8031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 32416 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 8034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 32424 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 8039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 32432 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 8046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 32438 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 8053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 32448 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 8059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 32458 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 8068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32464 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 8070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 32477 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 8081 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 32483 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 8082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 32489 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 8087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 32499 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 8093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 32509 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 8102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 32518 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 8110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 32526 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 8114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 32535 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 8119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 32544 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 8126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 32550 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 8132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 32558 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 8136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 32566 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 8143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 32577 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 8150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 32587 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 8159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 32602 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 8170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 32610 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 8177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 32620 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 8183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 32630 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 8191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 32636 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 8192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 32642 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 8197 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 32648 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 8198 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 32654 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 8203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 32664 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 8209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 32674 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 8218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 32682 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 8224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 32688 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 8230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32698 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 8236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32708 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 8245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 32714 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 8247 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 32720 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 8249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 32726 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 8251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 32732 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 8253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 32738 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 8255 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 32744 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 8257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 32750 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 8259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 32756 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 8267 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32762 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 8268 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32768 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 8272 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32774 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 8273 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32780 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 8278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 32789 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 8283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 32798 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 8288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 32814 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 8302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32820 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 8303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32826 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 8308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32836 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 8314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32846 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 8323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32856 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 8329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32866 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 8343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32874 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 8347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 32882 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 8351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32890 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 8355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 32898 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 8359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 32906 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 8363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 32914 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 8367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 32922 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 8371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 32930 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 8375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
	  }
#line 32938 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 8379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	  }
#line 32946 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 8383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 32954 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 8387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 32962 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 8391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 32970 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 8395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 32978 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 8399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 32999 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 8416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 33007 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 8420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 33015 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 8424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 33023 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 8428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 33031 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 8432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 33039 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 8436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 33047 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 8440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 33055 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 8444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 33063 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 8448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 33071 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 8452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 33079 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 8456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 33087 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 8460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 33095 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 8464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 33103 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 8468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 33111 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 8472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 33119 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 8476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 33127 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 8480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING name;
            if ((yyvsp[0].lexer.lex_str).length > ENGINE_OPTION_MAX_LENGTH){
              my_error(ER_VALUE_TOO_LONG, MYF(0), tabname_str.str);
              MYSQL_YYABORT;
            }

            name = to_lex_string(tabname_str);
            (yyval.create_table_option)= NEW_PTN PT_connect_engine_option(name, (yyvsp[0].lexer.lex_str), true);
          }
#line 33142 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 8491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING name;
            if ((yyvsp[0].lexer.lex_str).length > ENGINE_OPTION_MAX_LENGTH){
              my_error(ER_VALUE_TOO_LONG, MYF(0), option_list_str.str);
              MYSQL_YYABORT;
            }

            name = to_lex_string(option_list_str);
            (yyval.create_table_option)= NEW_PTN PT_connect_engine_option(name, (yyvsp[0].lexer.lex_str), true);
          }
#line 33157 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 8502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING name;
            if ((yyvsp[0].lexer.lex_str).length > ENGINE_OPTION_MAX_LENGTH){
              my_error(ER_VALUE_TOO_LONG, MYF(0), table_type_str.str);
              MYSQL_YYABORT;
            }

            name = to_lex_string(table_type_str);
            (yyval.create_table_option)= NEW_PTN PT_connect_engine_option(name, (yyvsp[0].lexer.lex_str), false);
          }
#line 33172 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 8516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 33190 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 8529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 33196 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 8533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 33202 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 8537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 33208 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 8541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 33214 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 8545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 33220 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 8546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 33226 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 8547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 33232 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 8548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 33238 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 8549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 33244 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 8550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 33250 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 8554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 33256 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 8555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 33262 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 8556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 33268 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 8560 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 33274 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 8561 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 33280 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 8562 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 33286 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 8563 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 33292 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 8568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 33302 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 8574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 33312 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 8582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 33318 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 8583 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 33324 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 8588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 33332 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 8594 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 33338 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 8596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 33347 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 8605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 33356 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 8611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 33365 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 8617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 33373 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 8622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 33386 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 8631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 33398 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 8639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 33407 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 8646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 33413 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 8650 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 33419 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 8651 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 33425 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 8655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 33431 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 8656 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 33437 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 8660 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 33443 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 8661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 33449 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 8665 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 33455 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 8670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 33463 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 8676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 33484 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 8700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 33490 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 8701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 33496 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 8702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 33502 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 8707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 33510 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 8711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 33518 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 8715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 33526 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 8719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 33534 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 8723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 33542 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 8727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 33550 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 8731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 33558 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 8735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33567 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 8740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33576 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 8745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 33589 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 8754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 33602 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 8763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 33610 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 8767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 33618 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 8771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33627 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 8776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->parse_place == IN_PARAM_LIST ||
                Lex->parse_place == IN_SF_DEFINITION_RETURN)
            {
              (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, "4000", NULL, false);
            }
            else
            {
              my_error(ER_SYNTAX_ERROR, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 33644 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 8789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 33657 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 8798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 33665 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 8802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 33685 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 8818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 33693 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 8822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 33701 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 8826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 33709 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 8830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 33717 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 8834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 33725 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 8838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 33733 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 8843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 33741 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 8847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 33749 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 8851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 33757 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 8855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33766 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 8860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33775 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 8865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33784 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 8870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33793 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 8875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33802 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 8880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33811 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 8885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33819 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 8889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33827 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 8893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 33836 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 8898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 33844 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 8902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 33852 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 8909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 33858 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 8911 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 33864 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 8913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 33870 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 8915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 33876 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 8917 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 33882 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 8919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 33888 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 8921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 33894 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 8923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 33900 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 8927 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33906 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 8928 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33912 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 8932 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33918 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 8933 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33924 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 8937 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33930 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 8938 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33936 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 8939 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33942 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 8940 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33948 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 8941 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33954 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 8945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 33960 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 8946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 33966 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 8947 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 33972 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 8948 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 33978 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 8949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 33984 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 8954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 33993 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 8959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 33999 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 8968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 34005 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 8969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 34011 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 8970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 34017 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 8971 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 34023 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 8972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 34029 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 8977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 34038 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 8982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 34047 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 8990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (IN_PARAM_LIST == Lex->parse_place ||
                IN_SF_DEFINITION_RETURN ==  Lex->parse_place)
            {
              (yyval.precision).dec= "30";
              (yyval.precision).length= "65";
            }
            else
            {
              (yyval.precision).length= NULL;
              (yyval.precision).dec= NULL;
            }
          }
#line 34065 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 9004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 34074 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 9013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 34083 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 9021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 34089 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 9022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 34095 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 9026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 34101 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 9027 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 34107 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 9029 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 34116 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 9036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 34122 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 9042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 34130 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 9049 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 34136 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 9050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 34142 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 9051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 34153 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 9060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 34159 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 9061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 34165 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 9062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 34171 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 9063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 34177 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 9066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 34183 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 9072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 34192 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 9080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 34198 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 9086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 34221 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 9105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 34241 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 9124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 34249 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 9128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 34257 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 9132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 34265 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 9136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 34273 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 9140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 34281 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 9144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34289 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 9148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 34297 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 9152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 34305 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 9156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 34313 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 9160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 34321 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 9164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 34329 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 9168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 34337 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 9172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 34345 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 9176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 34353 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 9180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 34361 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 9184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 34374 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 9194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 34382 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 9207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 34390 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 9211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_flag_column_attr((yyvsp[0].ulonglong_number), true);
          }
#line 34398 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 9217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 34404 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 9218 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 34410 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 9219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 34416 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 9223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 34422 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 9224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 34428 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 9225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 34434 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 9230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 34442 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 9236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34450 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 9249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 34463 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 9257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 34469 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 9261 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 34475 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 9262 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 34481 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 9267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34494 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 9275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 34500 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 9279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 34506 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 9280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 34512 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 9285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 34522 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 9290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 34528 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 9294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 34534 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 9295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 34540 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 9299 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34546 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 9300 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34552 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 9305 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 34558 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 9306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 34567 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 9310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 34576 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 9318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 34588 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 9326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 34598 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 9332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 34608 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 9341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 34617 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 9346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 34626 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 9351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 34635 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 9356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 34644 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 9361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 34655 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 9368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 34665 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 9374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 34677 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 9384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34683 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 9385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 34692 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 9393 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 34704 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 9401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 34710 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 9415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 34722 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 9425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 34728 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 9426 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 34734 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 9431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 34745 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 9438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 34756 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 9447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 34762 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 9448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 34768 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 9449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 34774 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 9450 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 34780 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 9455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 34789 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 9460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 34798 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 9465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 34807 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 9471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 34816 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 9477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 34825 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 9484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 34831 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 9485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 34837 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 9486 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 34843 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 9487 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 34849 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 9488 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 34855 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 9492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 34861 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 9493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 34867 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 9497 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34873 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 9498 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34879 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 9502 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34885 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 9507 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34891 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 9508 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34897 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 9509 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34903 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 9513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 34909 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 9514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 34915 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 9518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 34921 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 9524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 34931 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 9530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 34941 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 9540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 34956 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 9553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 34962 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 9559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 34972 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 9565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 34982 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 9577 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 34988 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 9583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 34998 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 9589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 35008 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 9597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 35014 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 9598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 35020 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 9603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 35026 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 9605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 35034 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 9609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 35042 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 9632 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 35048 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 9633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 35054 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 9634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 35060 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 9638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 35066 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 9643 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 35072 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 9644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 35078 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 9648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 35084 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 9649 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 35090 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 9653 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 35096 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 9654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 35102 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 9655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 35108 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 9660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 35118 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 9666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 35129 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 9676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 35139 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 9682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 35155 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 9697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 35165 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 9703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 35176 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 9714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 35186 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 9722 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 35192 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 9727 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 35198 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 9728 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 35204 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 9733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 35214 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 9739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 35223 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 9751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 35237 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 9761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 35251 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 9774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 35263 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 9782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 35276 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 9794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 35291 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 9805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 35302 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 9815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 35317 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 9826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 35328 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 9836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 35343 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 9847 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35349 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 9854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 35365 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 9866 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35371 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 9871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 35391 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 9891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 35408 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 9908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35431 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 9930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35453 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 9949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35476 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 9968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35488 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 9976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35511 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 9999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35535 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 10022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 35547 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 10036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 35565 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 10051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 35582 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 10064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 35592 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 10070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 35608 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 10082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 35624 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 10094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 35639 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 10107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 35645 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 10108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 35651 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 10115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 35660 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 10123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 35670 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 10131 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35676 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 10142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 35686 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 10148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 35696 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 10154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 35708 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 10162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 35727 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 10177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 35739 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 10185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 35751 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 10193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 35762 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 10200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 35773 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 10207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 35784 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 35795 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 10221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 35805 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 10227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 35815 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 10233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 35825 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 10241 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35831 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 10246 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35837 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 10247 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35843 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 10252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 35853 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 10258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 35863 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 10264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 35873 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 10270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 35883 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 10279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 35898 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 10292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 35904 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 10293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35910 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 10294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35916 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 10295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35922 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 10299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 35928 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 10301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 35941 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 10312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 35947 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 10313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35953 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 10317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 35959 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 10318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 35965 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 10324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 35981 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 10339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 35990 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 10344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 35999 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 10352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 36007 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 10356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 36015 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 10363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 36024 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 10368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 36033 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 10374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 36043 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 10383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 36051 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 10387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 36059 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 10398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 36067 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 10402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 36075 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 10406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 36083 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 10410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 36091 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 10415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 36099 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 10420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 36107 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 10425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 36115 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 10429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 36124 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 10436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 36133 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 10441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 36141 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 10445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 36149 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 10449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 36157 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 10454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 36165 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 10459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 36173 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 10464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 36181 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 10469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 36189 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 10473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 36197 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 10477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 36205 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 10483 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 36211 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 10489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 36219 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 10493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 36227 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 10499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 36233 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 10509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 36244 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 10516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 36253 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 10521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 36261 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 10525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 36270 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 10530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 36282 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 10542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 36291 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 10550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 36299 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 10554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 36307 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 10558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 36315 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 10562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 36323 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 10566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 36331 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 10570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 36340 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 10575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 36348 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 10579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 36356 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 10583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 36364 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 10587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 36372 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 10591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 36380 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 10595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 36388 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 10599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 36396 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 10603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 36404 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 10607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 36412 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 10611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 36420 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 10615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 36428 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 10619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 36436 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 10623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 36444 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 10627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 36452 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 10631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 36460 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 10635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 36470 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 10641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 36478 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 10645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 36486 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 10652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 36495 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 10657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 36504 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 10662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 36513 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 10669 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 36519 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 10671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 36528 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 10676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 36537 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 10681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 36547 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 10687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 36557 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 10695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 36563 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 10700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 36571 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 10704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 36589 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 10720 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 36595 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 10725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 36603 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 10729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 36621 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 10750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 36627 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 10751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 36633 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 10755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 36639 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 10756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 36645 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 10757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 36651 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 10761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 36657 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 10762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 36663 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 10763 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 36669 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 10767 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36675 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 10768 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36681 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 10769 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36687 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 10770 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36693 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 10775 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
#line 36702 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 10780 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
#line 36711 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 10787 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36717 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 10789 "sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[-2].num);
        }
#line 36728 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 10798 "sql_yacc.yy" /* yacc.c:1646  */
    {Lex->slave_stop_fast=false;}
#line 36734 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 10799 "sql_yacc.yy" /* yacc.c:1646  */
    {Lex->slave_stop_fast=true;}
#line 36740 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 10804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 36755 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 10819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 36776 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 10840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 36793 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 10856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 36801 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 10860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 36809 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 10867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 36817 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 10871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 36825 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 10878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 36833 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 10882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 36841 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 10886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 36849 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 10897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 36857 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 10901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 36865 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 10907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 36873 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 10911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 36882 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 10917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 36890 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 10921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 36898 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 10927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 36906 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 10931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 36914 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 10938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 36922 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 10942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 36930 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 10949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 36938 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 10953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 36946 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 10960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 36954 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 10964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 36962 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 10971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 36971 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 10976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 36997 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 11003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 37006 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 11008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 37015 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 11013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 37023 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 11020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 37038 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 11033 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 37044 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 11034 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 37050 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 11035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 37056 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 11041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 37065 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 11048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 37071 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 11055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 37080 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 11062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 37086 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 11063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 37092 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 11064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 37098 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 11070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 37108 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 11078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 37114 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 11080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 37133 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 11098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 37143 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 11104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 37154 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 11111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 37165 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 11121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 37174 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 11129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 37183 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 11136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 37189 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 11143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 37198 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 11151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 37204 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 11153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 37210 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 11155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 37216 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 11157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 37222 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 11159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 37228 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 11161 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 37234 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 11166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 37242 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 11172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 37248 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 11173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 37254 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 11174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 37260 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 11179 "sql_yacc.yy" /* yacc.c:1646  */
    {
          Lex->sql_command= SQLCOM_COPY_TABLE;
          LEX *lex=Lex;
          SELECT_LEX *sl= Select;
          /* $4 is like the flush table, $6 is like alter table. */
          if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table), NULL, TL_OPTION_UPDATING,
                                     TL_READ_NO_INSERT, MDL_SHARED_HIGH_PRIO) ||
              !sl->add_table_to_list(lex->thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                     TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
            MYSQL_YYABORT;
        }
#line 37276 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 11194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 37284 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 11198 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37290 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 11200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 37298 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 11207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 37307 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 11212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 37316 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 11225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 37330 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 11238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 37338 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 11243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 37347 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 11251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 37357 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 11257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 37367 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 11266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 37375 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 11272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 37381 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 11273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 37387 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 11279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 37395 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 11283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 37403 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 11290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 37413 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 11296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 37423 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 11305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 37431 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 11312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 37439 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 11318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 37445 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 11320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 37456 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 11329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 37462 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 11330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 37468 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 11335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 37476 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 11339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 37486 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 11381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= (yyvsp[-1].top_level_node);
          }
#line 37494 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 11385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-1].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[0]));

            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 37508 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 11433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].query_expression_body), (yyvsp[-2].order), (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 37516 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 11441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-4].with_clause), (yyvsp[-3].query_expression_body), (yyvsp[-2].order), (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 37524 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 11448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto nested= NEW_PTN PT_nested_query_expression((yyvsp[-3].query_expression));
            auto body= NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression(body, (yyvsp[-2].order), (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 37534 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 11458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto nested= NEW_PTN PT_nested_query_expression((yyvsp[-3].query_expression));
            auto body= NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-4].with_clause), body, (yyvsp[-2].order), (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 37544 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 11466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_expression)->body(), NULL, (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 37554 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 11475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression)->body(), NULL, (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 37564 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 11483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_expression)->body(), NULL, NULL, (yyvsp[0].locking_clause_list));
          }
#line 37574 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 11492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body)= NEW_PTN PT_query_expression_body_primary((yyvsp[0].query_primary));
          }
#line 37582 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 11496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body)= NEW_PTN PT_union(NEW_PTN PT_query_expression((yyvsp[-3].query_expression_body)), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 37590 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 11500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-3].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[-3].query_expression), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 37601 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 11507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[0]));

            auto lhs_qe= NEW_PTN PT_query_expression((yyvsp[-3].query_expression_body));
            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[0].query_expression));

            (yyval.query_expression_body)= NEW_PTN PT_union(lhs_qe, (yylsp[-3]), (yyvsp[-1].num), nested_qe);
          }
#line 37619 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 11521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-3].query_expression) == NULL || (yyvsp[0].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[0]));

            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[0].query_expression));
            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[-3].query_expression), (yylsp[-3]), (yyvsp[-1].num), nested_qe);
          }
#line 37635 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 11536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression)= (yyvsp[-1].query_expression); }
#line 37641 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 11537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression)= (yyvsp[-1].query_expression); }
#line 37647 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 11542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 37656 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 11558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows)); // windows
          }
#line 37673 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 11578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows)); // windows
          }
#line 37690 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 11593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 37696 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 11598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 37702 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 11602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 37708 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 11608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 37718 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 11614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 37728 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 11623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 37736 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 11631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 37745 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 11640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 37753 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 11644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 37763 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 11652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locking_clause_list)= NULL; }
#line 37769 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 11658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 37779 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 11664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 37789 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 11673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 37797 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 11677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 37805 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 11681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 37813 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 11687 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 37819 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 11688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 37825 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 11692 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 37831 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 11696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 37837 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 11701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 37843 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 11702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 37849 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 11704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > 1024 * 1024 * 1024)
            {
              my_error(ER_WRONG_ARGUMENTS, MYF(0), "wait seconds too large");
              MYSQL_YYABORT;
            }
            Lex->spec_lock_wait_time = (yyvsp[0].ulong_num);
          }
#line 37862 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 11716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37872 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 11722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37882 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 11728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 37893 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 11737 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37899 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 11739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 37907 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 11746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 37913 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 11747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 37919 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 11748 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 37925 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 11749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 37931 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 11750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 37937 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 11754 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37943 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 11755 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37949 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 11761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37959 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 11767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37968 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 11772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37978 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 11778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 37986 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 11782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 37994 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 11786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 38002 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 11790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 38010 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 11794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 38018 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 11798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 38026 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 11802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 38034 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 11810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 38042 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 11814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 38050 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 11818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 38058 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 11822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 38075 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 11839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 38083 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 11843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 38092 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 11848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 38100 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 11852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 38111 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 11859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 38119 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 11863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 38130 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 11870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 38138 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 11874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 38146 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 11878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 38154 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 11882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 38166 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 11890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 38174 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 11894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38182 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 11898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 38191 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 11903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 38200 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 11908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 38212 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 11916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 38224 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 11933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38232 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 11937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38240 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 11941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38248 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 11945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38256 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 11949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38264 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 11953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38272 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 11957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 38280 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 11961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 38288 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 11965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38296 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 11969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 38304 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 11973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (MYSQL_PARSE_MODE == thd->variables.m_opt_parse_mode)
            {
              (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              THD *thd= YYTHD;
              //$$= NEW_PTN Item_func_mod(@$, $1, $3);
              //ITEMIZE($1, &$1);
              //ITEMIZE($3, &$3);
              Item* percent_left= (yyvsp[-2].item);
              Item* percent_right= (yyvsp[0].item);

              if(percent_right->type() == Item::INVALID_ITEM &&
                 ((Parse_tree_item*)percent_right)->b_fielditem_simple())
              {
                PTI_simple_ident_ident *psimp_idt_idt= (PTI_simple_ident_ident*)percent_right;
                if (0 == strcasecmp("found",psimp_idt_idt->ident.str))
                {
                    ITEMIZE(percent_left, &percent_left);
                    ITEMIZE(percent_right, &percent_right);
                    Item_field *leftField = (Item_field*)percent_left;
                    (yyval.item) = make_cursor_attr_func(thd, const_cast<char*>(leftField->field_name),
                                               Item_func_cursor_attribute::FOUND);
                }
                else if (0 == strcasecmp("notfound", psimp_idt_idt->ident.str))
                {
                    ITEMIZE(percent_left, &percent_left);
                    ITEMIZE(percent_right, &percent_right);
                    Item_field *leftField  = (Item_field*)percent_left;
                    (yyval.item)= make_cursor_attr_func(thd, const_cast<char*>(leftField->field_name),
                                              Item_func_cursor_attribute::NOT_FOUND);
                }
                else
                {
                  (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
                }
              }
              else
              {
                (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
              }

              // $$ = make_mod_or_cursor_attr_func(@$, thd, $1, $3);
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
#line 38360 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 12025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 38368 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 12029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38376 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 12033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38384 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 12047 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 38392 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 12058 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 38398 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 12063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 38404 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 12064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 38410 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 12065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 38416 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 12066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 38422 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 12067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 38428 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 12068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 38434 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 12069 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 38440 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 12073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38446 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 12074 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38452 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 12084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 38460 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 12088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 38466 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 12093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 38474 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 12097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 38482 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 12101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 38490 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 12105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 38498 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 12109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 38506 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 12113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 38514 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 12116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 38520 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 12118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 38528 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 12122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 38536 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 12126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 38544 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 12130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 38552 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 12134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 38560 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 12138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 38568 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 12142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), &(yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 38576 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 12146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 38584 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 12150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), &(yyvsp[-1].cast_type));
          }
#line 38592 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 12154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 38600 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 12158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 38608 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 12162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 38616 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 12167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 38624 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 12171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 38635 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 12178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 38647 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 12186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_func_error_code *itm= NEW_PTN Item_func_error_code();
            sp_pcontext *pctx= thd->lex->get_sp_current_parsing_ctx();

            if (pctx->is_handler_scope())
            {
              sp_pcontext *parent_ctx= pctx->parent_context();
              if (parent_ctx)
              {
                parent_ctx->push_item_error_code(itm);
              }
            }
            (yyval.item)= itm;
          }
#line 38667 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 12202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_func_error_message *itm= NEW_PTN Item_func_error_message();
            sp_pcontext *pctx= thd->lex->get_sp_current_parsing_ctx();
            if (pctx->is_handler_scope())
            {
              sp_pcontext *parent_ctx= pctx->parent_context();
              if (parent_ctx)
              {
                parent_ctx->push_item_error_message(itm);
              }
            }
            (yyval.item)= itm;
          }
#line 38686 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 12219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 38692 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 12220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 38698 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 12231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 38706 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 12235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 38714 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 12239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 38722 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 12243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 38730 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 12247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 38738 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 12251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 38746 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 12255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 38754 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 12259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 38762 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 12263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 38770 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 12267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 38778 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 12271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 38786 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 12275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 38794 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 12279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 38802 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 12283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 38810 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 12287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 38818 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 12291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 38826 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 12295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 38834 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 12299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 38843 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 12304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 38852 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 12309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 38861 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 12314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 38869 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 12318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 38877 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 12322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 38885 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 12326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 38893 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 12330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 38902 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 12335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 38910 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 12339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 38918 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 12358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 38926 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 12362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 38934 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 12366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 38942 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 12370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 38950 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 12375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 38958 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 12380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 38966 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 12384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 38974 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 12388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 38982 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 12392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 38991 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 12397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 38999 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 12401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 39007 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 12405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 39015 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 12409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 39023 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 12413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 39031 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 12417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 39039 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 12421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 39047 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 12425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 39056 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 12430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 39064 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 12434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 39072 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 12438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 39080 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 12442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 39088 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 12446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 39096 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 12458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 39104 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 12462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 39112 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 12466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 39120 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 12470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 39128 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 12474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 39136 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 12478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 39144 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 12482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 39152 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 12486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 39160 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 12490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 39168 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 12494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 39176 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 12498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 39184 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 12502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 39192 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 12506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 39200 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 12510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 39208 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 12514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 39216 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 12518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 39224 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 12522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 39232 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 12526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 39240 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 12530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 39248 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 12534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 39256 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 12538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 39264 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 12542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 39272 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 12550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 39282 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 12556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 39292 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 12562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 39302 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 12568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 39312 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 12574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 39322 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 12580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 39330 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 12584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 39340 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 12602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 39348 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 12606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 39356 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 12613 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 39362 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 12615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 39376 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 12627 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 39382 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 12628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 39388 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 12632 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 39394 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 12633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 39400 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 12637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 39406 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 12638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 39412 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 12643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 39422 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 12649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 39432 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 12658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 39440 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 12670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 39448 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 12674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 39456 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 12678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39464 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 12682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39472 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 12686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39480 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 12690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_json_object((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39488 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 12694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39496 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 12698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 39504 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 12702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39512 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 12706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 39520 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 12710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39528 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 12719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39536 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 12723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39544 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 12727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39552 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 12731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 39560 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 12735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 39568 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 12739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 39576 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 12743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 39584 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 12747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 39592 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 12751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 39600 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 12758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 39608 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 12765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 39616 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 12769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 39624 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 12773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 39632 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 12777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 39640 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 12781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 39648 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 12785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 39656 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 12789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 39671 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 12800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 39686 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 12811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 39694 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 12815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 39702 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 12819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 39715 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 12831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 39724 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 12836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 39733 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 12841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 39742 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 12849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 39750 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 12853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 39758 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 12860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 39766 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 12864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 39774 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 12868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 39782 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 12876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 39790 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 12880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 39798 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 12884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 39806 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 12891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 39814 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 12895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 39822 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 12902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 39830 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 12909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 39838 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 12913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 39846 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 12920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 39854 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 12927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 39862 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 12937 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 39880 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 12954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 39888 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 12958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 39896 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 12965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 39904 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 12969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 39912 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 12976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 39920 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 12980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 39928 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 12987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 39936 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 12993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 39944 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 13000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 39953 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 13005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 39961 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 13012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 39969 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 13016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 39977 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 13020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 39985 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 13024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 39993 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 13028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 40001 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 13035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 40009 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 13042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 40017 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 13046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 40025 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 13050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 40033 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 13054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 40041 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 13058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 40049 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 13065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 40057 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 13069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 40065 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 13073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 40073 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 13077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 40081 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 13081 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 40088 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 13086 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 40094 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 13087 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 40100 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 13088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 40106 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 13093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 40114 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 13099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 40120 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 13104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 40131 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 13111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40139 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 13115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 40147 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 13121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 40153 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 13122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 40159 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 13127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 40169 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 13132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 40175 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 13136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 40181 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 13137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 40187 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 13142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 40196 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 13147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 40207 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 13157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 40215 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 13164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 40226 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 13171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 40249 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 13190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 40261 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 13198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 40272 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 13205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 40283 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 13212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 40294 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 13219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 40305 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 13226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 40316 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 13233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 40327 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 13240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 40338 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 13247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 40349 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 13254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 40360 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 13261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 40371 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 13268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 40383 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 13276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 40394 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 13285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 40400 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 13291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40410 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 13297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40420 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 13306 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (NULL == (yyvsp[0].item))
          {
            (yyval.item) = (yyvsp[-1].item);
          }
          else
          {
            THD *thd= YYTHD;
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            const POS pos= (yyloc);
            Item *mark_param = createSpNotationItem(pos, thd, (yyvsp[-1].item), (yyvsp[0].item));
            if (!mark_param)
            {
              MYSQL_YYABORT;
            }
            (yyval.item) = mark_param;
          }
        }
#line 40444 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 13328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 40450 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 13329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 40456 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 13333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 40462 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 13334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40468 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 13339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40478 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 13345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40488 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 13353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 40494 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 13354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 40500 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 13358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 40506 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 13359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 40512 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 13364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 40524 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 13372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 40534 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 13380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 40540 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 13381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 40546 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 13383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 40560 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 13395 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 40566 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 13396 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 40572 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 13478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 40580 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 13483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 40588 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 13487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 40596 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 13491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 40604 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 13496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 40617 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 13505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 40625 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 13511 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 40631 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 13512 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 40637 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 13513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 40643 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 13517 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 40649 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 13518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 40655 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 13519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 40661 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 13520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 40667 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 13523 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 40673 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 13524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 40679 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 13542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 40685 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 13548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 40693 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 13578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 40699 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 13580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 40705 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 13582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 40711 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 13583 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 40717 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 13587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 40723 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 13589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 40733 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 13597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 40739 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 13598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 40745 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 13603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 40753 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 13609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 40759 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 13610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 40765 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 13615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 40782 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 13628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 40794 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 13640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 40810 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 13655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 40818 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 13662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 40828 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 13668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 40838 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 13677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 40846 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 13682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_path((yyvsp[-6].lexer.lex_str), (yyvsp[-5].type), (yyvsp[-4].lexer.charset), (yyvsp[-3].jt_column_type), (yyvsp[-1].lexer.lex_str),
                                                       (yyvsp[0].jt_on_error_or_empty).error.type,
                                                       *(yyvsp[0].jt_on_error_or_empty).error.default_str,
                                                       (yyvsp[0].jt_on_error_or_empty).empty.type,
                                                       *(yyvsp[0].jt_on_error_or_empty).empty.default_str);
          }
#line 40858 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 13690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].lexer.lex_str), (yyvsp[0].jtc_list));
          }
#line 40866 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 13696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 40874 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 13700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 40882 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 13707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).error.default_str= &NULL_STR;

            (yyval.jt_on_error_or_empty).empty.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).empty.default_str= &NULL_STR;
          }
#line 40894 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 13715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).error.default_str= &NULL_STR;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[0].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[0].jt_on_response).default_str;
          }
#line 40906 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 13723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[0].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[0].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).empty.default_str= &NULL_STR;
          }
#line 40918 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 13731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[0].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[0].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[-1].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[-1].jt_on_response).default_str;
          }
#line 40930 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 13739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[-1].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[-1].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[0].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[0].jt_on_response).default_str;
          }
#line 40942 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 13749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 40948 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 13752 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 40954 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 13756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_ERROR;
            (yyval.jt_on_response).default_str= &NULL_STR;
          }
#line 40963 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 13761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_NULL;
            (yyval.jt_on_response).default_str= &NULL_STR;
          }
#line 40972 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 13766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_DEFAULT;
            (yyval.jt_on_response).default_str= YYTHD->memdup_typed(&(yyvsp[0].lexer.lex_str));
          }
#line 40981 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 13774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 40989 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 13777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 40995 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 13778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 41001 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 13779 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 41007 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 13783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 41013 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 13784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 41019 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 13790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 41028 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 13796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 41037 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 13805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 41046 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 13812 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 41052 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 13822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 41063 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 13833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 41073 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 13839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 41083 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 13848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 41093 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 13854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 41102 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 13866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 41115 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 13875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 41128 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 13886 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41134 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 13887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 41140 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 13888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 41146 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 13889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 41152 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 13890 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 41158 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 13891 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 41164 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 13892 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 41170 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 13893 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 41176 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 13894 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 41182 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 13895 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 41188 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 13896 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 41194 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 13897 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 41200 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 13901 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 41206 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 13902 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 41212 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 13903 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 41218 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 13904 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 41224 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 13905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 41230 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 13906 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 41236 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 13907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 41242 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 13908 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 41248 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 13909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 41254 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 13913 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 41260 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 13914 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 41266 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 13915 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 41272 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 13916 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 41278 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 13925 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->oracle_options= 0; }
#line 41284 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 13927 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->oracle_options|= ORA_CREATE_OR_REPLACE; }
#line 41290 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 13931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 41296 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 13932 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 41302 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 13941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 41308 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 13946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 41314 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 13950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 41320 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 41328 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 13959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 41336 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 13963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 41344 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 13970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 41353 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 13975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 41363 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 13984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).raw.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).raw.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).raw.start - YYLIP->get_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 41380 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 14000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 41393 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 14009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 41401 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 14016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 41411 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 14022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 41421 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 14031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 41429 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 14035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 41437 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 14042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 41447 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 14048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 41457 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 14057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 41468 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 14070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 41474 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 14072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 41482 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 14079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 41491 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 14084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 41502 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 14094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 41508 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 14095 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 41514 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 14111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 41523 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 14116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 41534 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 14126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 41542 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 14132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 41548 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 14138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 41556 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 14145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 41565 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 14150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 41576 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 14159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 41582 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 14164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 41588 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 14165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 41594 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 14169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 41600 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 14175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 41608 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 14182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 41618 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 14188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 41628 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 14194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 41638 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 14203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), (yylsp[0]).raw);
          }
#line 41646 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 14207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 41654 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 14211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 41662 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 14215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 41670 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 14219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 41678 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 14225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 41684 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 14226 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 41690 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 14230 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41696 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 14231 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 41702 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 14232 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41708 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 14233 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41714 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 14234 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41720 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 14235 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41726 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 14239 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41732 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 14240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 41738 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 14241 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41744 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 14242 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41750 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 14243 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41756 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 14247 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41762 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 14248 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41768 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 14249 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41774 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 14250 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41780 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 14251 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41786 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 14255 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41792 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 14256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 41798 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 14257 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41804 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 14258 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 41810 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 14259 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41816 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 14264 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 41822 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 14274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 41832 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 14280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 41842 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 14289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 41850 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 14293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 41858 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 14300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 41866 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 14309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-4].lexer.lex_str), (yyvsp[-3].lexer.charset), (yyvsp[-2].field_separators), (yyvsp[-1].line_separators), (yyvsp[0].datapump_format));
            if (Lex->datapump_csv && (!(yyvsp[-2].field_separators).enclosed || !(yyvsp[-2].field_separators).enclosed->ptr()))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
          }
#line 41879 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 14318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41887 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 14321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 41893 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 14330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_expression_body_primary(
                      NEW_PTN PT_query_specification((yyvsp[-1].select_options), (yyvsp[0].item_list2)))));
          }
#line 41904 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 14340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 41912 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 14351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41929 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 14367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 41939 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 14376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 41950 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 14386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 41977 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 14409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 42013 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 14444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 42021 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 14451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 42037 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 14466 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 42048 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 14476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 42064 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 14491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 42074 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 14500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 42086 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 14511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 42108 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 14531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 42131 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 14553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 42154 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 14576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 42163 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 14584 "sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
	  }
#line 42171 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 14591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 42179 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 14598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 42189 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 14604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 42199 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 14613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 42209 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 14619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 42219 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 14627 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 42225 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 14628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 42231 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 14632 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42237 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 14633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42243 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 14637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 42249 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 14643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 42259 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 14649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 42269 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 14673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].column_row_value_list_pair).column_list, (yyvsp[-1].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 42280 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 14688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[-1].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-1].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 42294 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 14705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 42305 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 14720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
#line 42316 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 14733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
#line 42330 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 14748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL, NULL);
          }
#line 42341 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 14757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 42347 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 14758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42353 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 14760 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 42366 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 14768 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 42372 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 14772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 42378 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 14774 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 42391 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 14791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 42400 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 14796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 42409 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 14801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 42418 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 14809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression);
          }
#line 42427 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 14814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression);
          }
#line 42436 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 14819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression);
          }
#line 42445 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 14827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 42455 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 14833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 42465 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 14842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 42473 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 14859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 42482 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 14864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 42492 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 14883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 42498 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 14888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 42508 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 14898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 42518 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 14904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 42528 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 14914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 42536 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 14921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 42545 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 14926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 42553 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 14944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 42562 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 14951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 42568 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 14952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 42574 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 14957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 42585 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 14964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 42598 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 14976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 42607 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 14983 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42613 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 14984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42619 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 15000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 42627 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 15010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 42635 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 15021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 42643 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 15032 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 42649 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 15033 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 42655 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 15037 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 42661 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 15038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 42667 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 15039 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 42673 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 15044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[-1].table));
          }
#line 42681 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 15071 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 42689 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 15075 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 42697 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 15079 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 42705 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 15083 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 42713 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 15087 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 42721 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 15091 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 42729 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 15095 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 42737 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 15099 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 42745 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 15103 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 42753 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 15110 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->show_profile_query_id= 0;
    }
#line 42761 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 15114 "sql_yacc.yy" /* yacc.c:1646  */
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
#line 42773 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 15127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 42784 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 15138 "sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 42797 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 15147 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);

             MAKE_CMD(p);
           }
#line 42807 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 15153 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[-3].is_not_empty);
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 42823 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 15165 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 42838 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 15176 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[0].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
#line 42853 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 15187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->set_wild((yyvsp[0].wild_or_where).wild)) {
              MYSQL_YYABORT; // OOM
            }
            if ((yyvsp[0].wild_or_where).where != nullptr) {
              ITEMIZE((yyvsp[0].wild_or_where).where, &(yyvsp[0].wild_or_where).where);
              Select->set_where_cond((yyvsp[0].wild_or_where).where);
            }
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 42872 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 15202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 42883 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 15209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, to_lex_cstring((yyvsp[-1].lexer.lex_str)), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
#line 42895 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 15217 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info->db_type= NULL; }
#line 42901 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 15224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
#line 42923 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 15242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 42931 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 15246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 42939 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 15250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 42948 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 15255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));
          }
#line 42957 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 15260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 42966 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 15265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[-1].limit_clause));
          }
#line 42975 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 15275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
#line 42992 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 15288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 43003 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 15295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 43015 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 15303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 43027 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 15311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
#line 43039 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 15319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
#line 43051 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 15327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 43063 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 15335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 43077 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 15345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 43103 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 15367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[-1].is_not_empty);
          }
#line 43112 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 15372 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_QUICKSYNC_STATUS;}
#line 43118 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 15374 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_THREADPOOL_STATUS;}
#line 43124 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 15376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 43150 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 15398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 43163 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 15407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 43176 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 15416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
#line 43186 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 15422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0);
            MAKE_CMD(tmp);
          }
#line 43195 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 15427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0);
            MAKE_CMD(tmp);
          }
#line 43204 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 15432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 43213 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 15437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 43223 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 15443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
#line 43236 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 15452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 43248 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 15460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 43256 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 15464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 43264 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 15468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_SYNCREPLAY_STATUS;
          }
#line 43272 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 15472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43283 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 15479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43294 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 15486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 43304 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 15492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 43318 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 15502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 43332 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 15512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43341 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 15517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43350 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 15522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 43359 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 15527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[0].lex_user);
          }
#line 43369 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 15536 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 43375 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 15538 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 43381 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 15540 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 43387 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 15554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 43393 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 15555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 43399 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 15559 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 43405 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 15560 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 43411 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 15564 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 43417 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 15565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 43423 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 15569 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 43429 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 15570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 43435 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 15571 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 43441 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 15572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 43447 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 15581 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 43453 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 15582 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str; }
#line 43459 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 15586 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 43465 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 15587 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 43471 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 15591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 43477 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 15592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 43483 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 15593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 43489 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 15599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 43497 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 15606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 43505 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 15618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 43513 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 15630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
          }
#line 43521 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 15634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 43539 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 15648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
          }
#line 43547 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 15654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 43553 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 15656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 43562 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 15668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 43573 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 15675 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43579 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 15680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 43596 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 15692 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43602 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 15697 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43608 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 15699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 43624 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 15711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 43636 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 15719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 43652 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 15735 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43658 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 15740 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 43664 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 15742 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 43670 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 15744 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 43676 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 15746 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 43682 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 15748 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 43688 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 15750 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 43694 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 15752 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 43700 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 15754 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 43706 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 15756 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 43712 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 15758 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 43718 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 15760 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 43724 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 15762 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 43730 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 15766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 43736 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 15772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 43745 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 15777 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43751 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 15779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 43762 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 15794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 43772 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 15800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 43782 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 15808 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 43788 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 15811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 43808 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 15830 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 43814 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 15831 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 43820 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 15835 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43826 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 15837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 43841 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 15851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 43851 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 15857 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43857 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 15866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 43865 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 15870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 43878 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 15884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 43891 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 15895 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 43897 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 15896 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 43903 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 15897 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 43909 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 15904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 43919 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 15932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 43942 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 15953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 43948 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 15954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 43954 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 15958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43960 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 15959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43966 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 15963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 43972 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 15964 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 43978 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 15965 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 43984 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 15969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 43990 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 15974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 43996 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 15975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 44002 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 15979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 44008 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 15980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 44014 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 15985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 44023 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 15994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 44032 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 15999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 44042 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 16005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 44051 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 16010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 44060 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 16017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 44066 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 16018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 44072 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 16023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 44081 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 16032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 44090 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 16037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 44099 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 16044 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->datapump_csv = false; (yyval.datapump_format).cleanup(); }
#line 44105 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 16046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.datapump_format).dformat= (yyvsp[0].string);
            if (!(yyvsp[0].string)->ptr() || my_strcasecmp(system_charset_info, (yyvsp[0].string)->ptr(), "ECSV"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            Lex->datapump_csv = true;
          }
#line 44119 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 16057 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 44125 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 16058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 44131 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 16062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 44137 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 16063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 44143 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 16072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 44149 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 16073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 44155 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 16074 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 44161 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 16079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 44171 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 16085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 44181 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 16095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 44189 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 16101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 44195 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 16102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 44201 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 16107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 44213 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 16115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 44234 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 16135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 44254 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 16156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 44263 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 16161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 44273 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 16167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 44282 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 16172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 44291 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 16180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 44302 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 16187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 44313 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 16194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 44324 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 16204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 44344 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 16223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 44350 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 16225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 44361 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 16235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 44367 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 16236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 44373 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 16239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 44389 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 16251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 44397 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 16255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 44405 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 16259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 44413 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 16263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 44421 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 16267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 44429 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 16271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 44437 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 16278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 44445 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 16282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 44453 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 16286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 44461 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 16290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 44469 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 16294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 44477 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 16302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 44485 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 16306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 44493 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 16310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 44501 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 16329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[-2].lexer.lex_str).str);
          }
#line 44509 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 16333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str);
          }
#line 44519 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 16342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 44527 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 16349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 44535 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 16356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 44543 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 16364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 44551 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 16372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 44559 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 16376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 44569 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 16385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 44579 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 16391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 44593 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 16404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 44603 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 16410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 44615 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 16420 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 44621 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 16422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 44652 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 16452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 44666 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 16465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44680 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 16478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 44697 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 16494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 44714 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 16510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 44732 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 16532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 44740 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 16539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 44757 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 16554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 44763 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 16556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 44775 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 16568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 44786 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 16578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[-1].lex_cstr); }
#line 44792 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 16582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 44798 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 16584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 44810 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 16596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 44821 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 16605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 44827 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 16606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 44833 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 16607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 44839 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 16618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 44848 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 16623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 44857 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 16631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 44865 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 16635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 44880 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 16649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 44889 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 16654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 44898 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 16662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 44908 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 17210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 44916 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 17219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 44924 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 17223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 44932 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 17227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 44940 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 17231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 44951 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 17238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 44963 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 17246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 44975 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 17254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 44988 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 17266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 44996 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 17270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 45005 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 17275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 45014 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 17280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 45023 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 17285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 45032 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 17290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 45041 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 17295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 45050 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 17302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 45056 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 17303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 45062 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 17308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 45070 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 17312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 45078 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 17319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 45088 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 17325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 45098 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 17333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 45104 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 17339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 45115 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 17346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 45125 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 17355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 45131 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 17356 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 45137 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 17362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 45145 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 17366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 45153 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 17374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 45161 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 17377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 45167 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 17381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45173 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 17382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 45179 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 17383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 45185 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 17384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45191 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 17385 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45197 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 17389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45203 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 17390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45209 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 17391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45215 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 17392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45221 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 17396 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 45227 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 17397 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45233 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 17398 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45239 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 17399 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45245 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 17403 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 45251 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 17404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 45257 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 17405 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 45263 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 17406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45269 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 17407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45275 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 17408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45281 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 17414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 45289 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 17424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 45297 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 17428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 45305 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 17433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 45313 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 17437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 45321 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 17441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 45332 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 17448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 45340 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 17452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 45348 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 17459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 45356 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 17463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 45364 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 17467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 45372 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 17474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 45380 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 17478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 45388 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 17485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 45396 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 17491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 45402 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2772:
#line 17492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 45408 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2773:
#line 17497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 45416 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 17503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 45422 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 17504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 45428 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 17508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 45434 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2777:
#line 17509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 45440 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2778:
#line 17513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 45446 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2779:
#line 17514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 45452 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2780:
#line 17515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 45458 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2781:
#line 17516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 45464 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 17521 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 45470 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 17523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 45478 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 17527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 45486 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 17531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 45494 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 17535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 45502 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2788:
#line 17539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 45510 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 17548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 45525 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 17559 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45531 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 17561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 45542 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 17581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 45571 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 17608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 45577 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 17609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 45583 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 17611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 45592 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 17615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 45598 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 17620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 45613 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 17631 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45619 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 17633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 45630 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 17644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 45639 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 17652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 45647 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 17659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= NEW_PTN PT_alter_instance((yyvsp[0].alter_instance_action));
          }
#line 45656 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 17666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_action)= ROTATE_BINLOG_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 45676 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 17682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
          }
#line 45692 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 17694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-4].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-4]));
              MYSQL_YYABORT;
            }
          }
#line 45708 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 17713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 45716 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 17717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 45724 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 17726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 45732 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 17736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 45741 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 17748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 45751 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 17756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 45757 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 17757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 45763 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 17761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 45769 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 17762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 45775 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 17763 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 45781 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 17764 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 45787 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 17768 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 45793 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 17769 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 45799 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 17770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 45805 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 17771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 45811 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 17772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 45817 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 17779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 45826 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 17784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 45845 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 17799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 45854 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 17804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 45872 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 17818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 45881 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 17823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45893 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 17834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 45902 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 17840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 45921 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 17855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 45930 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 17860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 45946 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 17872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 45960 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 17884 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 45966 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 17885 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 45972 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 17886 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 45978 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 17887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 45984 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 17897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 45994 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 17903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 46004 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 17912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 46015 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 17919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 46021 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 17921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 46027 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 17923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 46033 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 17925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 46039 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 17927 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 46045 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 17929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 46051 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 17931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 46057 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 17933 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 46063 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 17935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 46069 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 17937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 46075 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 17939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 46081 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 17941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 46087 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 17943 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 46093 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 17945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 46099 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 17947 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 46105 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 17949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 46111 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 17951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 46120 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 17956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 46126 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 17958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 46144 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 17972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 46150 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 17974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 46156 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 17976 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 46162 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 17978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 46168 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 17980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 46174 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 17982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 46180 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 17984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 46186 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 17986 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 46192 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 17988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 46198 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 17990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 46204 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 17992 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 46210 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 17994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 46216 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 17996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 46222 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 17998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 46228 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 18002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 46234 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 18003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 46240 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 18018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 46254 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 18028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 46268 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 18038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 46282 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 18051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 46300 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 18065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 46316 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 18077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 46332 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 18089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 46348 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 18101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *tmp;
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 46369 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 18121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 46379 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 18127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 46389 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 18136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 46399 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 18142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 46409 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 18150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 46415 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 18151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 46421 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 18155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 46427 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 18156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 46433 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 18160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 46448 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 18171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 46463 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 18182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 46478 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 18193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 46495 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 18206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 46513 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 18220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 46529 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 18232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 46541 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 18243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 46559 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 18258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 46580 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 18275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 46595 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 18286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 46610 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 18297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 46628 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 18311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 46643 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 18323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 46660 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 18337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 46678 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 18352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 46694 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 18364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 46706 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 18375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 46715 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 18380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 46724 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 18388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 46733 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 18393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 46742 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 18400 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 46748 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 18401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 46754 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 18406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 46764 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 18412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 46774 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 18422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 46782 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 18426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 46790 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 18430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 46798 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 18434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 46806 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 18440 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46812 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 18442 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 46818 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 18446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 46824 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 18447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 46830 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 18451 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 46836 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 18453 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 46844 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 18457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 46853 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 18462 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 46859 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 18464 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 46865 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 18468 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 46871 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 18470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 46880 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 18477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 46890 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 18482 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46896 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 18486 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46902 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 18487 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46908 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 18492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46914 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 18493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46920 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 18494 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46926 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 18499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46932 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 18500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46938 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 18501 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46944 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 18505 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46950 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 18506 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46956 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 18511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46969 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 18523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46982 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 18533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 46992 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 18542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 47002 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 18551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 47012 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 18564 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 47018 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 18565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 47024 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 18566 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 47030 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 18579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[0]));

            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_expression));
          }
#line 47044 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 18591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 47050 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 18592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 47056 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 18593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 47062 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 18594 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 47068 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 18595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 47074 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 18596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 47080 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 18597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 47091 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 18603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 47097 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 18614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 47108 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 18624 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47114 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 18626 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47120 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 18628 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47126 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 18661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 47141 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 18675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 47149 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 18703 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 47155 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 18705 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 47161 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 18707 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 47167 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 18712 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 47173 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 18714 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 47179 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 18716 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 47185 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 18721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 47225 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 18761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_expression));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 47277 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 18811 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 47283 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 18812 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47289 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 18813 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 47295 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 18814 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 47301 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 18825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 47307 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 18827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 47313 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 18832 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 47322 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 18838 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 47331 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 18855 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 47367 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 18887 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 47398 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 18924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 47419 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 18942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 47440 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 18964 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 47467 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 18988 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 47475 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 18994 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 47520 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 19035 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 47532 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 19043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 47591 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 19101 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47597 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 19106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->spname= (yyvsp[0].spname);
          }
#line 47622 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 19127 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47628 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 19132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 47640 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 19140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 47653 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 19149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 47666 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 19161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (thd->variables.m_opt_parse_mode == MYSQL_PARSE_MODE)
            {
              my_message(ER_SYNTAX_ERROR, ER_THD(thd,ER_SYNTAX_ERROR), MYF(0));
              MYSQL_YYABORT;
            }

            lex->sphead->m_parser_data.set_parameter_start_ptr(YYLIP->get_cpp_tok_start());
            lex->sphead->m_parser_data.set_parameter_end_ptr(YYLIP->get_cpp_tok_start());
          }
#line 47683 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 19174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (thd->variables.m_opt_parse_mode == ORACLE_PARSE_MODE)
            {
              Lex->parse_place = IN_PARAM_LIST;
            }
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 47695 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 19183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->parse_place = IN_PARSE_INVALID;
            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 47707 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 19194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            lex->parse_place= IN_AS_STATEMENT;
            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
            sp_pcontext *child_ctx = pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);
            lex->set_sp_current_parsing_ctx(child_ctx);
          }
#line 47723 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 19205 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47729 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3029:
#line 19209 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47735 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3030:
#line 19210 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 47741 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3031:
#line 19214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 47747 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3032:
#line 19215 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[0].num); }
#line 47753 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3033:
#line 19220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 47759 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 19222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 47765 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 19227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *spc= lex->get_sp_current_parsing_ctx();

            if (spc->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            spc->add_variable(thd,
                              (yyvsp[0].lexer.lex_str),
                              MYSQL_TYPE_DECIMAL,
                              sp_variable::MODE_IN);

            lex->sphead->reset_lex(thd);
          }
#line 47788 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 19246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            CONTEXTUALIZE((yyvsp[-3].type));
            enum enum_field_types var_type= (yyvsp[-3].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-3].type)->get_charset();
            Item *dflt_value_item= (yyvsp[-1].sp_default).expr;
            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[-1].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr, (yylsp[-1]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();
              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            uint var_idx= pctx->var_context2runtime(num_vars - 1);
            sp_variable *spvar= pctx->find_variable(var_idx);

            if (!spvar)
              MYSQL_YYABORT;

            spvar->type= var_type;
            spvar->default_value= dflt_value_item;

            if (spvar->field_def.init(thd, "", var_type,
                          (yyvsp[-3].type)->get_length(), (yyvsp[-3].type)->get_dec(),
                          (yyvsp[-3].type)->get_type_flags(),
                          NULL, NULL, &NULL_CSTR, 0,
                          (yyvsp[-3].type)->get_interval_list(),
                          cs ? cs : thd->variables.collation_database,
                          (yyvsp[-2].lexer.charset) != nullptr, (yyvsp[-3].type)->get_uint_geom_type(),
                          nullptr, nullptr, {},
                          dd::Column::enum_hidden_type::HT_VISIBLE))
              MYSQL_YYABORT;

            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;

            /* The last instruction is responsible for freeing LEX. */

            sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                   lex,
                                                   var_idx,
                                                   dflt_value_item,
                                                   dflt_value_query,
                                                   true);

            if (!is || sp->add_instr(thd, is))
              MYSQL_YYABORT;

            if (lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;

            (yyval.num) = 1;
          }
#line 47863 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 19317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            lex->sp_lex_in_use= true;

            uint offp;
            sp_instr_cpush *i;

            if (pctx->find_cursor((yyvsp[-3].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              delete (yyvsp[-1].lex);
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            //if (lex->is_metadata_used())
            {
              cursor_query= make_string(thd, (yylsp[-2]).raw.end, (yylsp[-1]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            i= new sp_instr_cpush(sp->instructions(), pctx, (yyvsp[-1].lex),cursor_query,
                                  pctx->current_cursor_count());
            if (i == NULL || sp->add_instr(thd,i) || pctx->add_cursor((yyvsp[-3].lexer.lex_str)))
              MYSQL_YYABORT;
            LEX_STRING *csrName= (LEX_STRING*)sql_memdup(&(yyvsp[-3].lexer.lex_str), sizeof(LEX_STRING));
            pctx->push_cursor_instr(csrName,i,pctx->current_cursor_count());
          }
#line 47902 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 19352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offp;
            sp_instr_cpush *i;

            lex->sp_lex_in_use= true;

            if (pctx->find_cursor((yyvsp[-2].lexer.lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            LEX *sublex = NEW_PTN st_lex_local;
            if (sublex == NULL)
              MYSQL_YYABORT;
            sublex->reset();

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            i= new sp_instr_cpush(sp->instructions(), pctx, sublex,cursor_query,
                                  pctx->current_cursor_count());
            if (i == NULL ||  sp->add_instr(thd,i) || pctx->add_cursor((yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;
            i->m_cursor_type = REF_CURSOR;
            pctx->push_cursor_instr(&(yyvsp[-2].lexer.lex_str),i,pctx->current_cursor_count());
          }
#line 47937 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 19388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 47946 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 19393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 47955 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 19398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 47964 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 19403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 47973 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 19408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 47982 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 19413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 47991 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 19420 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 47997 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 19421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 48003 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 19425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 48016 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 19434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 48030 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 19444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 48049 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 19461 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 48055 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 19462 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 48061 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 19466 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 48067 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 19467 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 48073 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 19468 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 48079 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 19472 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 48085 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 19473 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 48091 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 19478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 48097 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 19480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 48103 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 19482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 48109 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 19487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 48119 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 19493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 48129 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 19502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 48139 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 19508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 48149 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 19517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 48159 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 19523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 48169 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 19532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 48182 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 19550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 48193 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 19560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 48215 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 19581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 48223 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 19585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 48231 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 19592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 48239 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 19596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 48247 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 19600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 48255 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 19606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 48261 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 19607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 48267 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 19612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 48278 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 19618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 48284 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 19623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 48295 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 19630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 48306 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 19640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 48317 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 19647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 48331 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 19659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 48337 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 19660 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 48343 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 19664 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 48349 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 19666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 48358 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 19673 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 48364 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 19675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 48373 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 19680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 48382 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 19687 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 48388 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 19688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 48394 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 48398 "/home/zc_mysql8/DB/my_build/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
